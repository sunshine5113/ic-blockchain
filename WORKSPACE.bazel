load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_rust",
    sha256 = "edb87c0d2ba70823fe3df7862676d695599314a4634b9758bd55f0e8f19c2751",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_rust/releases/download/0.4.0/rules_rust-v0.4.0.tar.gz",
        "https://github.com/bazelbuild/rules_rust/releases/download/0.4.0/rules_rust-v0.4.0.tar.gz",
    ],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(version = "1.60.0")

http_archive(
    name = "rules_proto",
    sha256 = "66bfdf8782796239d3875d37e7de19b1d94301e8972b3cbd2446b332429b4df1",
    strip_prefix = "rules_proto-4.0.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/refs/tags/4.0.0.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/refs/tags/4.0.0.tar.gz",
    ],
)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_repository", "splicing_config")

crates_repository(
    name = "crate_index",
    annotations = {
        "miracl_core_bls12381": [crate.annotation(
            rustc_flags = [
                "-C",
                "opt-level=3",
            ],
        )],
        "prost-build": [crate.annotation(
            build_script_env = {
                "PROTOC_NO_VENDOR": "1",
                "PROTOC": "$(execpath @com_google_protobuf//:protoc)",
            },
            build_script_tools = ["@com_google_protobuf//:protoc"],
        )],
    },
    isolated = True,
    lockfile = "//:Cargo.Bazel.lock",
    packages = {
        # Keep sorted.
        "anyhow": crate.spec(version = "1.0.31"),
        "arrayvec": crate.spec(version = "0.5.1"),
        "assert_matches": crate.spec(version = "1.3.0"),
        "async-stream": crate.spec(version = "0.3.3"),
        "base32": crate.spec(version = "0.4.0"),
        "base64": crate.spec(version = "0.11.0"),
        "bincode": crate.spec(version = "1.2.1"),
        "bitcoin": crate.spec(
            features = ["rand"],
            version = "0.27.1",
        ),
        "bitflags": crate.spec(version = "1.2.1"),
        "byte-unit": crate.spec(version = "1.0.1"),
        "bytes": crate.spec(version = "1.0.1"),
        "bls12_381": crate.spec(
            default_features = False,
            features = [
                "groups",
                "pairings",
                "alloc",
                "experimental",
            ],
            version = "0.5.0",
        ),
        "candid": crate.spec(version = "0.7.13"),
        "candid_derive": crate.spec(version = "0.4.5"),
        "chrono": crate.spec(version = "0.4.19"),
        "clap": crate.spec(
            features = ["derive"],
            version = "3.1.6",
        ),
        "comparable": crate.spec(
            features = ["derive"],
            version = "0.5",
        ),
        "crc32fast": crate.spec(version = "1.2.0"),
        "criterion": crate.spec(version = "0.3"),
        "csv": crate.spec(version = "1.1"),
        "cvt": crate.spec(version = "0.1.1"),
        "erased-serde": crate.spec(version = "0.3.11"),
        "features": crate.spec(version = "0.10.0"),
        "float-cmp": crate.spec(version = "0.9.0"),
        "futures-util": crate.spec(version = "0.3.21"),
        "futures": crate.spec(version = "0.3.21"),
        "hex": crate.spec(version = "0.4.3"),
        "hyper": crate.spec(version = "0.14.18"),
        "getrandom": crate.spec(
            package = "getrandom",
            version = "0.2",
        ),
        "lazy_static": crate.spec(version = "1.4.0"),
        "leb128": crate.spec(version = "0.2.4"),
        "libc": crate.spec(version = "0.2.91"),
        "maplit": crate.spec(version = "1.0.2"),
        "miracl_core_bls12381": crate.spec(version = "4.1.2"),
        "nix": crate.spec(version = "0.23.0"),
        "num-traits": crate.spec(version = "0.2.12"),
        "openssl": crate.spec(version = "0.10.29"),
        "procfs": crate.spec(
            default_features = False,
            version = "^0.9",
        ),
        "prometheus": crate.spec(
            features = ["process"],
            version = "0.13.0",
        ),
        "proptest": crate.spec(version = "0.9.4"),
        "proptest-derive": crate.spec(version = "0.1.0"),
        "prost": crate.spec(version = "0.10.3"),
        "prost-build": crate.spec(version = "0.10.3"),
        "rand": crate.spec(version = "0.8.3"),
        "rand_chacha": crate.spec(version = "0.2.2"),
        "rand_core": crate.spec(version = "0.5.1"),
        "regex": crate.spec(version = "1.3.9"),
        "scoped_threadpool": crate.spec(version = "0.1.0"),
        "serde_bytes": crate.spec(version = "0.11.6"),
        "serde_cbor": crate.spec(version = "0.11.1"),
        "serde_derive": crate.spec(version = "1.0.136"),
        "serde_json": crate.spec(version = "1.0.40"),
        "serde": crate.spec(version = "1.0.136"),
        "sha2": crate.spec(version = "0.9.1"),
        "simple_asn1": crate.spec(version = "0.5.4"),
        "slog": crate.spec(
            features = [
                "nested-values",
                "max_level_trace",
                "release_max_level_debug",
            ],
            version = "2.5.2",
        ),
        "slog-json": crate.spec(
            features = ["nested-values"],
            version = "2.3",
        ),
        "slog_derive": crate.spec(version = "0.2.0"),
        "strum": crate.spec(version = "0.23.0"),
        "strum_macros": crate.spec(version = "0.23.0"),
        "tempfile": crate.spec(version = "3.1.0"),
        "thiserror": crate.spec(version = "1.0"),
        "tokio": crate.spec(
            features = ["full"],
            version = "1.18.1",
        ),
        "tonic": crate.spec(version = "0.7.2"),
        "uuid": crate.spec(
            features = ["v4"],
            version = "0.8.1",
        ),
        "wsl": crate.spec(version = "0.1.0"),
        "wycheproof": crate.spec(version = "0.4"),
        "zeroize": crate.spec(
            features = ["zeroize_derive"],
            version = "1.4.3",
        ),
    },
    splicing_config = splicing_config(
        resolver_version = "2",
    ),
)

load("@crate_index//:defs.bzl", "crate_repositories")

crate_repositories()

# We need another repository for customizing packages for Wasm targest.
# TODO: remove the second lock file once https://github.com/bazelbuild/rules_rust/issues/1337 is fixed.
crates_repository(
    name = "wasm_crate_index",
    isolated = True,
    lockfile = "//:Wasm.Cargo.Bazel.lock",
    packages = {
        "getrandom": crate.spec(
            features = ["custom"],
            version = "0.2",
        ),
    },
    splicing_config = splicing_config(
        resolver_version = "2",
    ),
)

load("@wasm_crate_index//:defs.bzl", wasm_crate_repositories = "crate_repositories")

wasm_crate_repositories()

http_archive(
    name = "buildifier_prebuilt",
    sha256 = "0450069a99db3d414eff738dd8ad4c0969928af13dc8614adbd1c603a835caad",
    strip_prefix = "buildifier-prebuilt-0.4.0",
    urls = [
        "http://github.com/keith/buildifier-prebuilt/archive/0.4.0.tar.gz",
    ],
)

load("@buildifier_prebuilt//:deps.bzl", "buildifier_prebuilt_deps")

buildifier_prebuilt_deps()

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

load("@buildifier_prebuilt//:defs.bzl", "buildifier_prebuilt_register_toolchains")

buildifier_prebuilt_register_toolchains()
