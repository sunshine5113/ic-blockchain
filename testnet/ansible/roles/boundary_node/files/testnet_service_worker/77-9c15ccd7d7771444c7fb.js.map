{"version":3,"sources":["webpack://ic-agent-sw-cert-app/webpack/runtime/chunk loaded","webpack://ic-agent-sw-cert-app/webpack/runtime/startup chunk dependencies","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/agent/api.js","webpack://ic-agent-sw-cert-app/../packages/principal/lib/esm/utils/base32.js","webpack://ic-agent-sw-cert-app/../packages/principal/lib/esm/utils/getCrc.js","webpack://ic-agent-sw-cert-app/../packages/principal/lib/esm/index.js","webpack://ic-agent-sw-cert-app/../packages/principal/lib/esm/utils/sha224.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/utils/leb128.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/types.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/request_id.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/auth.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/cbor.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/agent/http/transforms.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/agent/http/types.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/agent/http/index.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/agent/proxy.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/agent/index.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/canisters/management_idl.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/canisters/management.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/errors.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/utils/hash.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/idl.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/vendor/bls/bls.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/utils/bls.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/certificate.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/polling/index.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/actor.js","webpack://ic-agent-sw-cert-app/../packages/agent/lib/esm/polling/strategy.js","webpack://ic-agent-sw-cert-app/./src/sw/validation.ts","webpack://ic-agent-sw-cert-app/./src/sw/http_request.ts","webpack://ic-agent-sw-cert-app/./src/sw/sw.ts","webpack://ic-agent-sw-cert-app/webpack/bootstrap","webpack://ic-agent-sw-cert-app/webpack/runtime/amd options","webpack://ic-agent-sw-cert-app/webpack/runtime/compat get default export","webpack://ic-agent-sw-cert-app/webpack/runtime/define property getters","webpack://ic-agent-sw-cert-app/webpack/runtime/ensure chunk","webpack://ic-agent-sw-cert-app/webpack/runtime/get javascript chunk filename","webpack://ic-agent-sw-cert-app/webpack/runtime/global","webpack://ic-agent-sw-cert-app/webpack/runtime/hasOwnProperty shorthand","webpack://ic-agent-sw-cert-app/webpack/runtime/make namespace object","webpack://ic-agent-sw-cert-app/webpack/runtime/publicPath","webpack://ic-agent-sw-cert-app/webpack/runtime/importScripts chunk loading","webpack://ic-agent-sw-cert-app/webpack/startup"],"names":["deferred","next","ReplicaRejectCode","alphabet","lookupTable","Object","create","i","length","o","lookUpTable","Uint32Array","_arr","this","_isPrincipal","Uint8Array","publicKey","sha","data","shaObj","update","array","sha224","other","fromText","Error","JSON","stringify","hex","_a","match","map","byte","parseInt","text","arr","input","skip","output","decodeChar","char","val","toLowerCase","undefined","c","slice","decode","replace","principal","toText","byteLength","bytes","reduce","str","toString","padStart","toUpperCase","checksumArrayBuf","ArrayBuffer","DataView","setUint32","buf","b","crc","getCrc32","checksum","from","matches","bits","encode","join","safeRead","pipe","num","buffer","read","value","BigInt","Number","write","lebDecode","weight","valueOf","slebEncode","isNeg","getLowerBytes","slebDecode","pipeView","len","writeIntLE","mul","sub","readUIntLE","blobFromText","blobFromHex","requestId","hash","hashed","arrayBuffer","hashValue","hashString","Array","isArray","vals","toUint8Array","toHash","assign","encoded","TextEncoder","concat","bs","AnonymousIdentity","request","body","content","serializer","SelfDescribeCborSerializer","CborTag","addEncoder","v","serialize","decodePositiveBigInt","res","size","tags","2","3","Semantic","decodeFirst","NANOSECONDS_PER_MILLISECONDS","REPLICA_PERMITTED_DRIFT_MILLISECONDS","Expiry","deltaInMSec","_value","Date","now","SubmitRequestType","RequestStatusResponseStatus","DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS","HttpAgent","options","_pipeline","_rootKeyFetched","rootKey","source","_identity","_fetch","_host","_credentials","fetch","result","window","g","self","bind","getDefaultFetch","host","URL","location","protocol","credentials","name","password","Promise","resolve","identity","fn","priority","findIndex","x","splice","getPrincipal","canisterId","id","canister","ecid","effectiveCanisterId","sender","submit","request_type","Call","canister_id","method_name","methodName","arg","ingress_expiry","transformedRequest","_transform","method","headers","Authorization","btoa","endpoint","transformRequest","response","all","entries","filter","key","sort","k1","k2","ok","status","statusText","fields","paths","root_key","p","then","r","r2","ProxyMessageKind","getDefaultAgent","agent","ic","IDL","Principal","wasm_module","Vec","Nat8","CanisterSettings","Record","compute_allocation","Opt","Nat","memory_allocation","Service","provisional_create_canister_with_cycles","Func","amount","settings","create_canister","install_code","mode","Variant","install","Null","reinstall","upgrade","set_controller","new_controller","getManagementCanister","config","transform","args","callConfig","first","callTransform","queryTransform","AgentError","idlLabelToId","label","test","isSafeInteger","s","h","idlHash","magicNumber","zipWith","xs","ys","f","TypeTable","_typs","_idx","Map","obj","has","type","idx","set","push","knot","get","knotIdx","delete","typeName","Visitor","t","visitType","visitPrimitive","visitNumber","ty","visitConstruct","components","visitRecord","Type","typeTable","_buildTypeTableImpl","PrimitiveType","ConstructType","RecClass","getType","indexOf","EmptyClass","d","visitEmpty","BoolClass","visitBool","writeInt8","checkType","NullClass","visitNull","ReservedClass","visitReserved","decodeValue","isValidUTF8","TextClass","visitText","IntClass","visitInt","isInteger","NatClass","visitNat","FloatClass","_bits","super","visitFloat","writeFloatLE","writeDoubleLE","readFloatLE","readDoubleLE","FixedIntClass","visitFixedInt","min","max","Math","log2","readIntLE","FixedNatClass","visitFixedNat","writeUIntLE","VecClass","_type","_blobOptimization","visitVec","every","covariant","encodeValue","buildTypeTable","opCode","encodeType","add","vec","rets","display","e","valueToString","OptClass","visitOpt","opt","RecordClass","_fields","a","k","hasOwnProperty","values","bufs","T","forEach","_","record","expectKey","expectType","TupleClass","_components","visitTuple","tuple","wireType","VariantClass","visitVariant","variant","wireHash","arguments","_id","_counter","visitRec","merge","decodePrincipalId","PrincipalClass","visitPrincipal","toHex","FuncClass","argTypes","retTypes","annotations","types","visitFunc","methodLen","argLen","retLen","annLen","anns","encodeAnnotation","ann","ServiceClass","visitService","func","meths","labelBuf","labelLen","magic","table","typs","toReadableString","rawTable","rawTypes","prevHash","objectLength","pow","funcLength","servLength","rawList","readTypeTable","Rec","Bool","Int","Nat16","Nat32","Nat64","Int8","Int16","Int32","Int64","Float32","Float64","Text","Reserved","Empty","entry","tryAsTuple","Tuple","buildType","fill","ind","ret","wasm","wasmBytesBase64","wasmBytes","cachegetUint8Memory0","passArray8ToWasm0","malloc","ptr","memory","async","init","instance","module","imports","Response","WebAssembly","instantiate","Instance","load","exports","__wbindgen_wasm_module","verify","blsVerify","pk","sig","msg","bls_init","pk1","sig1","msg1","m","w","ptr0","len0","__wbindgen_malloc","ptr1","len1","ptr2","len2","bls_verify","UnverifiedCertificateError","isBufferEqual","Certificate","_agent","verified","_rootKey","cert","certificate","path","checkState","lookupPathEx","tree","lookup_path","rootHash","reconstruct","derKey","_checkDelegation","delegation","signature","expectedLength","DER_PREFIX","TypeError","prefix","extractDER","domain_sep","lookup","lookupEx","subnet_id","writeUInt8","maybeReturn","blob","l","trees","find_label","flatten_forks","pollForResponse","strategy","state","readState","maybeBuf","Unknown","Replied","Received","Processing","Rejected","rejectCode","rejectMessage","Done","ActorCallError","props","getOwnPropertyNames","n","QueryCallRejectedError","Status","Code","reject_code","Message","reject_message","UpdateCallRejectedError","CanisterInstallMode","metadataSymbol","Symbol","for","metadata","freeze","actor","service","Install","wasmModule","interfaceFactory","createCanister","createActor","DEFAULT_ACTOR_CONFIG","_createActorMethod","configuration","createActorClass","decodeReturnValue","returnValues","pollingStrategyFactory","strategies","chain","condition","once","setTimeout","startingThrottleInMsec","backoffFactor","currentThrottling","backoff","timeInMsec","end","timeout","caller","includes","_b","call","cid","query","reply","pollStrategy","responseBytes","handler","withOptions","validateBody","shouldFetchRootKey","fetchRootKey","hashTree","reconstructed","witness","equal","console","error","crypto","subtle","digest","treeSha","buf1","buf2","a1","a2","hostnameCanisterIdMap","swLocation","_swCanisterId","swDomains","splitHostnameForCanisterId","hostname","maybeFixed","subdomains","split","reverse","topdomains","domain","maybeResolveCanisterIdFromHostName","maybeCanisterId","resolveCanisterIdFromUrl","urlString","isLocal","url","searchParams","maybeResolveCanisterIdFromSearchParam","canisterIdlFactory","HeaderField","HttpRequest","HttpResponse","status_code","http_request","handleRequest","pathname","startsWith","referrer","maybeHostHeader","maybeRefererHeader","maybeResolveCanisterIdFromHeaders","maybeResolveCanisterIdFromHttpRequest","replicaUrl","origin","requestHeaders","httpRequest","search","httpResponse","Headers","encoding","trim","_0","b64Value","append","decodeBody","bodyValid","endsWith","addEventListener","skipWaiting","event","respondWith","message","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","__webpack_exports__","O","amdO","chunkIds","notFulfilled","Infinity","fulfilled","j","keys","getter","__esModule","definition","defineProperty","enumerable","chunkId","promises","u","globalThis","Function","prop","prototype","toStringTag","installedChunks","77","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime","pop"],"mappings":"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","file":"77-9c15ccd7d7771444c7fb.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(113).then(next);\n};","/**\n * Codes used by the replica for rejecting a message.\n * See {@link https://sdk.dfinity.org/docs/interface-spec/#reject-codes | the interface spec}.\n */\nexport var ReplicaRejectCode;\n(function (ReplicaRejectCode) {\n    ReplicaRejectCode[ReplicaRejectCode[\"SysFatal\"] = 1] = \"SysFatal\";\n    ReplicaRejectCode[ReplicaRejectCode[\"SysTransient\"] = 2] = \"SysTransient\";\n    ReplicaRejectCode[ReplicaRejectCode[\"DestinationInvalid\"] = 3] = \"DestinationInvalid\";\n    ReplicaRejectCode[ReplicaRejectCode[\"CanisterReject\"] = 4] = \"CanisterReject\";\n    ReplicaRejectCode[ReplicaRejectCode[\"CanisterError\"] = 5] = \"CanisterError\";\n})(ReplicaRejectCode || (ReplicaRejectCode = {}));\n//# sourceMappingURL=api.js.map","// tslint:disable:no-bitwise\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\n// Build a lookup table for decoding.\nconst lookupTable = Object.create(null);\nfor (let i = 0; i < alphabet.length; i++) {\n    lookupTable[alphabet[i]] = i;\n}\n// Add aliases for rfc4648.\nlookupTable['0'] = lookupTable.o;\nlookupTable['1'] = lookupTable.i;\n/**\n * @param input The input array to encode.\n * @returns A Base32 string encoding the input.\n */\nexport function encode(input) {\n    // How many bits will we skip from the first byte.\n    let skip = 0;\n    // 5 high bits, carry from one byte to the next.\n    let bits = 0;\n    // The output string in base32.\n    let output = '';\n    function encodeByte(byte) {\n        if (skip < 0) {\n            // we have a carry from the previous byte\n            bits |= byte >> -skip;\n        }\n        else {\n            // no carry\n            bits = (byte << skip) & 248;\n        }\n        if (skip > 3) {\n            // Not enough data to produce a character, get us another one\n            skip -= 8;\n            return 1;\n        }\n        if (skip < 4) {\n            // produce a character\n            output += alphabet[bits >> 3];\n            skip += 5;\n        }\n        return 0;\n    }\n    for (let i = 0; i < input.length;) {\n        i += encodeByte(input[i]);\n    }\n    return output + (skip < 0 ? alphabet[bits >> 3] : '');\n}\n/**\n * @param input The base32 encoded string to decode.\n */\nexport function decode(input) {\n    // how many bits we have from the previous character.\n    let skip = 0;\n    // current byte we're producing.\n    let byte = 0;\n    const output = new Uint8Array(((input.length * 4) / 3) | 0);\n    let o = 0;\n    function decodeChar(char) {\n        // Consume a character from the stream, store\n        // the output in this.output. As before, better\n        // to use update().\n        let val = lookupTable[char.toLowerCase()];\n        if (val === undefined) {\n            throw new Error(`Invalid character: ${JSON.stringify(char)}`);\n        }\n        // move to the high bits\n        val <<= 3;\n        byte |= val >>> skip;\n        skip += 5;\n        if (skip >= 8) {\n            // We have enough bytes to produce an output\n            output[o++] = byte;\n            skip -= 8;\n            if (skip > 0) {\n                byte = (val << (5 - skip)) & 255;\n            }\n            else {\n                byte = 0;\n            }\n        }\n    }\n    for (const c of input) {\n        decodeChar(c);\n    }\n    return output.slice(0, o);\n}\n//# sourceMappingURL=base32.js.map","// tslint:disable:no-bitwise\n// This file is translated to JavaScript from\n// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/\nconst lookUpTable = new Uint32Array([\n    0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n    0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n    0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n    0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n    0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n    0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n    0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n    0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n    0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n    0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n    0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n    0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n    0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n    0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n    0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n    0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n    0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n    0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n    0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n    0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n    0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n    0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n    0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n    0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n    0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n    0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n    0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n    0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n    0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n    0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n    0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n    0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n]);\n/**\n * Calculate the CRC32 of a blob.\n * @param buf The blob to calculate the CRC32 of.\n */\nexport function getCrc32(buf) {\n    const b = new Uint8Array(buf);\n    let crc = -1;\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < b.length; i++) {\n        const byte = b[i];\n        const t = (byte ^ crc) & 0xff;\n        crc = lookUpTable[t] ^ (crc >>> 8);\n    }\n    return (crc ^ -1) >>> 0;\n}\n//# sourceMappingURL=getCrc.js.map","import { decode, encode } from './utils/base32';\nimport { getCrc32 } from './utils/getCrc';\nimport { sha224 } from './utils/sha224';\nconst SELF_AUTHENTICATING_SUFFIX = 2;\nconst ANONYMOUS_SUFFIX = 4;\nconst fromHexString = (hexString) => { var _a; return new Uint8Array(((_a = hexString.match(/.{1,2}/g)) !== null && _a !== void 0 ? _a : []).map(byte => parseInt(byte, 16))); };\nconst toHexString = (bytes) => bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\nexport class Principal {\n    constructor(_arr) {\n        this._arr = _arr;\n        this._isPrincipal = true;\n    }\n    static anonymous() {\n        return new this(new Uint8Array([ANONYMOUS_SUFFIX]));\n    }\n    static selfAuthenticating(publicKey) {\n        const sha = sha224(publicKey);\n        return new this(new Uint8Array([...sha, SELF_AUTHENTICATING_SUFFIX]));\n    }\n    static from(other) {\n        if (typeof other === 'string') {\n            return Principal.fromText(other);\n        }\n        else if (typeof other === 'object' &&\n            other !== null &&\n            other._isPrincipal === true) {\n            return new Principal(other._arr);\n        }\n        throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);\n    }\n    static fromHex(hex) {\n        return new this(fromHexString(hex));\n    }\n    static fromText(text) {\n        const canisterIdNoDash = text.toLowerCase().replace(/-/g, '');\n        let arr = decode(canisterIdNoDash);\n        arr = arr.slice(4, arr.length);\n        const principal = new this(arr);\n        if (principal.toText() !== text) {\n            throw new Error(`Principal \"${principal.toText()}\" does not have a valid checksum.`);\n        }\n        return principal;\n    }\n    static fromUint8Array(arr) {\n        return new this(arr);\n    }\n    isAnonymous() {\n        return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;\n    }\n    toUint8Array() {\n        return this._arr;\n    }\n    toHex() {\n        return toHexString(this._arr).toUpperCase();\n    }\n    toText() {\n        const checksumArrayBuf = new ArrayBuffer(4);\n        const view = new DataView(checksumArrayBuf);\n        view.setUint32(0, getCrc32(this._arr));\n        const checksum = Uint8Array.from(Buffer.from(checksumArrayBuf));\n        const bytes = Uint8Array.from(this._arr);\n        const array = new Uint8Array([...checksum, ...bytes]);\n        const result = encode(array);\n        const matches = result.match(/.{1,5}/g);\n        if (!matches) {\n            // This should only happen if there's no character, which is unreachable.\n            throw new Error();\n        }\n        return matches.join('-');\n    }\n    toString() {\n        return this.toText();\n    }\n}\n//# sourceMappingURL=index.js.map","import { sha224 as jsSha224 } from 'js-sha256';\n/**\n *\n * @param data Arraybuffer to encode\n * @returns sha244-encoded BinaryBlob\n */\nexport function sha224(data) {\n    const shaObj = jsSha224.create();\n    shaObj.update(data);\n    return new Uint8Array(shaObj.array());\n}\n//# sourceMappingURL=sha224.js.map","import Pipe from 'buffer-pipe';\nimport { Buffer } from 'buffer/';\nexport function safeRead(pipe, num) {\n    if (pipe.buffer.length < num) {\n        throw new Error('unexpected end of buffer');\n    }\n    return pipe.read(num);\n}\n/**\n * Encode a positive number (or bigint) into a Buffer. The number will be floored to the\n * nearest integer.\n * @param value The number to encode.\n */\nexport function lebEncode(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    if (value < BigInt(0)) {\n        throw new Error('Cannot leb encode negative values.');\n    }\n    const pipe = new Pipe();\n    while (true) {\n        const i = Number(value & BigInt(0x7f));\n        value /= BigInt(0x80);\n        if (value === BigInt(0)) {\n            pipe.write([i]);\n            break;\n        }\n        else {\n            pipe.write([i | 0x80]);\n        }\n    }\n    return new Buffer(pipe.buffer);\n}\n/**\n * Decode a leb encoded buffer into a bigint. The number will always be positive (does not\n * support signed leb encoding).\n * @param pipe A Buffer containing the leb encoded bits.\n */\nexport function lebDecode(pipe) {\n    let weight = BigInt(1);\n    let value = BigInt(0);\n    let byte;\n    do {\n        byte = safeRead(pipe, 1)[0];\n        value += BigInt(byte & 0x7f).valueOf() * weight;\n        weight *= BigInt(128);\n    } while (byte >= 0x80);\n    return value;\n}\n/**\n * Encode a number (or bigint) into a Buffer, with support for negative numbers. The number\n * will be floored to the nearest integer.\n * @param value The number to encode.\n */\nexport function slebEncode(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    const isNeg = value < BigInt(0);\n    if (isNeg) {\n        value = -value - BigInt(1);\n    }\n    const pipe = new Pipe();\n    while (true) {\n        const i = getLowerBytes(value);\n        value /= BigInt(0x80);\n        // prettier-ignore\n        if ((isNeg && value === BigInt(0) && (i & 0x40) !== 0)\n            || (!isNeg && value === BigInt(0) && (i & 0x40) === 0)) {\n            pipe.write([i]);\n            break;\n        }\n        else {\n            pipe.write([i | 0x80]);\n        }\n    }\n    function getLowerBytes(num) {\n        const bytes = num % BigInt(0x80);\n        if (isNeg) {\n            // We swap the bits here again, and remove 1 to do two's complement.\n            return Number(BigInt(0x80) - bytes - BigInt(1));\n        }\n        else {\n            return Number(bytes);\n        }\n    }\n    return new Buffer(pipe.buffer);\n}\n/**\n * Decode a leb encoded buffer into a bigint. The number is decoded with support for negative\n * signed-leb encoding.\n * @param pipe A Buffer containing the signed leb encoded bits.\n */\nexport function slebDecode(pipe) {\n    // Get the size of the buffer, then cut a buffer of that size.\n    const pipeView = new Uint8Array(pipe.buffer);\n    let len = 0;\n    for (; len < pipeView.byteLength; len++) {\n        if (pipeView[len] < 0x80) {\n            // If it's a positive number, we reuse lebDecode.\n            if ((pipeView[len] & 0x40) === 0) {\n                return lebDecode(pipe);\n            }\n            break;\n        }\n    }\n    const bytes = new Uint8Array(safeRead(pipe, len + 1));\n    let value = BigInt(0);\n    for (let i = bytes.byteLength - 1; i >= 0; i--) {\n        value = value * BigInt(0x80) + BigInt(0x80 - (bytes[i] & 0x7f) - 1);\n    }\n    return -value - BigInt(1);\n}\nexport function writeUIntLE(value, byteLength) {\n    if (BigInt(value) < BigInt(0)) {\n        throw new Error('Cannot write negative values.');\n    }\n    return writeIntLE(value, byteLength);\n}\nexport function writeIntLE(value, byteLength) {\n    value = BigInt(value);\n    const pipe = new Pipe();\n    let i = 0;\n    let mul = BigInt(256);\n    let sub = BigInt(0);\n    let byte = Number(value % mul);\n    pipe.write([byte]);\n    while (++i < byteLength) {\n        if (value < 0 && sub === BigInt(0) && byte !== 0) {\n            sub = BigInt(1);\n        }\n        byte = Number((value / mul - sub) % BigInt(256));\n        pipe.write([byte]);\n        mul *= BigInt(256);\n    }\n    return new Buffer(pipe.buffer);\n}\nexport function readUIntLE(pipe, byteLength) {\n    let val = BigInt(safeRead(pipe, 1)[0]);\n    let mul = BigInt(1);\n    let i = 0;\n    while (++i < byteLength) {\n        mul *= BigInt(256);\n        const byte = BigInt(safeRead(pipe, 1)[0]);\n        val = val + mul * byte;\n    }\n    return val;\n}\nexport function readIntLE(pipe, byteLength) {\n    let val = readUIntLE(pipe, byteLength);\n    const mul = BigInt(2) ** (BigInt(8) * BigInt(byteLength - 1) + BigInt(7));\n    if (val >= mul) {\n        val -= mul * BigInt(2);\n    }\n    return val;\n}\n//# sourceMappingURL=leb128.js.map","import { Buffer } from 'buffer/';\nimport { lebEncode } from './utils/leb128';\nexport function blobFromBuffer(b) {\n    return b;\n}\nexport function blobFromUint8Array(arr) {\n    return Buffer.from(arr);\n}\nexport function blobFromText(text) {\n    return Buffer.from(text);\n}\nexport function blobFromUint32Array(arr) {\n    return Buffer.from(arr);\n}\nexport function derBlobFromBlob(blob) {\n    return blob;\n}\nexport function blobFromHex(hex) {\n    return Buffer.from(hex, 'hex');\n}\nexport function blobToHex(blob) {\n    return blob.toString('hex');\n}\nexport function blobToUint8Array(blob) {\n    return new Uint8Array(blob.slice(0, blob.byteLength));\n}\n/**\n * Create a random Nonce, based on date and a random suffix.\n */\nexport function makeNonce() {\n    return lebEncode(BigInt(+Date.now()) * BigInt(100000) + BigInt(Math.floor(Math.random() * 100000)));\n}\n//# sourceMappingURL=types.js.map","import { sha256 as jsSha256 } from 'js-sha256';\nimport borc from 'borc';\nimport { Buffer } from 'buffer/';\nimport { blobFromBuffer, blobFromUint8Array, blobToHex } from './types';\nimport { lebEncode } from './utils/leb128';\nimport { Principal } from '@dfinity/principal';\n/**\n * get RequestId as hex-encoded blob.\n * @param requestId - RequestId to hex\n */\nexport function toHex(requestId) {\n    return blobToHex(requestId);\n}\n/**\n * sha256 hash the provided Buffer\n * @param data - input to hash function\n */\nexport function hash(data) {\n    const hashed = jsSha256.create().update(data).arrayBuffer();\n    return blobFromUint8Array(new Uint8Array(hashed));\n}\nfunction hashValue(value) {\n    if (value instanceof borc.Tagged) {\n        return hashValue(value.value);\n    }\n    else if (typeof value === 'string') {\n        return hashString(value);\n    }\n    else if (typeof value === 'number') {\n        return hash(lebEncode(value));\n    }\n    else if (Buffer.isBuffer(value)) {\n        return hash(blobFromUint8Array(new Uint8Array(value)));\n    }\n    else if (value instanceof Uint8Array || value instanceof ArrayBuffer) {\n        return hash(blobFromUint8Array(new Uint8Array(value)));\n    }\n    else if (Array.isArray(value)) {\n        const vals = value.map(hashValue);\n        return hash(Buffer.concat(vals));\n    }\n    else if (value instanceof Principal) {\n        return hash(blobFromUint8Array(value.toUint8Array()));\n    }\n    else if (typeof value === 'object' &&\n        value !== null &&\n        typeof value.toHash === 'function') {\n        return hashValue(value.toHash());\n        // TODO This should be move to a specific async method as the webauthn flow required\n        // the flow to be synchronous to ensure Safari touch id works.\n        // } else if (value instanceof Promise) {\n        //   return value.then(x => hashValue(x));\n    }\n    else if (typeof value === 'bigint') {\n        // Do this check much later than the other bigint check because this one is much less\n        // type-safe.\n        // So we want to try all the high-assurance type guards before this 'probable' one.\n        return hash(lebEncode(value));\n    }\n    throw Object.assign(new Error(`Attempt to hash a value of unsupported type: ${value}`), {\n        // include so logs/callers can understand the confusing value.\n        // (when stringified in error message, prototype info is lost)\n        value,\n    });\n}\nconst hashString = (value) => {\n    const encoder = new TextEncoder();\n    const encoded = encoder.encode(value);\n    return hash(Buffer.from(encoded));\n};\n/**\n * Concatenate many blobs.\n * @param bs - blobs to concatenate\n */\nfunction concat(bs) {\n    return blobFromBuffer(Buffer.concat(bs));\n}\n/**\n * Get the RequestId of the provided ic-ref request.\n * RequestId is the result of the representation-independent-hash function.\n * https://sdk.dfinity.org/docs/interface-spec/index.html#hash-of-map\n * @param request - ic-ref request to hash into RequestId\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function requestIdOf(request) {\n    const hashed = Object.entries(request)\n        .filter(([, value]) => value !== undefined)\n        .map(([key, value]) => {\n        const hashedKey = hashString(key);\n        const hashedValue = hashValue(value);\n        return [hashedKey, hashedValue];\n    });\n    const traversed = hashed;\n    const sorted = traversed.sort(([k1], [k2]) => {\n        return Buffer.compare(Buffer.from(k1), Buffer.from(k2));\n    });\n    const concatenated = concat(sorted.map(concat));\n    const requestId = hash(concatenated);\n    return requestId;\n}\n//# sourceMappingURL=request_id.js.map","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Buffer } from 'buffer/';\nimport { Principal } from '@dfinity/principal';\nimport { requestIdOf } from './request_id';\nimport { blobFromBuffer } from './types';\nconst domainSeparator = Buffer.from(new TextEncoder().encode('\\x0Aic-request'));\n/**\n * An Identity that can sign blobs.\n */\nexport class SignIdentity {\n    /**\n     * Get the principal represented by this identity. Normally should be a\n     * `Principal.selfAuthenticating()`.\n     */\n    getPrincipal() {\n        if (!this._principal) {\n            this._principal = Principal.selfAuthenticating(this.getPublicKey().toDer());\n        }\n        return this._principal;\n    }\n    /**\n     * Transform a request into a signed version of the request. This is done last\n     * after the transforms on the body of a request. The returned object can be\n     * anything, but must be serializable to CBOR.\n     * @param request - internet computer request to transform\n     */\n    async transformRequest(request) {\n        const { body } = request, fields = __rest(request, [\"body\"]);\n        const requestId = await requestIdOf(body);\n        return Object.assign(Object.assign({}, fields), { body: {\n                content: body,\n                sender_pubkey: this.getPublicKey().toDer(),\n                sender_sig: await this.sign(blobFromBuffer(Buffer.concat([domainSeparator, requestId]))),\n            } });\n    }\n}\nexport class AnonymousIdentity {\n    getPrincipal() {\n        return Principal.anonymous();\n    }\n    async transformRequest(request) {\n        return Object.assign(Object.assign({}, request), { body: { content: request.body } });\n    }\n}\n/**\n * Create an IdentityDescriptor from a @dfinity/authentication Identity\n * @param identity - identity describe in returned descriptor\n */\nexport function createIdentityDescriptor(identity) {\n    const identityIndicator = 'getPublicKey' in identity\n        ? { type: 'PublicKeyIdentity', publicKey: identity.getPublicKey().toDer().toString('hex') }\n        : { type: 'AnonymousIdentity' };\n    return identityIndicator;\n}\n/**\n * Type Guard for whether the unknown value is an IdentityDescriptor or not.\n * @param value - value to type guard\n */\nexport function isIdentityDescriptor(value) {\n    var _a, _b;\n    switch ((_a = value) === null || _a === void 0 ? void 0 : _a.type) {\n        case 'AnonymousIdentity':\n            return true;\n        case 'PublicKeyIdentity':\n            if (typeof ((_b = value) === null || _b === void 0 ? void 0 : _b.publicKey) !== 'string') {\n                return false;\n            }\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=auth.js.map","// tslint:disable:max-classes-per-file\n// This file is based on:\n// tslint:disable-next-line: max-line-length\n// https://github.com/dfinity-lab/dfinity/blob/9bca65f8edd65701ea6bdb00e0752f9186bbc893/docs/spec/public/index.adoc#cbor-encoding-of-requests-and-responses\nimport borc from 'borc';\nimport { Buffer } from 'buffer/';\nimport * as cbor from 'simple-cbor';\nimport { SelfDescribeCborSerializer } from 'simple-cbor';\nimport { blobFromBuffer, blobFromHex } from './types';\n// We are using hansl/simple-cbor for CBOR serialization, to avoid issues with\n// encoding the uint64 values that the HTTP handler of the client expects for\n// canister IDs. However, simple-cbor does not yet provide deserialization so\n// we are using `Uint8Array` so that we can use the dignifiedquire/borc CBOR\n// decoder.\nclass PrincipalEncoder {\n    get name() {\n        return 'Principal';\n    }\n    get priority() {\n        return 0;\n    }\n    match(value) {\n        return value && value._isPrincipal === true;\n    }\n    encode(v) {\n        return cbor.value.bytes(v.toUint8Array().buffer);\n    }\n}\nclass BufferEncoder {\n    get name() {\n        return 'Buffer';\n    }\n    get priority() {\n        return 1;\n    }\n    match(value) {\n        return Buffer.isBuffer(value);\n    }\n    encode(v) {\n        return cbor.value.bytes(new Uint8Array(v));\n    }\n}\nclass BigIntEncoder {\n    get name() {\n        return 'BigInt';\n    }\n    get priority() {\n        return 1;\n    }\n    match(value) {\n        return typeof value === `bigint`;\n    }\n    encode(v) {\n        // Always use a bigint encoding.\n        if (v > BigInt(0)) {\n            return cbor.value.tagged(2, cbor.value.bytes(blobFromHex(v.toString(16))));\n        }\n        else {\n            return cbor.value.tagged(3, cbor.value.bytes(blobFromHex((BigInt('-1') * v).toString(16))));\n        }\n    }\n}\nconst serializer = SelfDescribeCborSerializer.withDefaultEncoders(true);\nserializer.addEncoder(new PrincipalEncoder());\nserializer.addEncoder(new BufferEncoder());\nserializer.addEncoder(new BigIntEncoder());\nexport var CborTag;\n(function (CborTag) {\n    CborTag[CborTag[\"Uint64LittleEndian\"] = 71] = \"Uint64LittleEndian\";\n    CborTag[CborTag[\"Semantic\"] = 55799] = \"Semantic\";\n})(CborTag || (CborTag = {}));\nexport const encode = (value) => {\n    return blobFromBuffer(Buffer.from(serializer.serialize(value)));\n};\nfunction decodePositiveBigInt(buf) {\n    const len = buf.byteLength;\n    let res = BigInt(0);\n    for (let i = 0; i < len; i++) {\n        // tslint:disable-next-line:no-bitwise\n        res = res * BigInt(0x100) + BigInt(buf[i]);\n    }\n    return res;\n}\nexport function decode(input) {\n    const decoder = new borc.Decoder({\n        size: input.byteLength,\n        tags: {\n            // Override tags 2 and 3 for BigInt support (borc supports only BigNumber).\n            2: val => decodePositiveBigInt(val),\n            3: val => -decodePositiveBigInt(val),\n            [CborTag.Semantic]: (value) => value,\n        },\n    });\n    const result = decoder.decodeFirst(input);\n    return result;\n}\n//# sourceMappingURL=cbor.js.map","import * as cbor from 'simple-cbor';\nimport { makeNonce } from '../../types';\nimport { lebEncode } from '../../utils/leb128';\nconst NANOSECONDS_PER_MILLISECONDS = BigInt(1000000);\nconst REPLICA_PERMITTED_DRIFT_MILLISECONDS = BigInt(60 * 1000);\nexport class Expiry {\n    constructor(deltaInMSec) {\n        // Use bigint because it can overflow the maximum number allowed in a double float.\n        this._value =\n            (BigInt(Date.now()) + BigInt(deltaInMSec) - REPLICA_PERMITTED_DRIFT_MILLISECONDS) *\n                NANOSECONDS_PER_MILLISECONDS;\n    }\n    toCBOR() {\n        // TODO: change this to take the minimum amount of space (it always takes 8 bytes now).\n        return cbor.value.u64(this._value.toString(16), 16);\n    }\n    toHash() {\n        return lebEncode(this._value);\n    }\n}\n/**\n * Create a Nonce transform, which takes a function that returns a Buffer, and adds it\n * as the nonce to every call requests.\n * @param nonceFn A function that returns a buffer. By default uses a semi-random method.\n */\nexport function makeNonceTransform(nonceFn = makeNonce) {\n    return async (request) => {\n        // Nonce are only useful for async calls, to prevent replay attacks. Other types of\n        // calls don't need Nonce so we just skip creating one.\n        if (request.endpoint === \"call\" /* Call */) {\n            request.body.nonce = nonceFn();\n        }\n    };\n}\n/**\n * Create a transform that adds a delay (by default 5 minutes) to the expiry.\n *\n * @param delayInMilliseconds The delay to add to the call time, in milliseconds.\n */\nexport function makeExpiryTransform(delayInMilliseconds) {\n    return async (request) => {\n        request.body.ingress_expiry = new Expiry(delayInMilliseconds);\n    };\n}\n//# sourceMappingURL=transforms.js.map","// tslint:enable:camel-case\n// The types of values allowed in the `request_type` field for submit requests.\nexport var SubmitRequestType;\n(function (SubmitRequestType) {\n    SubmitRequestType[\"Call\"] = \"call\";\n})(SubmitRequestType || (SubmitRequestType = {}));\n//# sourceMappingURL=types.js.map","import { Buffer } from 'buffer/';\nimport { AnonymousIdentity } from '../../auth';\nimport * as cbor from '../../cbor';\nimport { Principal } from '@dfinity/principal';\nimport { requestIdOf } from '../../request_id';\nimport { blobFromHex, blobFromUint8Array } from '../../types';\nimport { Expiry } from './transforms';\nimport { SubmitRequestType, } from './types';\nexport * from './transforms';\nexport var RequestStatusResponseStatus;\n(function (RequestStatusResponseStatus) {\n    RequestStatusResponseStatus[\"Received\"] = \"received\";\n    RequestStatusResponseStatus[\"Processing\"] = \"processing\";\n    RequestStatusResponseStatus[\"Replied\"] = \"replied\";\n    RequestStatusResponseStatus[\"Rejected\"] = \"rejected\";\n    RequestStatusResponseStatus[\"Unknown\"] = \"unknown\";\n    RequestStatusResponseStatus[\"Done\"] = \"done\";\n})(RequestStatusResponseStatus || (RequestStatusResponseStatus = {}));\n// Default delta for ingress expiry is 5 minutes.\nconst DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS = 5 * 60 * 1000;\n// Root public key for the IC, encoded as hex\nconst IC_ROOT_KEY = '308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100814' +\n    'c0e6ec71fab583b08bd81373c255c3c371b2e84863c98a4f1e08b74235d14fb5d9c0cd546d968' +\n    '5f913a0c0b2cc5341583bf4b4392e467db96d65b9bb4cb717112f8472e0d5a4d14505ffd7484' +\n    'b01291091c5f87b98883463f98091a0baaae';\nfunction getDefaultFetch() {\n    const result = typeof window === 'undefined'\n        ? typeof global === 'undefined'\n            ? typeof self === 'undefined'\n                ? undefined\n                : self.fetch.bind(self)\n            : global.fetch.bind(global)\n        : window.fetch.bind(window);\n    if (!result) {\n        throw new Error('Could not find default `fetch` implementation.');\n    }\n    return result;\n}\n// A HTTP agent allows users to interact with a client of the internet computer\n// using the available methods. It exposes an API that closely follows the\n// public view of the internet computer, and is not intended to be exposed\n// directly to the majority of users due to its low-level interface.\n//\n// There is a pipeline to apply transformations to the request before sending\n// it to the client. This is to decouple signature, nonce generation and\n// other computations so that this class can stay as simple as possible while\n// allowing extensions.\nexport class HttpAgent {\n    constructor(options = {}) {\n        this._pipeline = [];\n        this._rootKeyFetched = false;\n        this.rootKey = blobFromHex(IC_ROOT_KEY);\n        if (options.source) {\n            if (!(options.source instanceof HttpAgent)) {\n                throw new Error(\"An Agent's source can only be another HttpAgent\");\n            }\n            this._pipeline = [...options.source._pipeline];\n            this._identity = options.source._identity;\n            this._fetch = options.source._fetch;\n            this._host = options.source._host;\n            this._credentials = options.source._credentials;\n        }\n        else {\n            this._fetch = options.fetch || getDefaultFetch() || fetch.bind(global);\n        }\n        if (options.host !== undefined) {\n            if (!options.host.match(/^[a-z]+:/) && typeof window !== 'undefined') {\n                this._host = new URL(window.location.protocol + '//' + options.host);\n            }\n            else {\n                this._host = new URL(options.host);\n            }\n        }\n        else if (options.source !== undefined) {\n            // Safe to ignore here.\n            this._host = options.source._host;\n        }\n        else {\n            const location = typeof window !== 'undefined' ? window.location : undefined;\n            if (!location) {\n                throw new Error('Must specify a host to connect to.');\n            }\n            this._host = new URL(location + '');\n        }\n        if (options.credentials) {\n            const { name, password } = options.credentials;\n            this._credentials = `${name}${password ? ':' + password : ''}`;\n        }\n        this._identity = Promise.resolve(options.identity || new AnonymousIdentity());\n    }\n    addTransform(fn, priority = fn.priority || 0) {\n        // Keep the pipeline sorted at all time, by priority.\n        const i = this._pipeline.findIndex(x => (x.priority || 0) < priority);\n        this._pipeline.splice(i >= 0 ? i : this._pipeline.length, 0, Object.assign(fn, { priority }));\n    }\n    async getPrincipal() {\n        return (await this._identity).getPrincipal();\n    }\n    async call(canisterId, options, identity) {\n        const id = (await (identity !== undefined ? await identity : await this._identity));\n        const canister = Principal.from(canisterId);\n        const ecid = options.effectiveCanisterId\n            ? Principal.from(options.effectiveCanisterId)\n            : canister;\n        const sender = id.getPrincipal() || Principal.anonymous();\n        const submit = {\n            request_type: SubmitRequestType.Call,\n            canister_id: canister,\n            method_name: options.methodName,\n            arg: options.arg,\n            sender: sender,\n            ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let transformedRequest = (await this._transform({\n            request: {\n                body: null,\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"call\" /* Call */,\n            body: submit,\n        }));\n        // Apply transform for identity.\n        transformedRequest = await id.transformRequest(transformedRequest);\n        const body = cbor.encode(transformedRequest.body);\n        // Run both in parallel. The fetch is quite expensive, so we have plenty of time to\n        // calculate the requestId locally.\n        const [response, requestId] = await Promise.all([\n            this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body })),\n            requestIdOf(submit),\n        ]);\n        if (!response.ok) {\n            throw new Error(`Server returned an error:\\n` +\n                `  Code: ${response.status} (${response.statusText})\\n` +\n                `  Body: ${await response.text()}\\n`);\n        }\n        return {\n            requestId,\n            response: {\n                ok: response.ok,\n                status: response.status,\n                statusText: response.statusText,\n            },\n        };\n    }\n    async query(canisterId, fields, identity) {\n        const id = await (identity !== undefined ? await identity : await this._identity);\n        const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;\n        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();\n        const request = {\n            request_type: \"query\" /* Query */,\n            canister_id: canister,\n            method_name: fields.methodName,\n            arg: fields.arg,\n            sender: sender,\n            ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n        };\n        // TODO: remove this any. This can be a Signed or UnSigned request.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let transformedRequest = await this._transform({\n            request: {\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"read\" /* Query */,\n            body: request,\n        });\n        // Apply transform for identity.\n        transformedRequest = await id.transformRequest(transformedRequest);\n        const body = cbor.encode(transformedRequest.body);\n        const response = await this._fetch('' + new URL(`/api/v2/canister/${canister.toText()}/query`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body }));\n        if (!response.ok) {\n            throw new Error(`Server returned an error:\\n` +\n                `  Code: ${response.status} (${response.statusText})\\n` +\n                `  Body: ${await response.text()}\\n`);\n        }\n        return cbor.decode(Buffer.from(await response.arrayBuffer()));\n    }\n    async readState(canisterId, fields, identity) {\n        const canister = typeof canisterId === 'string' ? Principal.fromText(canisterId) : canisterId;\n        const id = await (identity !== undefined ? await identity : await this._identity);\n        const sender = (id === null || id === void 0 ? void 0 : id.getPrincipal()) || Principal.anonymous();\n        // TODO: remove this any. This can be a Signed or UnSigned request.\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let transformedRequest = await this._transform({\n            request: {\n                method: 'POST',\n                headers: Object.assign({ 'Content-Type': 'application/cbor' }, (this._credentials ? { Authorization: 'Basic ' + btoa(this._credentials) } : {})),\n            },\n            endpoint: \"read_state\" /* ReadState */,\n            body: {\n                request_type: \"read_state\" /* ReadState */,\n                paths: fields.paths,\n                sender: sender,\n                ingress_expiry: new Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),\n            },\n        });\n        // Apply transform for identity.\n        transformedRequest = await id.transformRequest(transformedRequest);\n        const body = cbor.encode(transformedRequest.body);\n        const response = await this._fetch('' + new URL(`/api/v2/canister/${canister}/read_state`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body }));\n        if (!response.ok) {\n            throw new Error(`Server returned an error:\\n` +\n                `  Code: ${response.status} (${response.statusText})\\n` +\n                `  Body: ${await response.text()}\\n`);\n        }\n        return cbor.decode(Buffer.from(await response.arrayBuffer()));\n    }\n    async status() {\n        const headers = this._credentials\n            ? {\n                Authorization: 'Basic ' + btoa(this._credentials),\n            }\n            : {};\n        const response = await this._fetch('' + new URL(`/api/v2/status`, this._host), { headers });\n        if (!response.ok) {\n            throw new Error(`Server returned an error:\\n` +\n                `  Code: ${response.status} (${response.statusText})\\n` +\n                `  Body: ${await response.text()}\\n`);\n        }\n        const buffer = await response.arrayBuffer();\n        return cbor.decode(new Uint8Array(buffer));\n    }\n    async fetchRootKey() {\n        if (!this._rootKeyFetched) {\n            // Hex-encoded version of the replica root key\n            this.rootKey = blobFromUint8Array((await this.status()).root_key);\n            this._rootKeyFetched = true;\n        }\n        return this.rootKey;\n    }\n    _transform(request) {\n        let p = Promise.resolve(request);\n        for (const fn of this._pipeline) {\n            p = p.then(r => fn(r).then(r2 => r2 || r));\n        }\n        return p;\n    }\n}\n//# sourceMappingURL=index.js.map","import { Principal } from '@dfinity/principal';\nexport var ProxyMessageKind;\n(function (ProxyMessageKind) {\n    ProxyMessageKind[\"Error\"] = \"err\";\n    ProxyMessageKind[\"GetPrincipal\"] = \"gp\";\n    ProxyMessageKind[\"GetPrincipalResponse\"] = \"gpr\";\n    ProxyMessageKind[\"Query\"] = \"q\";\n    ProxyMessageKind[\"QueryResponse\"] = \"qr\";\n    ProxyMessageKind[\"Call\"] = \"c\";\n    ProxyMessageKind[\"CallResponse\"] = \"cr\";\n    ProxyMessageKind[\"ReadState\"] = \"rs\";\n    ProxyMessageKind[\"ReadStateResponse\"] = \"rsr\";\n    ProxyMessageKind[\"Status\"] = \"s\";\n    ProxyMessageKind[\"StatusResponse\"] = \"sr\";\n})(ProxyMessageKind || (ProxyMessageKind = {}));\n// A Stub Agent that forwards calls to another Agent implementation.\nexport class ProxyStubAgent {\n    constructor(_frontend, _agent) {\n        this._frontend = _frontend;\n        this._agent = _agent;\n    }\n    onmessage(msg) {\n        switch (msg.type) {\n            case ProxyMessageKind.GetPrincipal:\n                this._agent.getPrincipal().then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.GetPrincipalResponse,\n                        response: response.toText(),\n                    });\n                });\n                break;\n            case ProxyMessageKind.Query:\n                this._agent.query(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.QueryResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.Call:\n                this._agent.call(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.CallResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.ReadState:\n                this._agent.readState(...msg.args).then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.ReadStateResponse,\n                        response,\n                    });\n                });\n                break;\n            case ProxyMessageKind.Status:\n                this._agent.status().then(response => {\n                    this._frontend({\n                        id: msg.id,\n                        type: ProxyMessageKind.StatusResponse,\n                        response,\n                    });\n                });\n                break;\n            default:\n                throw new Error(`Invalid message received: ${JSON.stringify(msg)}`);\n        }\n    }\n}\n// An Agent that forwards calls to a backend. The calls are serialized\nexport class ProxyAgent {\n    constructor(_backend) {\n        this._backend = _backend;\n        this._nextId = 0;\n        this._pendingCalls = new Map();\n        this.rootKey = null;\n    }\n    onmessage(msg) {\n        const id = msg.id;\n        const maybePromise = this._pendingCalls.get(id);\n        if (!maybePromise) {\n            throw new Error('A proxy get the same message twice...');\n        }\n        this._pendingCalls.delete(id);\n        const [resolve, reject] = maybePromise;\n        switch (msg.type) {\n            case ProxyMessageKind.Error:\n                return reject(msg.error);\n            case ProxyMessageKind.GetPrincipalResponse:\n            case ProxyMessageKind.CallResponse:\n            case ProxyMessageKind.QueryResponse:\n            case ProxyMessageKind.ReadStateResponse:\n            case ProxyMessageKind.StatusResponse:\n                return resolve(msg.response);\n            default:\n                throw new Error(`Invalid message being sent to ProxyAgent: ${JSON.stringify(msg)}`);\n        }\n    }\n    async getPrincipal() {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.GetPrincipal,\n        }).then(principal => {\n            if (typeof principal !== 'string') {\n                throw new Error('Invalid principal received.');\n            }\n            return Principal.fromText(principal);\n        });\n    }\n    readState(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.ReadState,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    call(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Call,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    status() {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Status,\n        });\n    }\n    query(canisterId, fields) {\n        return this._sendAndWait({\n            id: this._nextId++,\n            type: ProxyMessageKind.Query,\n            args: [canisterId.toString(), fields],\n        });\n    }\n    async _sendAndWait(msg) {\n        return new Promise((resolve, reject) => {\n            this._pendingCalls.set(msg.id, [resolve, reject]);\n            this._backend(msg);\n        });\n    }\n    async fetchRootKey() {\n        // Hex-encoded version of the replica root key\n        const rootKey = (await this.status()).root_key;\n        this.rootKey = rootKey;\n        return rootKey;\n    }\n}\n//# sourceMappingURL=proxy.js.map","export * from './api';\nexport * from './http';\nexport * from './proxy';\nexport function getDefaultAgent() {\n    const agent = typeof window === 'undefined'\n        ? typeof global === 'undefined'\n            ? typeof self === 'undefined'\n                ? undefined\n                : self.ic.agent\n            : global.ic.agent\n        : window.ic.agent;\n    if (!agent) {\n        throw new Error('No Agent could be found.');\n    }\n    return agent;\n}\n//# sourceMappingURL=index.js.map","/**\n * This file is generated from the candid for asset management.\n */\n/* tslint:disable */\n// @ts-ignore\nexport default ({ IDL }) => {\n    const canister_id = IDL.Principal;\n    const wasm_module = IDL.Vec(IDL.Nat8);\n    const CanisterSettings = IDL.Record({\n        compute_allocation: IDL.Opt(IDL.Nat),\n        memory_allocation: IDL.Opt(IDL.Nat),\n    });\n    return IDL.Service({\n        provisional_create_canister_with_cycles: IDL.Func([IDL.Record({ amount: IDL.Opt(IDL.Nat), settings: IDL.Opt(CanisterSettings) })], [IDL.Record({ canister_id: canister_id })], []),\n        create_canister: IDL.Func([], [IDL.Record({ canister_id: canister_id })], []),\n        install_code: IDL.Func([\n            IDL.Record({\n                mode: IDL.Variant({ install: IDL.Null, reinstall: IDL.Null, upgrade: IDL.Null }),\n                canister_id: canister_id,\n                wasm_module: wasm_module,\n                arg: IDL.Vec(IDL.Nat8),\n            }),\n        ], [], []),\n        set_controller: IDL.Func([IDL.Record({ canister_id: canister_id, new_controller: IDL.Principal })], [], []),\n    });\n};\n//# sourceMappingURL=management_idl.js.map","import { Actor } from '../actor';\nimport { Principal } from '@dfinity/principal';\nimport managementCanisterIdl from './management_idl';\n/* tslint:enable */\n/**\n * Create a management canister actor.\n * @param config\n */\nexport function getManagementCanister(config) {\n    function transform(methodName, args, callConfig) {\n        const first = args[0];\n        let effectiveCanisterId = Principal.fromHex('');\n        if (first && typeof first === 'object' && first.canister_id) {\n            effectiveCanisterId = Principal.from(first.canister_id);\n        }\n        return { effectiveCanisterId };\n    }\n    return Actor.createActor(managementCanisterIdl, Object.assign(Object.assign(Object.assign({}, config), { canisterId: Principal.fromHex('') }), {\n        callTransform: transform,\n        queryTransform: transform,\n    }));\n}\n//# sourceMappingURL=management.js.map","/**\n * An error that happens in the Agent. This is the root of all errors and should be used\n * everywhere in the Agent code (this package).\n *\n * @todo https://github.com/dfinity/agent-js/issues/420\n */\nexport class AgentError extends Error {\n}\n//# sourceMappingURL=errors.js.map","/**\n * Hashes a string to a number. Algorithm can be found here:\n * https://caml.inria.fr/pub/papers/garrigue-polymorphic_variants-ml98.pdf\n * @param s\n */\nfunction idlHash(s) {\n    const utf8encoder = new TextEncoder();\n    const array = utf8encoder.encode(s);\n    let h = 0;\n    for (const c of array) {\n        h = (h * 223 + c) % 2 ** 32;\n    }\n    return h;\n}\nexport function idlLabelToId(label) {\n    if (/^_\\d+_$/.test(label) || /^_0x[0-9a-fA-F]+_$/.test(label)) {\n        const num = +label.slice(1, -1);\n        if (Number.isSafeInteger(num) && num >= 0 && num < 2 ** 32) {\n            return num;\n        }\n    }\n    return idlHash(label);\n}\n//# sourceMappingURL=hash.js.map","// tslint:disable:max-classes-per-file\nimport Pipe from 'buffer-pipe';\nimport { Buffer } from 'buffer/';\nimport { Principal as PrincipalId } from '@dfinity/principal';\nimport { blobFromBuffer } from './types';\nimport { idlLabelToId } from './utils/hash';\nimport { lebDecode, lebEncode, safeRead, slebDecode, slebEncode } from './utils/leb128';\nimport { readIntLE, readUIntLE, writeIntLE, writeUIntLE } from './utils/leb128';\nconst magicNumber = 'DIDL';\nfunction zipWith(xs, ys, f) {\n    return xs.map((x, i) => f(x, ys[i]));\n}\n/**\n * An IDL Type Table, which precedes the data in the stream.\n */\nclass TypeTable {\n    constructor() {\n        // List of types. Needs to be an array as the index needs to be stable.\n        this._typs = [];\n        this._idx = new Map();\n    }\n    has(obj) {\n        return this._idx.has(obj.name);\n    }\n    add(type, buf) {\n        const idx = this._typs.length;\n        this._idx.set(type.name, idx);\n        this._typs.push(buf);\n    }\n    merge(obj, knot) {\n        const idx = this._idx.get(obj.name);\n        const knotIdx = this._idx.get(knot);\n        if (idx === undefined) {\n            throw new Error('Missing type index for ' + obj);\n        }\n        if (knotIdx === undefined) {\n            throw new Error('Missing type index for ' + knot);\n        }\n        this._typs[idx] = this._typs[knotIdx];\n        // Delete the type.\n        this._typs.splice(knotIdx, 1);\n        this._idx.delete(knot);\n    }\n    encode() {\n        const len = lebEncode(this._typs.length);\n        const buf = Buffer.concat(this._typs);\n        return Buffer.concat([len, buf]);\n    }\n    indexOf(typeName) {\n        if (!this._idx.has(typeName)) {\n            throw new Error('Missing type index for ' + typeName);\n        }\n        return slebEncode(this._idx.get(typeName) || 0);\n    }\n}\nexport class Visitor {\n    visitType(t, data) {\n        throw new Error('Not implemented');\n    }\n    visitPrimitive(t, data) {\n        return this.visitType(t, data);\n    }\n    visitEmpty(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitBool(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitNull(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitReserved(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitText(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitNumber(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitInt(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitNat(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitFloat(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitFixedInt(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitFixedNat(t, data) {\n        return this.visitNumber(t, data);\n    }\n    visitPrincipal(t, data) {\n        return this.visitPrimitive(t, data);\n    }\n    visitConstruct(t, data) {\n        return this.visitType(t, data);\n    }\n    visitVec(t, ty, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitOpt(t, ty, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitRecord(t, fields, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitTuple(t, components, data) {\n        const fields = components.map((ty, i) => [`_${i}_`, ty]);\n        return this.visitRecord(t, fields, data);\n    }\n    visitVariant(t, fields, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitRec(t, ty, data) {\n        return this.visitConstruct(ty, data);\n    }\n    visitFunc(t, data) {\n        return this.visitConstruct(t, data);\n    }\n    visitService(t, data) {\n        return this.visitConstruct(t, data);\n    }\n}\n/**\n * Represents an IDL type.\n */\nexport class Type {\n    /* Display type name */\n    display() {\n        return this.name;\n    }\n    valueToString(x) {\n        return JSON.stringify(x);\n    }\n    /* Implement `T` in the IDL spec, only needed for non-primitive types */\n    buildTypeTable(typeTable) {\n        if (!typeTable.has(this)) {\n            this._buildTypeTableImpl(typeTable);\n        }\n    }\n}\nexport class PrimitiveType extends Type {\n    checkType(t) {\n        if (this.name !== t.name) {\n            throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n        }\n        return t;\n    }\n    _buildTypeTableImpl(typeTable) {\n        // No type table encoding for Primitive types.\n        return;\n    }\n}\nexport class ConstructType extends Type {\n    checkType(t) {\n        if (t instanceof RecClass) {\n            const ty = t.getType();\n            if (typeof ty === 'undefined') {\n                throw new Error('type mismatch with uninitialized type');\n            }\n            return ty;\n        }\n        throw new Error(`type mismatch: type on the wire ${t.name}, expect type ${this.name}`);\n    }\n    encodeType(typeTable) {\n        return typeTable.indexOf(this.name);\n    }\n}\n/**\n * Represents an IDL Empty, a type which has no inhabitants.\n * Since no values exist for this type, it cannot be serialised or deserialised.\n * Result types like `Result<Text, Empty>` should always succeed.\n */\nexport class EmptyClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitEmpty(this, d);\n    }\n    covariant(x) {\n        return false;\n    }\n    encodeValue() {\n        throw new Error('Empty cannot appear as a function argument');\n    }\n    valueToString() {\n        throw new Error('Empty cannot appear as a value');\n    }\n    encodeType() {\n        return slebEncode(-17 /* Empty */);\n    }\n    decodeValue() {\n        throw new Error('Empty cannot appear as an output');\n    }\n    get name() {\n        return 'empty';\n    }\n}\n/**\n * Represents an IDL Bool\n */\nexport class BoolClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitBool(this, d);\n    }\n    covariant(x) {\n        return typeof x === 'boolean';\n    }\n    encodeValue(x) {\n        const buf = Buffer.alloc(1);\n        buf.writeInt8(x ? 1 : 0, 0);\n        return buf;\n    }\n    encodeType() {\n        return slebEncode(-2 /* Bool */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const x = safeRead(b, 1).toString('hex');\n        if (x === '00') {\n            return false;\n        }\n        else if (x === '01') {\n            return true;\n        }\n        else {\n            throw new Error('Boolean value out of range');\n        }\n    }\n    get name() {\n        return 'bool';\n    }\n}\n/**\n * Represents an IDL Null\n */\nexport class NullClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitNull(this, d);\n    }\n    covariant(x) {\n        return x === null;\n    }\n    encodeValue() {\n        return Buffer.alloc(0);\n    }\n    encodeType() {\n        return slebEncode(-1 /* Null */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return null;\n    }\n    get name() {\n        return 'null';\n    }\n}\n/**\n * Represents an IDL Reserved\n */\nexport class ReservedClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitReserved(this, d);\n    }\n    covariant(x) {\n        return true;\n    }\n    encodeValue() {\n        return Buffer.alloc(0);\n    }\n    encodeType() {\n        return slebEncode(-16 /* Reserved */);\n    }\n    decodeValue(b, t) {\n        if (t.name !== this.name) {\n            t.decodeValue(b, t);\n        }\n        return null;\n    }\n    get name() {\n        return 'reserved';\n    }\n}\nfunction isValidUTF8(buf) {\n    return Buffer.compare(new Buffer(buf.toString(), 'utf8'), buf) === 0;\n}\n/**\n * Represents an IDL Text\n */\nexport class TextClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitText(this, d);\n    }\n    covariant(x) {\n        return typeof x === 'string';\n    }\n    encodeValue(x) {\n        const buf = Buffer.from(x, 'utf8');\n        const len = lebEncode(buf.length);\n        return Buffer.concat([len, buf]);\n    }\n    encodeType() {\n        return slebEncode(-15 /* Text */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const len = lebDecode(b);\n        const buf = safeRead(b, Number(len));\n        if (!isValidUTF8(buf)) {\n            throw new Error('Not valid UTF8 text');\n        }\n        return buf.toString('utf8');\n    }\n    get name() {\n        return 'text';\n    }\n    valueToString(x) {\n        return '\"' + x + '\"';\n    }\n}\n/**\n * Represents an IDL Int\n */\nexport class IntClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitInt(this, d);\n    }\n    covariant(x) {\n        // We allow encoding of JavaScript plain numbers.\n        // But we will always decode to bigint.\n        return typeof x === 'bigint' || Number.isInteger(x);\n    }\n    encodeValue(x) {\n        return slebEncode(x);\n    }\n    encodeType() {\n        return slebEncode(-4 /* Int */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return slebDecode(b);\n    }\n    get name() {\n        return 'int';\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Nat\n */\nexport class NatClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitNat(this, d);\n    }\n    covariant(x) {\n        // We allow encoding of JavaScript plain numbers.\n        // But we will always decode to bigint.\n        return (typeof x === 'bigint' && x >= BigInt(0)) || (Number.isInteger(x) && x >= 0);\n    }\n    encodeValue(x) {\n        return lebEncode(x);\n    }\n    encodeType() {\n        return slebEncode(-3 /* Nat */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return lebDecode(b);\n    }\n    get name() {\n        return 'nat';\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Float\n */\nexport class FloatClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n        if (_bits !== 32 && _bits !== 64) {\n            throw new Error('not a valid float type');\n        }\n    }\n    accept(v, d) {\n        return v.visitFloat(this, d);\n    }\n    covariant(x) {\n        return typeof x === 'number' || x instanceof Number;\n    }\n    encodeValue(x) {\n        const buf = Buffer.allocUnsafe(this._bits / 8);\n        if (this._bits === 32) {\n            buf.writeFloatLE(x, 0);\n        }\n        else {\n            buf.writeDoubleLE(x, 0);\n        }\n        return buf;\n    }\n    encodeType() {\n        const opcode = this._bits === 32 ? -13 /* Float32 */ : -14 /* Float64 */;\n        return slebEncode(opcode);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const x = safeRead(b, this._bits / 8);\n        if (this._bits === 32) {\n            return x.readFloatLE(0);\n        }\n        else {\n            return x.readDoubleLE(0);\n        }\n    }\n    get name() {\n        return 'float' + this._bits;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL fixed-width Int(n)\n */\nexport class FixedIntClass extends PrimitiveType {\n    constructor(_bits) {\n        super();\n        this._bits = _bits;\n    }\n    accept(v, d) {\n        return v.visitFixedInt(this, d);\n    }\n    covariant(x) {\n        const min = BigInt(2) ** BigInt(this._bits - 1) * BigInt(-1);\n        const max = BigInt(2) ** BigInt(this._bits - 1) - BigInt(1);\n        if (typeof x === 'bigint') {\n            return x >= min && x <= max;\n        }\n        else if (Number.isInteger(x)) {\n            const v = BigInt(x);\n            return v >= min && v <= max;\n        }\n        else {\n            return false;\n        }\n    }\n    encodeValue(x) {\n        return writeIntLE(x, this._bits / 8);\n    }\n    encodeType() {\n        const offset = Math.log2(this._bits) - 3;\n        return slebEncode(-9 - offset);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const num = readIntLE(b, this._bits / 8);\n        if (this._bits <= 32) {\n            return Number(num);\n        }\n        else {\n            return num;\n        }\n    }\n    get name() {\n        return `int${this._bits}`;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL fixed-width Nat(n)\n */\nexport class FixedNatClass extends PrimitiveType {\n    constructor(bits) {\n        super();\n        this.bits = bits;\n    }\n    accept(v, d) {\n        return v.visitFixedNat(this, d);\n    }\n    covariant(x) {\n        const max = BigInt(2) ** BigInt(this.bits);\n        if (typeof x === 'bigint' && x > BigInt(0)) {\n            return x < max;\n        }\n        else if (Number.isInteger(x) && x >= 0) {\n            const v = BigInt(x);\n            return v < max;\n        }\n        else {\n            return false;\n        }\n    }\n    encodeValue(x) {\n        return writeUIntLE(x, this.bits / 8);\n    }\n    encodeType() {\n        const offset = Math.log2(this.bits) - 3;\n        return slebEncode(-5 - offset);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        const num = readUIntLE(b, this.bits / 8);\n        if (this.bits <= 32) {\n            return Number(num);\n        }\n        else {\n            return num;\n        }\n    }\n    get name() {\n        return `nat${this.bits}`;\n    }\n    valueToString(x) {\n        return x.toString();\n    }\n}\n/**\n * Represents an IDL Array\n * @param {Type} t\n */\nexport class VecClass extends ConstructType {\n    constructor(_type) {\n        super();\n        this._type = _type;\n        // If true, this vector is really a blob and we can just use memcpy.\n        this._blobOptimization = false;\n        if (_type instanceof FixedNatClass && _type.bits === 8) {\n            this._blobOptimization = true;\n        }\n    }\n    accept(v, d) {\n        return v.visitVec(this, this._type, d);\n    }\n    covariant(x) {\n        return Array.isArray(x) && x.every(v => this._type.covariant(v));\n    }\n    encodeValue(x) {\n        const len = lebEncode(x.length);\n        if (this._blobOptimization) {\n            return Buffer.concat([len, Buffer.from(x)]);\n        }\n        return Buffer.concat([len, ...x.map(d => this._type.encodeValue(d))]);\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._type.buildTypeTable(typeTable);\n        const opCode = slebEncode(-19 /* Vector */);\n        const buffer = this._type.encodeType(typeTable);\n        typeTable.add(this, Buffer.concat([opCode, buffer]));\n    }\n    decodeValue(b, t) {\n        const vec = this.checkType(t);\n        if (!(vec instanceof VecClass)) {\n            throw new Error('Not a vector type');\n        }\n        const len = Number(lebDecode(b));\n        if (this._blobOptimization) {\n            return [...new Uint8Array(b.read(len))];\n        }\n        const rets = [];\n        for (let i = 0; i < len; i++) {\n            rets.push(this._type.decodeValue(b, vec._type));\n        }\n        return rets;\n    }\n    get name() {\n        return `vec ${this._type.name}`;\n    }\n    display() {\n        return `vec ${this._type.display()}`;\n    }\n    valueToString(x) {\n        const elements = x.map(e => this._type.valueToString(e));\n        return 'vec {' + elements.join('; ') + '}';\n    }\n}\n/**\n * Represents an IDL Option\n * @param {Type} t\n */\nexport class OptClass extends ConstructType {\n    constructor(_type) {\n        super();\n        this._type = _type;\n    }\n    accept(v, d) {\n        return v.visitOpt(this, this._type, d);\n    }\n    covariant(x) {\n        return Array.isArray(x) && (x.length === 0 || (x.length === 1 && this._type.covariant(x[0])));\n    }\n    encodeValue(x) {\n        if (x.length === 0) {\n            return Buffer.from([0]);\n        }\n        else {\n            return Buffer.concat([Buffer.from([1]), this._type.encodeValue(x[0])]);\n        }\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._type.buildTypeTable(typeTable);\n        const opCode = slebEncode(-18 /* Opt */);\n        const buffer = this._type.encodeType(typeTable);\n        typeTable.add(this, Buffer.concat([opCode, buffer]));\n    }\n    decodeValue(b, t) {\n        const opt = this.checkType(t);\n        if (!(opt instanceof OptClass)) {\n            throw new Error('Not an option type');\n        }\n        const len = safeRead(b, 1).toString('hex');\n        if (len === '00') {\n            return [];\n        }\n        else if (len === '01') {\n            return [this._type.decodeValue(b, opt._type)];\n        }\n        else {\n            throw new Error('Not an option value');\n        }\n    }\n    get name() {\n        return `opt ${this._type.name}`;\n    }\n    display() {\n        return `opt ${this._type.display()}`;\n    }\n    valueToString(x) {\n        if (x.length === 0) {\n            return 'null';\n        }\n        else {\n            return `opt ${this._type.valueToString(x[0])}`;\n        }\n    }\n}\n/**\n * Represents an IDL Record\n * @param {Object} [fields] - mapping of function name to Type\n */\nexport class RecordClass extends ConstructType {\n    constructor(fields = {}) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitRecord(this, this._fields, d);\n    }\n    tryAsTuple() {\n        const res = [];\n        for (let i = 0; i < this._fields.length; i++) {\n            const [key, type] = this._fields[i];\n            if (key !== `_${i}_`) {\n                return null;\n            }\n            res.push(type);\n        }\n        return res;\n    }\n    covariant(x) {\n        return (typeof x === 'object' &&\n            this._fields.every(([k, t]) => {\n                if (!x.hasOwnProperty(k)) {\n                    throw new Error(`Record is missing key \"${k}\".`);\n                }\n                return t.covariant(x[k]);\n            }));\n    }\n    encodeValue(x) {\n        const values = this._fields.map(([key]) => x[key]);\n        const bufs = zipWith(this._fields, values, ([, c], d) => c.encodeValue(d));\n        return Buffer.concat(bufs);\n    }\n    _buildTypeTableImpl(T) {\n        this._fields.forEach(([_, value]) => value.buildTypeTable(T));\n        const opCode = slebEncode(-20 /* Record */);\n        const len = lebEncode(this._fields.length);\n        const fields = this._fields.map(([key, value]) => Buffer.concat([lebEncode(idlLabelToId(key)), value.encodeType(T)]));\n        T.add(this, Buffer.concat([opCode, len, Buffer.concat(fields)]));\n    }\n    decodeValue(b, t) {\n        const record = this.checkType(t);\n        if (!(record instanceof RecordClass)) {\n            throw new Error('Not a record type');\n        }\n        const x = {};\n        let idx = 0;\n        for (const [hash, type] of record._fields) {\n            if (idx >= this._fields.length || idlLabelToId(this._fields[idx][0]) !== idlLabelToId(hash)) {\n                // skip field\n                type.decodeValue(b, type);\n                continue;\n            }\n            const [expectKey, expectType] = this._fields[idx];\n            x[expectKey] = expectType.decodeValue(b, type);\n            idx++;\n        }\n        if (idx < this._fields.length) {\n            throw new Error('Cannot find field ' + this._fields[idx][0]);\n        }\n        return x;\n    }\n    get name() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n        return `record {${fields.join('; ')}}`;\n    }\n    display() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.display());\n        return `record {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        const values = this._fields.map(([key]) => x[key]);\n        const fields = zipWith(this._fields, values, ([k, c], d) => k + '=' + c.valueToString(d));\n        return `record {${fields.join('; ')}}`;\n    }\n}\n/**\n * Represents Tuple, a syntactic sugar for Record.\n * @param {Type} components\n */\nexport class TupleClass extends RecordClass {\n    constructor(_components) {\n        const x = {};\n        _components.forEach((e, i) => (x['_' + i + '_'] = e));\n        super(x);\n        this._components = _components;\n    }\n    accept(v, d) {\n        return v.visitTuple(this, this._components, d);\n    }\n    covariant(x) {\n        // `>=` because tuples can be covariant when encoded.\n        return (Array.isArray(x) &&\n            x.length >= this._fields.length &&\n            this._components.every((t, i) => t.covariant(x[i])));\n    }\n    encodeValue(x) {\n        const bufs = zipWith(this._components, x, (c, d) => c.encodeValue(d));\n        return Buffer.concat(bufs);\n    }\n    decodeValue(b, t) {\n        const tuple = this.checkType(t);\n        if (!(tuple instanceof TupleClass)) {\n            throw new Error('not a tuple type');\n        }\n        if (tuple._components.length < this._components.length) {\n            throw new Error('tuple mismatch');\n        }\n        const res = [];\n        for (const [i, wireType] of tuple._components.entries()) {\n            if (i >= this._components.length) {\n                // skip value\n                wireType.decodeValue(b, wireType);\n            }\n            else {\n                res.push(this._components[i].decodeValue(b, wireType));\n            }\n        }\n        return res;\n    }\n    display() {\n        const fields = this._components.map(value => value.display());\n        return `record {${fields.join('; ')}}`;\n    }\n    valueToString(values) {\n        const fields = zipWith(this._components, values, (c, d) => c.valueToString(d));\n        return `record {${fields.join('; ')}}`;\n    }\n}\n/**\n * Represents an IDL Variant\n * @param {Object} [fields] - mapping of function name to Type\n */\nexport class VariantClass extends ConstructType {\n    constructor(fields = {}) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitVariant(this, this._fields, d);\n    }\n    covariant(x) {\n        return (typeof x === 'object' &&\n            Object.entries(x).length === 1 &&\n            this._fields.every(([k, v]) => {\n                return !x.hasOwnProperty(k) || v.covariant(x[k]);\n            }));\n    }\n    encodeValue(x) {\n        for (let i = 0; i < this._fields.length; i++) {\n            const [name, type] = this._fields[i];\n            if (x.hasOwnProperty(name)) {\n                const idx = lebEncode(i);\n                const buf = type.encodeValue(x[name]);\n                return Buffer.concat([idx, buf]);\n            }\n        }\n        throw Error('Variant has no data: ' + x);\n    }\n    _buildTypeTableImpl(typeTable) {\n        this._fields.forEach(([, type]) => {\n            type.buildTypeTable(typeTable);\n        });\n        const opCode = slebEncode(-21 /* Variant */);\n        const len = lebEncode(this._fields.length);\n        const fields = this._fields.map(([key, value]) => Buffer.concat([lebEncode(idlLabelToId(key)), value.encodeType(typeTable)]));\n        typeTable.add(this, Buffer.concat([opCode, len, ...fields]));\n    }\n    decodeValue(b, t) {\n        const variant = this.checkType(t);\n        if (!(variant instanceof VariantClass)) {\n            throw new Error('Not a variant type');\n        }\n        const idx = Number(lebDecode(b));\n        if (idx >= variant._fields.length) {\n            throw Error('Invalid variant index: ' + idx);\n        }\n        const [wireHash, wireType] = variant._fields[idx];\n        for (const [key, expectType] of this._fields) {\n            if (idlLabelToId(wireHash) === idlLabelToId(key)) {\n                const value = expectType.decodeValue(b, wireType);\n                return { [key]: value };\n            }\n        }\n        throw new Error('Cannot find field hash ' + wireHash);\n    }\n    get name() {\n        const fields = this._fields.map(([key, type]) => key + ':' + type.name);\n        return `variant {${fields.join('; ')}}`;\n    }\n    display() {\n        const fields = this._fields.map(([key, type]) => key + (type.name === 'null' ? '' : `:${type.display()}`));\n        return `variant {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        for (const [name, type] of this._fields) {\n            if (x.hasOwnProperty(name)) {\n                const value = type.valueToString(x[name]);\n                if (value === 'null') {\n                    return `variant {${name}}`;\n                }\n                else {\n                    return `variant {${name}=${value}}`;\n                }\n            }\n        }\n        throw new Error('Variant has no data: ' + x);\n    }\n}\n/**\n * Represents a reference to an IDL type, used for defining recursive data\n * types.\n */\nexport class RecClass extends ConstructType {\n    constructor() {\n        super(...arguments);\n        this._id = RecClass._counter++;\n        this._type = undefined;\n    }\n    accept(v, d) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return v.visitRec(this, this._type, d);\n    }\n    fill(t) {\n        this._type = t;\n    }\n    getType() {\n        return this._type;\n    }\n    covariant(x) {\n        return this._type ? this._type.covariant(x) : false;\n    }\n    encodeValue(x) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.encodeValue(x);\n    }\n    _buildTypeTableImpl(typeTable) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        typeTable.add(this, Buffer.alloc(0));\n        this._type.buildTypeTable(typeTable);\n        typeTable.merge(this, this._type.name);\n    }\n    decodeValue(b, t) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.decodeValue(b, t);\n    }\n    get name() {\n        return `rec_${this._id}`;\n    }\n    display() {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return `μ${this.name}.${this._type.name}`;\n    }\n    valueToString(x) {\n        if (!this._type) {\n            throw Error('Recursive type uninitialized.');\n        }\n        return this._type.valueToString(x);\n    }\n}\nRecClass._counter = 0;\nfunction decodePrincipalId(b) {\n    const x = safeRead(b, 1).toString('hex');\n    if (x !== '01') {\n        throw new Error('Cannot decode principal');\n    }\n    const len = Number(lebDecode(b));\n    const hex = safeRead(b, len).toString('hex').toUpperCase();\n    return PrincipalId.fromHex(hex);\n}\n/**\n * Represents an IDL principal reference\n */\nexport class PrincipalClass extends PrimitiveType {\n    accept(v, d) {\n        return v.visitPrincipal(this, d);\n    }\n    covariant(x) {\n        return x && x._isPrincipal;\n    }\n    encodeValue(x) {\n        const hex = x.toHex();\n        const buf = Buffer.from(hex, 'hex');\n        const len = lebEncode(buf.length);\n        return Buffer.concat([Buffer.from([1]), len, buf]);\n    }\n    encodeType() {\n        return slebEncode(-24 /* Principal */);\n    }\n    decodeValue(b, t) {\n        this.checkType(t);\n        return decodePrincipalId(b);\n    }\n    get name() {\n        return 'principal';\n    }\n    valueToString(x) {\n        return `${this.name} \"${x.toText()}\"`;\n    }\n}\n/**\n * Represents an IDL function reference.\n * @param argTypes Argument types.\n * @param retTypes Return types.\n * @param annotations Function annotations.\n */\nexport class FuncClass extends ConstructType {\n    constructor(argTypes, retTypes, annotations = []) {\n        super();\n        this.argTypes = argTypes;\n        this.retTypes = retTypes;\n        this.annotations = annotations;\n    }\n    static argsToString(types, v) {\n        if (types.length !== v.length) {\n            throw new Error('arity mismatch');\n        }\n        return '(' + types.map((t, i) => t.valueToString(v[i])).join(', ') + ')';\n    }\n    accept(v, d) {\n        return v.visitFunc(this, d);\n    }\n    covariant(x) {\n        return (Array.isArray(x) && x.length === 2 && x[0] && x[0]._isPrincipal && typeof x[1] === 'string');\n    }\n    encodeValue(x) {\n        const hex = x[0].toHex();\n        const buf = Buffer.from(hex, 'hex');\n        const len = lebEncode(buf.length);\n        const canister = Buffer.concat([Buffer.from([1]), len, buf]);\n        const method = Buffer.from(x[1], 'utf8');\n        const methodLen = lebEncode(method.length);\n        return Buffer.concat([Buffer.from([1]), canister, methodLen, method]);\n    }\n    _buildTypeTableImpl(T) {\n        this.argTypes.forEach(arg => arg.buildTypeTable(T));\n        this.retTypes.forEach(arg => arg.buildTypeTable(T));\n        const opCode = slebEncode(-22 /* Func */);\n        const argLen = lebEncode(this.argTypes.length);\n        const args = Buffer.concat(this.argTypes.map(arg => arg.encodeType(T)));\n        const retLen = lebEncode(this.retTypes.length);\n        const rets = Buffer.concat(this.retTypes.map(arg => arg.encodeType(T)));\n        const annLen = lebEncode(this.annotations.length);\n        const anns = Buffer.concat(this.annotations.map(a => this.encodeAnnotation(a)));\n        T.add(this, Buffer.concat([opCode, argLen, args, retLen, rets, annLen, anns]));\n    }\n    decodeValue(b) {\n        const x = safeRead(b, 1).toString('hex');\n        if (x !== '01') {\n            throw new Error('Cannot decode function reference');\n        }\n        const canister = decodePrincipalId(b);\n        const mLen = Number(lebDecode(b));\n        const buf = safeRead(b, mLen);\n        if (!isValidUTF8(buf)) {\n            throw new Error('Not valid UTF8 method name');\n        }\n        const method = buf.toString('utf8');\n        return [canister, method];\n    }\n    get name() {\n        const args = this.argTypes.map(arg => arg.name).join(', ');\n        const rets = this.retTypes.map(arg => arg.name).join(', ');\n        const annon = ' ' + this.annotations.join(' ');\n        return `(${args}) -> (${rets})${annon}`;\n    }\n    valueToString([principal, str]) {\n        return `func \"${principal.toText()}\".${str}`;\n    }\n    display() {\n        const args = this.argTypes.map(arg => arg.display()).join(', ');\n        const rets = this.retTypes.map(arg => arg.display()).join(', ');\n        const annon = ' ' + this.annotations.join(' ');\n        return `(${args}) → (${rets})${annon}`;\n    }\n    encodeAnnotation(ann) {\n        if (ann === 'query') {\n            return Buffer.from([1]);\n        }\n        else if (ann === 'oneway') {\n            return Buffer.from([2]);\n        }\n        else {\n            throw new Error('Illeagal function annotation');\n        }\n    }\n}\nexport class ServiceClass extends ConstructType {\n    constructor(fields) {\n        super();\n        this._fields = Object.entries(fields).sort((a, b) => idlLabelToId(a[0]) - idlLabelToId(b[0]));\n    }\n    accept(v, d) {\n        return v.visitService(this, d);\n    }\n    covariant(x) {\n        return x && x._isPrincipal;\n    }\n    encodeValue(x) {\n        const hex = x.toHex();\n        const buf = Buffer.from(hex, 'hex');\n        const len = lebEncode(buf.length);\n        return Buffer.concat([Buffer.from([1]), len, buf]);\n    }\n    _buildTypeTableImpl(T) {\n        this._fields.forEach(([_, func]) => func.buildTypeTable(T));\n        const opCode = slebEncode(-23 /* Service */);\n        const len = lebEncode(this._fields.length);\n        const meths = this._fields.map(([label, func]) => {\n            const labelBuf = Buffer.from(label, 'utf8');\n            const labelLen = lebEncode(labelBuf.length);\n            return Buffer.concat([labelLen, labelBuf, func.encodeType(T)]);\n        });\n        T.add(this, Buffer.concat([opCode, len, Buffer.concat(meths)]));\n    }\n    decodeValue(b) {\n        return decodePrincipalId(b);\n    }\n    get name() {\n        const fields = this._fields.map(([key, value]) => key + ':' + value.name);\n        return `service {${fields.join('; ')}}`;\n    }\n    valueToString(x) {\n        return `service \"${x.toText()}\"`;\n    }\n}\n/**\n *\n * @param x\n * @returns {string}\n */\nfunction toReadableString(x) {\n    if (typeof x === 'bigint') {\n        return `BigInt(${x})`;\n    }\n    else {\n        return JSON.stringify(x);\n    }\n}\n/**\n * Encode a array of values\n * @returns {Buffer} serialised value\n */\nexport function encode(argTypes, args) {\n    if (args.length < argTypes.length) {\n        throw Error('Wrong number of message arguments');\n    }\n    const typeTable = new TypeTable();\n    argTypes.forEach(t => t.buildTypeTable(typeTable));\n    const magic = Buffer.from(magicNumber, 'utf8');\n    const table = typeTable.encode();\n    const len = lebEncode(args.length);\n    const typs = Buffer.concat(argTypes.map(t => t.encodeType(typeTable)));\n    const vals = Buffer.concat(zipWith(argTypes, args, (t, x) => {\n        if (!t.covariant(x)) {\n            throw new Error(`Invalid ${t.display()} argument: ${toReadableString(x)}`);\n        }\n        return t.encodeValue(x);\n    }));\n    return blobFromBuffer(Buffer.concat([magic, table, len, typs, vals]));\n}\n/**\n * Decode a binary value\n * @param retTypes - Types expected in the buffer.\n * @param bytes - hex-encoded string, or buffer.\n * @returns Value deserialised to JS type\n */\nexport function decode(retTypes, bytes) {\n    const b = new Pipe(bytes);\n    if (bytes.byteLength < magicNumber.length) {\n        throw new Error('Message length smaller than magic number');\n    }\n    const magic = safeRead(b, magicNumber.length).toString();\n    if (magic !== magicNumber) {\n        throw new Error('Wrong magic number: ' + magic);\n    }\n    function readTypeTable(pipe) {\n        const typeTable = [];\n        const len = Number(lebDecode(pipe));\n        for (let i = 0; i < len; i++) {\n            const ty = Number(slebDecode(pipe));\n            switch (ty) {\n                case -18 /* Opt */:\n                case -19 /* Vector */: {\n                    const t = Number(slebDecode(pipe));\n                    typeTable.push([ty, t]);\n                    break;\n                }\n                case -20 /* Record */:\n                case -21 /* Variant */: {\n                    const fields = [];\n                    let objectLength = Number(lebDecode(pipe));\n                    let prevHash;\n                    while (objectLength--) {\n                        const hash = Number(lebDecode(pipe));\n                        if (hash >= Math.pow(2, 32)) {\n                            throw new Error('field id out of 32-bit range');\n                        }\n                        if (typeof prevHash === 'number' && prevHash >= hash) {\n                            throw new Error('field id collision or not sorted');\n                        }\n                        prevHash = hash;\n                        const t = Number(slebDecode(pipe));\n                        fields.push([hash, t]);\n                    }\n                    typeTable.push([ty, fields]);\n                    break;\n                }\n                case -22 /* Func */: {\n                    for (let k = 0; k < 2; k++) {\n                        let funcLength = Number(lebDecode(pipe));\n                        while (funcLength--) {\n                            slebDecode(pipe);\n                        }\n                    }\n                    const annLen = Number(lebDecode(pipe));\n                    safeRead(pipe, annLen);\n                    typeTable.push([ty, undefined]);\n                    break;\n                }\n                case -23 /* Service */: {\n                    let servLength = Number(lebDecode(pipe));\n                    while (servLength--) {\n                        const l = Number(lebDecode(pipe));\n                        safeRead(pipe, l);\n                        slebDecode(pipe);\n                    }\n                    typeTable.push([ty, undefined]);\n                    break;\n                }\n                default:\n                    throw new Error('Illegal op_code: ' + ty);\n            }\n        }\n        const rawList = [];\n        const length = Number(lebDecode(pipe));\n        for (let i = 0; i < length; i++) {\n            rawList.push(Number(slebDecode(pipe)));\n        }\n        return [typeTable, rawList];\n    }\n    const [rawTable, rawTypes] = readTypeTable(b);\n    if (rawTypes.length < retTypes.length) {\n        throw new Error('Wrong number of return values');\n    }\n    const table = rawTable.map(_ => Rec());\n    function getType(t) {\n        if (t < -24) {\n            throw new Error('future value not supported');\n        }\n        if (t < 0) {\n            switch (t) {\n                case -1:\n                    return Null;\n                case -2:\n                    return Bool;\n                case -3:\n                    return Nat;\n                case -4:\n                    return Int;\n                case -5:\n                    return Nat8;\n                case -6:\n                    return Nat16;\n                case -7:\n                    return Nat32;\n                case -8:\n                    return Nat64;\n                case -9:\n                    return Int8;\n                case -10:\n                    return Int16;\n                case -11:\n                    return Int32;\n                case -12:\n                    return Int64;\n                case -13:\n                    return Float32;\n                case -14:\n                    return Float64;\n                case -15:\n                    return Text;\n                case -16:\n                    return Reserved;\n                case -17:\n                    return Empty;\n                case -24:\n                    return Principal;\n                default:\n                    throw new Error('Illegal op_code: ' + t);\n            }\n        }\n        if (t >= rawTable.length) {\n            throw new Error('type index out of range');\n        }\n        return table[t];\n    }\n    function buildType(entry) {\n        switch (entry[0]) {\n            case -19 /* Vector */: {\n                const ty = getType(entry[1]);\n                return Vec(ty);\n            }\n            case -18 /* Opt */: {\n                const ty = getType(entry[1]);\n                return Opt(ty);\n            }\n            case -20 /* Record */: {\n                const fields = {};\n                for (const [hash, ty] of entry[1]) {\n                    const name = `_${hash}_`;\n                    fields[name] = getType(ty);\n                }\n                const record = Record(fields);\n                const tuple = record.tryAsTuple();\n                if (Array.isArray(tuple)) {\n                    return Tuple(...tuple);\n                }\n                else {\n                    return record;\n                }\n            }\n            case -21 /* Variant */: {\n                const fields = {};\n                for (const [hash, ty] of entry[1]) {\n                    const name = `_${hash}_`;\n                    fields[name] = getType(ty);\n                }\n                return Variant(fields);\n            }\n            case -22 /* Func */: {\n                return Func([], [], []);\n            }\n            case -23 /* Service */: {\n                return Service({});\n            }\n            default:\n                throw new Error('Illegal op_code: ' + entry[0]);\n        }\n    }\n    rawTable.forEach((entry, i) => {\n        const t = buildType(entry);\n        table[i].fill(t);\n    });\n    const types = rawTypes.map(t => getType(t));\n    const output = retTypes.map((t, i) => {\n        return t.decodeValue(b, types[i]);\n    });\n    // skip unused values\n    for (let ind = retTypes.length; ind < types.length; ind++) {\n        types[ind].decodeValue(b, types[ind]);\n    }\n    if (b.buffer.length > 0) {\n        throw new Error('decode: Left-over bytes');\n    }\n    return output;\n}\n// Export Types instances.\nexport const Empty = new EmptyClass();\nexport const Reserved = new ReservedClass();\nexport const Bool = new BoolClass();\nexport const Null = new NullClass();\nexport const Text = new TextClass();\nexport const Int = new IntClass();\nexport const Nat = new NatClass();\nexport const Float32 = new FloatClass(32);\nexport const Float64 = new FloatClass(64);\nexport const Int8 = new FixedIntClass(8);\nexport const Int16 = new FixedIntClass(16);\nexport const Int32 = new FixedIntClass(32);\nexport const Int64 = new FixedIntClass(64);\nexport const Nat8 = new FixedNatClass(8);\nexport const Nat16 = new FixedNatClass(16);\nexport const Nat32 = new FixedNatClass(32);\nexport const Nat64 = new FixedNatClass(64);\nexport const Principal = new PrincipalClass();\nexport function Tuple(...types) {\n    return new TupleClass(types);\n}\nexport function Vec(t) {\n    return new VecClass(t);\n}\nexport function Opt(t) {\n    return new OptClass(t);\n}\nexport function Record(t) {\n    return new RecordClass(t);\n}\nexport function Variant(fields) {\n    return new VariantClass(fields);\n}\nexport function Rec() {\n    return new RecClass();\n}\nexport function Func(args, ret, annotations = []) {\n    return new FuncClass(args, ret, annotations);\n}\nexport function Service(t) {\n    return new ServiceClass(t);\n}\n//# sourceMappingURL=idl.js.map","import * as base64Arraybuffer from 'base64-arraybuffer';\n/* tslint:disable */\n/* eslint-disable */\nlet wasm;\n// This WASM is generated from the BLS Rust code of the Agent RS (see\n// http://github.com/dfinity/agent-rs/)\n// Once the WASM is compiled, simply base64 encode it and include it in this string.\nconst wasmBytesBase64 = `\n    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\n    g8AAEF8CQAJAIAZB6AFqEFoNACAGQShqEIQBDQAgBkGIPWoQS0EAIQcgBkGIwwBqQTgQchogBkG4IWpBOBByGiAGQYjA\n    AGoQSyAGQcjEAGoQSyAGQcjJAGoQSyAGQcjMAGoQSyAGQagGahBLIAZBsAxqEEsgBkHIzwBqEEsgBkHQ1QBqEEsgBkHY\n    2wBqEEsgBkG4FWoQSyAGQZgjaiAGQcjJAGpBwAEQZxogBkHYJGogBkHIzABqQcABEGcaIAZBmCZqIAZBqAZqQcABEGca\n    IAZB2CdqIAZBsAxqQcABEGcaIAZBmClqIAZByM8AakHAARBnGiAGQdgqaiAGQdDVAGpBwAEQZxogBkGYLGogBkHY2wBq\n    QcABEGcaIAZB2C1qIAZBuBVqQcABEGcaIAZBuBVqQecAEHIaIAZBiMAAaiAGQShqEH8gBkGIwABqEBggBkGYI2ogBkEo\n    ahB/A0AgB0HACkYEQCAGQbghaiAGQegBahBrIAYpA7ghIRcgBkG4IWpBARCdASAGQbghahBEIAYpA7ghIRYgBkGIwwBq\n    IAZBuCFqEGsgBkGIwwBqQQEQnQEgBkGIwwBqEEQgBkG4IWogBkGIwwBqIBdCAoGnEE8gBkGIwABqIAZBKGogFkICgacQ\n    bSAGQcjEAGogBkGIwABqEH8gBkG4IWoQKUEDaiIJQQJ2IgdBAWohAkEAIQgCQAJAAkADQAJAIAZBuCFqQQUQjAEhAyAC\n    IAhGBEAgCUGYA0kNASACQecAQbCEwAAQPAALIAhB5wBGDQIgBkG4FWogCGogA0FwaiIDOgAAIAZBuCFqIANBGHRBGHUQ\n    ngEgBkG4IWoQRCAGQbghakEEEDsgCEEBaiEIDAELCyAGQbgVaiACaiADOgAAIANBGHRBGHVBf2oiA0EBdiECIANBD0sN\n    ASAGQYg9aiAGQZgjaiACQcABbGoQfwNAIAdBf0YEQCAGQYg9aiAGQcjEAGoQcyAGQZgjaiAGQYg9akHAARBnGgwICyAH\n    QeYASw0DIAZBiMAAaiAGQZgjaiAGQbgVaiAHaiwAABAfIAdBf2ohByAGQYg9ahAYIAZBiD1qEBggBkGIPWoQGCAGQYg9\n    ahAYIAZBiD1qIAZBiMAAahAMDAALAAtB5wBB5wBBoITAABA8AAsgAkEIQcCEwAAQPAALIAdB5wBB0ITAABA8AAUgBkHI\n    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\n    UtcEAKAIAIgFBASACdCICcQRAIAAoAggMAQtB1LXBACABIAJyNgIAIAALIQEgACAENgIIIAEgBDYCDCAEIAA2AgwgBCAB\n    NgIIC0EAIQVB6LjBACgCACIAIAZNDQBB6LjBACAAIAZrIgI2AgBB8LjBAEHwuMEAKAIAIgEgBmoiADYCACAAIAJBAXI2A\n    gQgASAGQQNyNgIEIAFBCGoPCyAFDwsgASAHNgIYIAMoAhAiAARAIAEgADYCECAAIAE2AhgLIANBFGooAgAiAEUNACABQR\n    RqIAA2AgAgACABNgIYCwJAIAVBEE8EQCADIAZBA3I2AgQgAyAGaiIEIAVBAXI2AgQgBCAFaiAFNgIAQeS4wQAoAgAiAAR\n    AIABBA3YiAkEDdEHctcEAaiEAQey4wQAoAgAhBwJ/QdS1wQAoAgAiAUEBIAJBH3F0IgJxBEAgACgCCAwBC0HUtcEAIAEg\n    AnI2AgAgAAshAiAAIAc2AgggAiAHNgIMIAcgADYCDCAHIAI2AggLQey4wQAgBDYCAEHkuMEAIAU2AgAMAQsgAyAFIAZqI\n    gBBA3I2AgQgACADaiIAIAAoAgRBAXI2AgQLIANBCGoLtA8BA38jAEGAC2siAiQAIAJBCGoQSyACQcgBakE4EHIaIAJBAT\n    YCgAIgAkGIAmpBOBByGiACQQE2AsACIAJByAJqQTgQchogAkEBNgKAAyACQYgDakE4EHIaIAJBATYCwAMgAkHIA2pBOBB\n    yGiACQQE2AoAEIAJBiARqQQEQigEgAkHIBGpBOBByGiACQQE2AoAFIAJBiAVqQTgQchogAkEBNgLABSACQcgFaiABEIUB\n    IAJBiAZqQTgQchogAkEBNgLABiACQcgGakE4EHIaIAJBATYCgAcgAkGIB2pBOBByGiACQQE2AsAHIAJByAdqQTgQchogA\n    kEBNgKACCACQcgFahBYIQMgAkHICWpB4ITAABBfIAJBiApqIAJByAlqEIsBIAJByAFqIAJBiApqEKUBIAJByAlqQZiFwA\n    AQXyACQYgKaiACQcgJahCLASACQYgCaiACQYgKahClASACQcgFahADIAJByAVqQQsQUiACQYgGaiACQcgFahClASACQYg\n    GaiACQYgEahB4IAJBiAZqEEQgAkGIBmogAkHIBWoQSCACQYgFaiACQcgBahClASACQYgFaiACQYgGahBIIAJBiAZqIAJB\n    iARqEHggAkGIBmoQRCACQYgGaiACQYgCahBIIAJBiAZqEEEgAkGIBmoQRCACQYgDaiACQYgGahClASACQcgDaiACQcgFa\n    hClASACQcgDaiACQYgDahBIIAJByAdqIAJBiANqEKUBIAJByAdqEAMgAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgGai\n    ACQcgBahClASACQYgGaiACQcgGahBIIAJByAdqIAJBiAZqEHggAkHIB2oQRCACQcgHaiACQYgDahBIIAJByAZqIAJBiAV\n    qEEggAkGIBmogAkGIAmoQpQEgAkGIBmogAkHIBmoQSCACQcgHaiACQYgGahB4IAJByAdqEEQgAkGIBmogAkHIB2oQpQEg\n    AkGIBmogAkGIBWoQSCACQYgGaiACQYgHahBcIQQgAkGIBWogAkGIBmoQpQEgAkGIBWogAkGIB2oQNCACQYgFaiACQcgHa\n    hBIIAJBiANqIAJBiAVqEEggAkHIA2ogAkGIBWoQSCACQcgFaiABEEggAkHIBmogAkGIBWoQpQEgAkHIBmoQAyACQYgFai\n    ACQcgGahClASACQYgFaiACQcgFahBIIAJByAVqIAJBiAZqEKUBIAJByAVqQQsQUiACQcgJakHQhcAAEF8gAkGICmogAkH\n    ICWoQiwEgAkHIAmogAkGICmoQpQEgAkHIAmogAkGIB2oQSCACQYgDaiACQcgDakEBIARrIgEQeSACQcgGaiACQYgFaiAB\n    EHkgAkGIBmogAkHIBWogARB5IAJBiAdqIAJByAJqIAEQeSACQYgKaiACQYgGaiACQYgHahAjIAJByARqIAJBiApqEKUBI\n    AJByARqIAJByAZqEEggAkHIBGoQWCEBIAJBiAZqIAJByARqEKUBIAJBiAZqEEEgAkGIBmoQRCACQcgEaiACQYgGaiABIA\n    NzEHkgAkGICmpBiIbAABBfIAJBiAhqIAJBiApqEIsBQTghAQNAIAFBoAVGRQRAIAJBiAhqIAJBiANqEEggAkHICWogAUG\n    IhsAAahBfIAFBOGohASACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQYgIaiACQYgGahB4IAJBiAhqEEQMAQsL\n    IAJByAhqIAJBiANqEIUBIAJByAlqQaiLwAAQXyACQYgKaiACQcgJahCLASACQYgGaiACQYgKahClASACQcgIaiACQYgGa\n    hB4IAJByAhqEERBACEBA0AgAUH4A0ZFBEAgAkHICGogAkGIA2oQSCACQcgJaiABQeCLwABqEF8gAUE4aiEBIAJBiApqIA\n    JByAlqEIsBIAJBiAZqIAJBiApqEKUBIAJByAhqIAJBiAZqEHggAkHICGoQRAwBCwsgAkGICmpB2I/AABBfIAJBiAlqIAJ\n    BiApqEIsBQQAhAQNAIAFByAZGBEACQCACQcgJaiACQYgDahCFASACQcgKakHYlsAAEF8gAkGICmogAkHICmoQiwEgAkGI\n    BmogAkGICmoQpQEgAkHICWogAkGIBmoQeCACQcgJahBEQQAhAQNAIAFBkAZGDQEgAkHICWogAkGIA2oQSCACQcgKaiABQ\n    ZCXwABqEF8gAUE4aiEBIAJBiApqIAJByApqEIsBIAJBiAZqIAJBiApqEKUBIAJByAlqIAJBiAZqEHggAkHICWoQRAwACw\n    ALBSACQYgJaiACQYgDahBIIAJByAlqIAFBkJDAAGoQXyABQThqIQEgAkGICmogAkHICWoQiwEgAkGIBmogAkGICmoQpQE\n    gAkGICWogAkGIBmoQeCACQYgJahBEDAELCyACQYgJaiACQcgEahBIIAJBiAZqIAJBiAhqEKUBIAJBiAZqIAJByAlqEEgg\n    AkEIaiACQYgGahClASACQYgGaiACQYgJahClASACQYgGaiACQcgIahBIIAJByABqIAJBiAZqEKUBIAJBiAZqIAJByAhqE\n    KUBIAJBiAZqIAJByAlqEEggAkGIAWogAkGIBmoQpQEgACACQQhqQcABEGcaIAJBgAtqJAALzQ0CE38IfiMAQYADayIBJA\n    AgADQCOCIUIBR+QoCAgBBaBEAgABASCyABQeABakHoABByGiABQcgBaiAAKQMAIhggGEI/hyIZIBggGRAxIAEgASkDyAE\n    iFEL//////////wODNwPYASABQdABaikDACIXQgaGIBRCOoiEIRUgF0I6iCEaIABBCGoiCyEFIAAhBkEBIQcDQCAHQQZP\n    BEAgAEEYaiEMIABBKGohCyAAQRBqIQcgACkDMCEYQQQhBkEAIQkgAUGgAWohDUEDIQpBAiEIQQchBQJAAkADQCAFQQpLD\n    QIgBiAIIAYgCEsbIQ4gBiAKIAYgCksbQQN0QWhqIQ8gAUGYAWogBUEDdCIQIABqQVBqKQMAIhQgFEI/hyAYIBhCP4ciGR\n    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\n    OBByGiACQQE2AvgMIAJBgA1qQTgQchogAkG4DWpBATYCACACQYAIakE4EHIaIAJBATYCuAggAkHACGpBOBByGiACQfgIa\n    kEBNgIAIAJBgApqIABBgANqIgMQXiACQYAIaiACQYAKahCQASACQYAKaiABQYADaiIFEF4gAkGACGogAkGACmoQDyACQc\n    AMahCpASAERQRAIAJBgApqIAMQXiACQcAMaiACQYAKahCQASACQYAKaiABQYACahBeIAJBwAxqIAJBgApqEA8LIAAoAoA\n    GQQRHBEAgAkGACmogAEGAAmoQXiACQcAMaiACQYAKahCQASACQYAKaiAFEF4gAkHADGogAkGACmoQDwsgAkGABGogAkHA\n    DGogAkGACGoQoQEgAkGABGoQZgsgAkGACGogABCOASACQYAKaiABEI4BIAJBgAhqIABBgAJqIgQQlgEgAkGACGoQrAEgA\n    kGACmogAUGAAmoiBRCWASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAQQkgEgAkGACG\n    ogAEGABGoiAxCWASACQYAIahCsASACQYAKaiAFEJIBIAJBgApqIAFBgARqIgUQlgEgAkGACmoQrAEgAkGABmogAkGACGo\n    QkgEgAkGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAI\n    ahCWASAEIAJBgAJqEJIBIAQgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQ\n    YAIaiADEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBRCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIA\n    JBgAhqEJYBIAJBgAhqIAMQkgEgAkGACGogBRAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgAyACQYAEahCSASADIAJBgAp\n    qEJYBIAJBgAZqIAJBgApqEJYBIAJBgAhqEGYgBCACQYAIahCWAQwDCyAAIAEQBgwECyACQcAMaiABQYAFahBeIAJBgAxq\n    IAJBwAxqQcAAEGcaIAJBgAZqIAJBgAxqEKMBCyACQYAGahBmIAJBgAhqIAIQkgEgAkGACGoQKyACQYACaiACQYAIahCWA\n    SAFIAJBgAJqEJIBIAJBgARqIAJBgAhqEJIBIAJBgAhqIAAQkgEgAkGACGogAxCWASACQYAIahCsASACQYAKaiABEJIBIA\n    JBgApqIAFBgARqEJYBIAJBgApqEKwBIAJBgAhqIAJBgApqEBkgAkGABGogAkGACGoQlgEgAkGACGogAxCSAQJAIARBAkc\n    EQCACQcAMaiABQYAFahBeIAJBgAhqIAJBwAxqEKIBDAELIAJBwAxqIAFBgAVqEF4gAkGADGogAkHADGpBwAAQZxogAkGA\n    CGogAkGADGoQowELIAJBgAhqEGYgAkGACmogAkGACGoQkgEgAkGACmoQKyADIAJBgARqEJIBIAMgAkGACmoQlgEgAkGAB\n    mogAkGACmoQlgEgAkGACGoQZiAFIAJBgAhqEJYBCyACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIABBBT\n    YCgAYgABCZAQwBCyAAIAEQbAsgAkHADWokAAuaCQIPfwt+IwBBwAJrIgIkACACQeAAakGgp8AAEF8gAEE4EHIhDCACQZg\n    BakHwABByGiACQZACakEwEHIaIAwQdCACIAEpAwAiFEL9//P/z///+QF+Qv//////////A4MiETcDiAIgAkHQAGogEUIA\n    IAIpA2AiGCAYQj+HIhoQMSAUIAIpA1AiEXwiFiARVK0gAkHYAGopAwAgFEI/h3x8IhRCOocgASkDCCIRQj+HfCARIBRCB\n    oYgFkI6iIQiEXwiEiARVK18IRNBASEDAkADQAJAIANBB0YEQCACQZACaiEJIAJB6ABqIQpBByEEIAJB4ABqIQ0gAkGIAm\n    ohDkEGIQ8MAQsgA0EBdiIAQQFqIQUgCiAAayEGIAkgAEEDdCIHayEAIAdBCGohCCACQUBrIANBA3QiBCACQeAAamopAwA\n    iFiAWQj+HIhQgAikDiAIiESARQj+HEDEgAkHIAGopAwAgEiAVfCIRIBJUrSATIBd8fHwgESACKQNAfCITIBFUrXwhEiAD\n    QQFqIQcDQCADIAVNBEAgAkGIAmogBGogE0L9//P/z///+QF+Qv//////////A4MiETcDACACQTBqIBFCACAYIBoQMSACQ\n    SBqIBFCACAWIBQQMSACQZgBaiADQQR0aiIAIAJBKGopAwAiGzcDCCAAIAIpAyAiGTcDACACKQMwIhEgE3wiFiARVK0gAk\n    E4aikDACASfHwiFEI6hyABIAdBA3RqKQMAIhFCP4d8IBEgFEIGhiAWQjqIhCIRfCISIBFUrXwhEyAVIBl8IhUgGVStIBc\n    gG3x8IRcgCUEIaiEJIApBAWohCiAHIQMMAwsgBkEGSw0DIAJBEGogAkHgAGogCGopAwAgAkHgAGogAGopAwB9IhEgEUI/\n    hyACQYgCaiAAaikDACACQYgCaiAIaikDAH0iESARQj+HEDEgAikDECIRIBN8IhMgEVStIAJBGGopAwAgEnx8IRIgBUEBa\n    iEFIABBeGohACAGQX9qIQYgCEEIaiEIDAALAAsLA0ACQCAEQQ1HBEAgDyAEQQF2IgBrIQUgDiAAQQN0IgtrIRAgDSALay\n    EIIBMgF3wgEiAVfCITIBJUrXwhEiAEQQFqIQdBMCEAIAkhBiAKIQMDQCAAIAtGDQIgBUEGTQRAIAIgAyALaikDACAAIAh\n    qKQMAfSIRIBFCP4cgACAQaikDACAGIAtqKQMAfSIRIBFCP4cQMSACKQMAIhEgE3wiEyARVK0gAkEIaikDACASfHwhEiAF\n    QX9qIQUgBkEIaiEGIANBCGohAyAAQXhqIQAMAQsLIAVBB0HknsAAEDwACyAMIBJC//////////8DgzcDMCACQcACaiQAD\n    wsgBEEDdCAMakFIaiATQv//////////A4M3AwAgEkI6hyABIAdBA3RqKQMAIhFCP4d8IBEgEkIGhiATQjqIhCIRfCISIB\n    FUrXwhEyAXIARBBHQgAmpBOGoiAEEIaikDAH0gFSAAKQMAIhFUrX0hFyAOQQhqIQ4gDUEIaiENIA9BAWohDyAVIBF9IRU\n    gByEEDAALAAsgBkEHQdSewAAQPAAL+QkBBH8jAEGACWsiAiQAIAJBgAhqIAAQXiACIAJBgAhqEF4gAkGACGogAEGAAWoi\n    BBBeIAJBgAFqIAJBgAhqEF4gAkGACGogARBeIAIgAkGACGoQDyACQYAIaiABQYABaiIFEF4gAkGAAWogAkGACGoQDyAAK\n    AKABiEDAkACQCABKAKABkECRwRAIANBAkYNASACQYAIaiAAQYAFahBeIAJBgAJqIAJBgAhqEF4gAkGACGogAUGABWoQXi\n    ACQYACaiACQYAIahAPDAILIANBAkYEQCACQYAIaiAAQYAFahBeIAJBgAdqIAJBgAhqQcAAEGcaIAJBgAZqIAJBgAdqEIU\n    BIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGABmogAkGAB2oQSCACQYAIakE4EHIaIAJBATYCuAggAkHA\n    CGpBOBByIAJB+AhqQQE2AgAgAkGACGogAkGABmoQpQEQsgEgAkGAAmogAkGACGpBgAEQZxoMAgsgAkGACGogAEGABWoQX\n    iACQYACaiACQYAIahBeIAJBgAhqIAFBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAEMAQsgAkGACG\n    ogAUGABWoQXiACQYACaiACQYAIahBeIAJBgAhqIABBgAVqEF4gAkGAB2ogAkGACGpBwAAQZxogAkGAAmogAkGAB2oQoAE\n    LIAJBgAhqIAAQXiACQYADaiACQYAIahBeIAJBgAhqIAEQXiACQYAEaiACQYAIahBeIAJBgAhqIAQQXiACQYADaiACQYAI\n    ahCVASACQYADahCoASACQYAIaiAFEF4gAkGABGogAkGACGoQlQEgAkGABGoQqAEgAkGABWogAkGAA2oQXiACQYAFaiACQ\n    YAEahAPIAJBgAZqIAIQXiACQYAGaiACQYABahCVASACQYAGahA6IAJBgAVqIAJBgAZqEJUBIAJBgAhqIAAQXiACQYADai\n    ACQYAIahCQASACQYAIaiAAQYAFaiIDEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogARBeIAJBgARqIAJBgAh\n    qEJABIAJBgAhqIAFBgAVqIgEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAHaiACQYADahBeIAJBgAdqIAJBgARq\n    EA8gAkGABmogAhCQASACQYAGaiACQYACahCVASACQYAGahA6IAJBgAdqIAJBgAZqEJUBIAJBgAhqIAQQXiACQYADaiACQ\n    YAIahCQASACQYAIaiADEF4gAkGAA2ogAkGACGoQlQEgAkGAA2oQqAEgAkGACGogBRBeIAJBgARqIAJBgAhqEJABIAJBgA\n    hqIAEQXiACQYAEaiACQYAIahCVASACQYAEahCoASACQYAIaiACQYADahBeIAJBgAhqIAJBgARqEA8gAkGABmogAkGAAWo\n    QkAEgAkGABmogAkGAAmoQlQEgAkGABmoQOiACQYAIaiACQYAGahCVASACQYABahBVIAIgAkGAAWoQlQEgACACIAJBgAVq\n    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\n    GogAkGABWoQfSACQYAEahCoASACQYAFaiAAEJABIAJBgAVqIAQQlQEgAkGABWoQqAEgAkGABmogARBeIAJBgAZqIAYQlQ\n    EgAkGABmoQqAEgAkGABWogAkGABmoQDyACQYAGaiACEJABIAJBgAZqIAJBgAJqEJUBIAJBgAZqIAJBgAVqELUBIAJBgAZ\n    qEKgBIAJBgAVqIAIQkAEgAkGABWogAhCVASACIAJBgAVqEJUBIAIQqAEgAkGAAmpBDBCfASACQYACahBVIAJBgAJqEKgB\n    IAJBgAdqIAJBgAFqEF4gAkGAB2ogAkGAAmoQlQEgAkGAB2oQqAEgAkGAAWogAkGAAmoQfSACQYABahCoASACQYAGakEME\n    J8BIAJBgAZqEFUgAkGABmoQqAEgAkGABWogAkGABmoQkAEgAkGABWogAkGABGoQDyACQYACaiACQYADahCQASACQYACai\n    ACQYABahAPIAJBgAVqIAJBgAJqELUBIAJBgAZqIAIQDyACQYABaiACQYAHahAPIAJBgAZqIAJBgAFqEJUBIAIgAkGAA2o\n    QDyACQYAHaiACQYAEahAPIAJBgAdqIAIQlQEgACACQYAFahCQASAAEKgBIAMgAkGABmoQkAEgAxCoASAEIAJBgAdqEJAB\n    IAQQqAEgAkGACGokAAv2BQEFfyMAQYAEayICJAAgAiAAEIUBIAIgARBIIAJBQGsgAEFAayIDEIUBIAJBQGsgAUFAayIFE\n    EggAkGAAWogAEGAAWoiBBCFASACQYABaiABQYABaiIGEEggAkHAAWogABCFASACQcABaiADEHggAkHAAWoQRCACQYACai\n    ABEIUBIAJBgAJqIAUQeCACQYACahBEIAJBwAFqIAJBgAJqEEggAkGAAmogAhClASACQYACaiACQUBrEHggAkHAAWogAkG\n    AAmoQgAEgAkHAAWoQRCACQYACaiADEKUBIAJBgAJqIAQQeCACQYACahBEIAJBwAJqIAUQhQEgAkHAAmogBhB4IAJBwAJq\n    EEQgAkGAAmogAkHAAmoQSCACQcACaiACQUBrEKUBIAJBwAJqIAJBgAFqEHggAkGAAmogAkHAAmoQgAEgAkGAAmoQRCACQ\n    cACaiAAEKUBIAJBwAJqIAQQeCACQcACahBEIAJBgANqIAEQhQEgAkGAA2ogBhB4IAJBgANqEEQgAkHAAmogAkGAA2oQSC\n    ACQYADaiACEKUBIAJBgANqIAJBgAFqEHggAkGAA2ogAkHAAmoQswEgAkGAA2oQRCACQcACaiACEKUBIAJBwAJqIAIQeCA\n    CIAJBwAJqEHggAhBEIAJBgAFqQQwQUiACQcADaiACQUBrEIUBIAJBwANqIAJBgAFqEHggAkHAA2oQRCACQUBrIAJBgAFq\n    EIABIAJBQGsQRCACQYADakEMEFIgAkHAAmogAkGAA2oQpQEgAkHAAmogAkGAAmoQSCACQYABaiACQcABahClASACQYABa\n    iACQUBrEEggAkHAAmogAkGAAWoQswEgAkGAA2ogAhBIIAJBQGsgAkHAA2oQSCACQYADaiACQUBrEHggAiACQcABahBIIA\n    JBwANqIAJBgAJqEEggAkHAA2ogAhB4IAAgAkHAAmoQpQEgABBEIAMgAkGAA2oQpQEgAxBEIAQgAkHAA2oQpQEgBBBEIAJ\n    BgARqJAALxQUBBH8jAEHwEmsiACQAIAAQOEF/IQEgABCIAUUEQCAAQYADakE4EHIaIABBuANqQTgQchogAEG4A2ogAEGA\n    A2oQVCAAQfAKakG4gMAAEF8gAEHwDWpB8IDAABBfIABB8ANqIABB8ApqIABB8A1qEEkgAEHwBGpBOBByGiAAQQE2AqgFI\n    ABBsAVqQTgQchogAEHoBWpBATYCACAAQfAFakE4EHIaIABBATYCqAYgAEGwBmpBOBByGiAAQegGakEBNgIAIABB8AZqQT\n    gQchogAEEBNgKoByAAQbAHakE4EHIaIABB6AdqQQE2AgBBf2ohAyAAQfAHahAqIABB8AdqIAAQfiAAQfAKahAqIABB8Ap\n    qIABB8AdqEH4gAEHwDWoQKiAAQfANaiAAQfAHahB+IABB8A1qEJwBAkACQAJAA0AgAiEBIANBAkkNAyAAQfAKaiAAQfAE\n    aiAAQfAFaiAAQfAGahAlIAFBxABNBEAgAEHwEGogAEHwBGogAEHwBWogAEHwBmoQRiABQQh0QdCrwABqIABB8BBqEJIBI\n    AFBAWohAgJAAkAgAEG4A2ogA0F/aiIDEFcgAEGAA2ogAxBXa0EBag4DAQMAAwsgAEHwCmogAEHwB2ogAEHwBGogAEHwBW\n    ogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYgAkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQI\n    MAgsgAEHwCmogAEHwDWogAEHwBGogAEHwBWogAEHwBmoQHiABQcMASw0DIABB8BBqIABB8ARqIABB8AVqIABB8AZqEEYg\n    AkEIdEHQq8AAaiAAQfAQahCSASABQQJqIQIMAQsLIAFBxQBBvIHAABA8AAtBxQBBxQBBzIHAABA8AAtBxQBBxQBB3IHAA\n    BA8AAtBACEBCyAAQfASaiQAIAEL8gQBBH8jAEGADGsiAiQAIAIgABCOASACQYACahAvIAJBgARqIABBgAJqIgMQjgEgAk\n    GABmoQLyACQYAIaiAAEI4BIAJBgApqIAEQjgEgAiABEBkgAkGABGogAUGAAmoiBBAZIAJBgAhqIAMQlgEgAkGACmogBBC\n    WASACQYAIahCsASACQYAKahCsASACQYACaiACQYAIahCSASACQYACaiACQYAKahAZIAJBgAhqIAMQkgEgAkGACGogAEGA\n    BGoiBRCWASACQYAKaiAEEJIBIAJBgApqIAFBgARqIgQQlgEgAkGACGoQrAEgAkGACmoQrAEgAkGABmogAkGACGoQkgEgA\n    kGABmogAkGACmoQGSACQYAIaiACEJIBIAJBgAhqECsgAkGACmogAkGABGoQkgEgAkGACmoQKyACQYACaiACQYAIahCWAS\n    ADIAJBgAJqEJIBIAMgAkGACmoQlgEgAkGABmogAkGACmoQlgEgAkGABGogAkGACGoQlgEgAkGACGogABCSASACQYAIaiA\n    FEJYBIAJBgAhqEKwBIAJBgApqIAEQkgEgAkGACmogBBCWASACQYAKahCsASACQYAIaiACQYAKahAZIAJBgARqIAJBgAhq\n    EJYBIAJBgAhqIAUQkgEgAkGACGogBBAZIAJBgApqIAJBgAhqEJIBIAJBgApqECsgBSACQYAEahCSASAFIAJBgApqEJYBI\n    AJBgAZqIAJBgApqEJYBIAJBgAhqEGYgAyACQYAIahCWASACQYAGahCsASACQYAGahBmIAAgAhCSASAAIAJBgAZqEJYBIA\n    BBBTYCgAYgABCZASACQYAMaiQAC68EAQV/IwBBkAZrIgIkACAAQUBrIQQCQCABQfgAaigCACABKAI4aqwgAEH4AGooAgA\n    iAyAAKAI4IgVqrH5CgICAEFMNACAFQQJOBH8gABASIAAoAngFIAMLQQJIDQAgBBASCyACQaCnwAAQX0EAIQMgAkE4akHw\n    ABByGiABQUBrIQUDQCADQThGBEAgAkHwAGohBkEAIQMDQCADQThGRQRAIAMgBmogAiADaikDADcDACADQQhqIQMMAQsLI\n    AJBqAFqIAAQXyACQeABaiABEF8gAkGYAmogACABEAggAkGIA2ogBCAFEAggAkGoAWogBBBhIAJBqAFqEEQgAkHgAWogBR\n    BhIAJB4AFqEEQgAkH4A2ogAkGoAWogAkHgAWoQCEEAIQMgAkHoBGpB8AAQchoDQCADQfAARkUEQCACQegEaiADaiACQZg\n    CaiADaikDADcDACADQQhqIQMMAQsLIAJB6ARqIAJBiANqEGVBACEDA0AgA0HwAEZFBEAgAkGIA2ogA2oiASACQThqIANq\n    KQMAIAEpAwB9NwMAIANBCGohAwwBCwsgAkGYAmogAkGIA2oQZSACQZgCahBFIAJB+ANqIAJB6ARqEGQgAkH4A2oQRSACQ\n    dgFaiACQZgCahAFIAAgAkHYBWoQayAAQQM2AjggAkHYBWogAkH4A2oQBSAEIAJB2AVqEGsgAEECNgJ4IAJBkAZqJAAFIA\n    JBOGogA2pCADcDACADQQhqIQMMAQsLC5QEAQF/IwBB0CJrIgMkACADQcAWakG4gMAAEF8gA0HIHGpB8IDAABBfIANBCGo\n    gA0HAFmogA0HIHGoQSSADQYgBakE4EHIaIANBwAFqQTgQchogA0H4AWoQKgJAIAIQhAFFBEAgA0H4BGoQKiADQfgEaiAB\n    EH4gA0H4BGoQSiADQfgHahBLIANB+AdqIAIQfyADQfgHahBHIANByBxqIANB+AdqEIUBIANBuAlqIANByBxqEIUBIANBy\n    BxqIANBuAhqEIUBIANB+AlqIANByBxqEIUBIANBuApqECogA0G4DWoQYCADQbgKaiADQfgEahB+IANBwBNqECogA0HAE2\n    ogA0H4BGoQfiADQcATahCcASADQcABaiADQYgBahBUQX9qIQIDQCACQQFNBEAgA0G4DWoQkwEgACADQbgNakGIBhBnGgw\n    DBSADQbgNahAbIANBwBZqIANBuApqIANBuAlqIANB+AlqEBcCQAJAAkAgA0HAAWogAkF/aiICEFcgA0GIAWogAhBXa0EB\n    ag4DAQIAAgsgA0HIHGogA0G4CmogA0H4BGogA0G4CWogA0H4CWoQFiADQcAWaiADQcgcahAGDAELIANByBxqIANBuApqI\n    ANBwBNqIANBuAlqIANB+AlqEBYgA0HAFmogA0HIHGoQBgsgA0G4DWogA0HAFmoQBAwBCwALAAsgABBgCyADQdAiaiQAC8\n    MDARV/A0AgAUHAAUYEQAJAIABBKGohCyAAQRRqKAIAIgwhCCAAQRBqKAIAIg0hAyAAQQxqKAIAIg4hAiAAKAIIIg8hASA\n    AQRhqKAIAIhAhCiAAQRxqKAIAIhEhBCAAQSBqKAIAIhIhByAAQSRqKAIAIhMhBgNAIAchCSAEIQcgCiEEIAVBgAJGDQEg\n    AiADcSEUIAIgA3MhFSAFIAtqKAIAIAVB9J7AAGooAgAgBEEadyAEQRV3cyAEQQd3cyAGaiAJIARBf3NxIAQgB3FyampqI\n    gYgCGohCiAFQQRqIQUgAyEIIAIhAyABIQIgAUEedyABQRN3cyABQQp3cyAUIAEgFXFzaiAGaiEBIAkhBgwACwALBSAAIA\n    FqIgNB6ABqIANBzABqKAIAIANBKGooAgAgA0EsaigCACICQRl3IAJBDndzIAJBA3ZzIANB4ABqKAIAIgJBD3cgAkENd3M\n    gAkEKdnNqamo2AgAgAUEEaiEBDAELCyAAIAYgE2o2AiQgACAJIBJqNgIgIAAgByARajYCHCAAIAQgEGo2AhggACAIIAxq\n    NgIUIAAgAyANajYCECAAIAIgDmo2AgwgACABIA9qNgIIC9YDAgZ/An4jAEHwAGsiASQAIAFBoKfAABBfIAFBOGogARBfI\n    AAQRAJAAkACQCABAn8gACgCOCICQRBMBEAgAkF/ahA5DAELIAEpAzAiCEIBfCIHIAhUDQEgACkDMCIIQoCAgICAgICAgH\n    9RQQAgB0J/URsNAiABQThqIAggB3+nECghByABIAEpA2ggB0I6hnw3A2ggACABQThqEGIgABBEQQILIgMQLSAAQQhqIQQ\n    DQCADRQ0DIAEgASkDCEI5hkKAgICAgICAgAKDIAEpAwBCAYeEIgc3AwAgASAAKQMAIAd9IgdC//////////8DgzcDOEEA\n    IQIDQCAHQjqHIQcgAkEoRkUEQCABIAJqIgVBCGoiBiAFQRBqKQMAQjmGQoCAgICAgICAAoMgBikDAEIBh4QiCDcDACABI\n    AJqQUBrIAIgBGopAwAgCH0gB3wiB0L//////////wODNwMAIAJBCGohAgwBCwsgASABKQMwQgGHIgg3AzAgASAAKQMwIA\n    h9IAd8Igc3A2ggACABQThqIAdCP4enQQFqEE8gA0F/aiEDDAALAAtBoKLAAEEZQbyiwAAQWwALQdCiwABBH0G8osAAEFs\n    ACyAAQQE2AjggAUHwAGokAAuhAwEBfyMAQZADayIGJAAgBkEIakHAABByGiAGQcgAakGoAhByGiAGQcgAahBDA0AgAQRA\n    IAZByABqQQAQPiABQX9qIQEMAQUCQCACBEAgBkHIAGogAiADEHoLIAQEQCAGQcgAaiAEIAUQegsgBkGIA2pCADcDACAGQ\n    YADakIANwMAIAZB+AJqQgA3AwAgBkIANwPwAiAGKAJIIQEgBigCTCECIAZByABqQYABED4DQCAGKAJIQf8DcUHAA0ZFBE\n    AgBkHIAGpBABA+DAELCyAGQawBaiABNgIAIAZBqAFqIAI2AgAgBkHIAGoQEUEAIQJBACEBA0AgAUEgRkUEQCAGQfACaiA\n    BaiABQXxxIAZqQdAAaigCACACQX9zQRhxdjoAACACQQhqIQIgAUEBaiEBDAELCyAGQcgAahBDQQAhAQNAIAFBIEZFBEAg\n    BkEIaiABaiAGQfACaiABai0AADoAACABQQFqIQEMAQsLQQAhAQNAIAFBIEYNASAAIAFqIAZBCGogAWotAAA6AAAgAUEBa\n    iEBDAALAAsLCyAGQZADaiQAC6EDAQN/IwBBgAZrIgEkACABIABBgAFqIgMQXiABQYABaiADEF4gAUGAAWoQMiABQYACai\n    ABEF4gAUGAAmogAEGAAmoiAhAPIAFBgANqIAIQXiABQYADahAyIAIgAUGAAWoQkAEgAiABQYABahCVASACEKgBIAIQpwE\n    gAhCnASACEKgBIAFBgANqQQwQnwEgAUGAA2oQVSABQYADahCoASABQYAEaiABQYADahBeIAFBgARqIAIQDyABQYAFaiAB\n    QYABahBeIAFBgAVqIAFBgANqEJUBIAFBgAVqEKgBIAIgAUGAAmoQDyABQYACaiABQYADahCQASABQYACaiABQYADahCVA\n    SABQYADaiABQYACahCVASABQYADahCoASABQYABaiABQYADahB9IAFBgAFqEKgBIAFBgAVqIAFBgAFqEA8gAUGABWogAU\n    GABGoQlQEgAUGAAmogABCQASABQYACaiABEA8gACABQYABahCQASAAEKgBIAAgAUGAAmoQDyAAEKcBIAAQqAEgAyABQYA\n    FahCQASADEKgBIAFBgAZqJAALhQMBBH8CQAJAIAFBgAJPBEAgAEEYaigCACEEAkACQCAAIAAoAgwiAkYEQCAAQRRBECAA\n    QRRqIgIoAgAiAxtqKAIAIgENAUEAIQIMAgsgACgCCCIBIAI2AgwgAiABNgIIDAELIAIgAEEQaiADGyEDA0AgAyEFIAEiA\n    kEUaiIDKAIAIgFFBEAgAkEQaiEDIAIoAhAhAQsgAQ0ACyAFQQA2AgALIARFDQIgACAAQRxqKAIAQQJ0QeS3wQBqIgEoAg\n    BHBEAgBEEQQRQgBCgCECAARhtqIAI2AgAgAkUNAwwCCyABIAI2AgAgAg0BQdi1wQBB2LXBACgCAEF+IAAoAhx3cTYCAA8\n    LIABBDGooAgAiAiAAQQhqKAIAIgBHBEAgACACNgIMIAIgADYCCA8LQdS1wQBB1LXBACgCAEF+IAFBA3Z3cTYCAAwBCyAC\n    IAQ2AhggACgCECIBBEAgAiABNgIQIAEgAjYCGAsgAEEUaigCACIARQ0AIAJBFGogADYCACAAIAI2AhgLC7MCAQF/IwBBg\n    AtrIgUkACAFEC8gBUGAAmoQLyAFQYAEahAvIAVBgAZqQTgQchogBUEBNgK4BiAFQcAGakE4EHIaIAVB+AZqQQE2AgAgBU\n    GAB2pBOBByGiAFQQE2ArgHIAVBwAdqQTgQchogBUH4B2pBATYCACAFQYAIakE4EHIaIAVBATYCuAggBUHACGpBOBByGiA\n    FQfgIakEBNgIAIAEgAiAFQYAGaiAFQYAHaiAFQYAIahAeIAVBgAhqIAMQoAEgBUGABmogBBCgASAFQYAJaiAFQYAGaiAF\n    QYAHahCRASAFIAVBgAlqEJIBIAVBgAlqIAVBgAhqEJsBIAVBgARqIAVBgAlqEJIBIAVBgARqEGYgACAFIAVBgAJqIAVBg\n    ARqEHYgAEEDNgKABiAFQYALaiQAC7ECAQF/IwBBgAtrIgQkACAEEC8gBEGAAmoQLyAEQYAEahAvIARBgAZqQTgQchogBE\n    EBNgK4BiAEQcAGakE4EHIaIARB+AZqQQE2AgAgBEGAB2pBOBByGiAEQQE2ArgHIARBwAdqQTgQchogBEH4B2pBATYCACA\n    EQYAIakE4EHIaIARBATYCuAggBEHACGpBOBByGiAEQfgIakEBNgIAIAEgBEGABmogBEGAB2ogBEGACGoQJSAEQYAIaiAC\n    EKABIARBgAZqIAMQoAEgBEGACWogBEGABmogBEGAB2oQkQEgBCAEQYAJahCSASAEQYAJaiAEQYAIahCbASAEQYAEaiAEQ\n    YAJahCSASAEQYAEahBmIAAgBCAEQYACaiAEQYAEahB2IABBAzYCgAYgBEGAC2okAAvJAgEDfyMAQcACayIBJAAgASAAQU\n    BrIgMQhQEgARADIAFBQGsgAxCFASABQUBrIABBgAFqIgIQSCABQYABaiACEIUBIAFBgAFqEAMgAiABEKUBIAIgARB4IAI\n    QRCACEE4gAhBOIAIQRCABQYABakEMEFIgAUHAAWogAUGAAWoQhQEgAUHAAWogAhBIIAFBgAJqIAEQhQEgAUGAAmogAUGA\n    AWoQeCABQYACahBEIAIgAUFAaxBIIAFBQGsgAUGAAWoQpQEgAUFAayABQYABahB4IAFBgAFqIAFBQGsQeCABIAFBgAFqE\n    IABIAEQRCABQYACaiABEEggAUGAAmogAUHAAWoQeCABQUBrIAAQpQEgAUFAayADEEggACABEKUBIAAQRCAAIAFBQGsQSC\n    AAEE4gABBEIAMgAUGAAmoQpQEgAxBEIAFBwAJqJAALrQIBA38jAEGABGsiAiQAIAIgABBeIAJBgAFqIABBgAFqIgMQXiA\n    CQYACakE4EHIaIAJBATYCuAIgAkHAAmpBOBByGiACQfgCakEBNgIAIAJBgANqIAMQXiACIAEQDyACQYABaiABQYABaiIE\n    EA8gAkGAAmogBBCQASACQYACaiABEJUBIAJBgANqIAAQlQEgAkGAAmoQqAEgAkGAA2oQqAEgAkGAA2ogAkGAAmoQDyACQ\n    YACaiACEJABIAJBgAJqEDogAkGAA2ogAkGAAmoQlQEgAkGAA2oQqAEgAkGAAmogAkGAAWoQkAEgAkGAAmoQOiADIAJBgA\n    NqEJABIAMgAkGAAmoQlQEgAkGAAWoQVSAAIAJBgAFqEJABIAAgAhCVASAAEKwBIAJBgARqJAALvQIBA38jAEGACGsiASQ\n    AIAEgABCOASABQYACaiAAQYAEaiICEI4BIAFBgARqIABBgAJqIgMQjgEgAUGABmoQLyAAECIgAUGABmogABCSASABQYAG\n    aiAAEJYBIAAgAUGABmoQlgEgABCsASABELYBIAEQrwEgACABEJYBIAFBgAJqECIgAUGAAmoQZiABQYAGaiABQYACahCSA\n    SABQYAGaiABQYACahCWASABQYACaiABQYAGahCWASABQYACahCsASABQYAEahAiIAFBgAZqIAFBgARqEJIBIAFBgAZqIA\n    FBgARqEJYBIAFBgARqIAFBgAZqEJYBIAFBgARqEKwBIAMQrgEgAxCvASACELYBIAIQrwEgAyABQYACahCWASACIAFBgAR\n    qEJYBIABBBTYCgAYgABCaASABQYAIaiQAC7ICAQN/IwBBgAhrIgEkACAAKAKABkEBRwRAIAEgABCOASABQYACaiAAQYAC\n    aiIDEI4BIAFBgARqIABBgARqIgIQjgEgAUGABmogABCOASABECIgAUGAAmogAhAZIAFBgAJqEK8BIAFBgAJqEKwBIAFBg\n    ARqECIgAUGABmogAxAZIAFBgAZqEK8BIAIgABCWASACIAMQlgEgAhCsASACECIgACABEJIBIAEgAUGAAmoQlgEgARCsAS\n    ABIAFBgARqEJYBIAEgAUGABmoQlgEgARCsASABECsgAUGAAmoQZiABQYAEahBmIAAgAUGAAmoQlgEgAyABQYAEahCSASA\n    DIAFBgAZqEJYBIAIgARCWASAAQQRBBSAAKAKABkF+cUECRhs2AoAGIAAQmQELIAFBgAhqJAALigIBAn8jAEHgAWsiAiQA\n    IAAQRCACQQhqQTAQchogAkIBNwMAIAJBOGogABBfIAJB8ABqIAEQXyACQagBakE4EHIaIAAQdANAIAJBOGogAkHwAGoQN\n    UF/TARAA0ACQCADQQBMDQAgAkHwAGpBARA7IAJBARA7IAJBqAFqIAJBOGoQayACQagBaiACQfAAahBiIAJBqAFqEEQgAk\n    E4aiACQagBaiACKQPYAUI/h6dBAWoiARBPIAJBqAFqIAAQayACQagBaiACEGEgAkGoAWoQRCAAIAJBqAFqIAEQTyADQX9\n    qIQMMAQsLBSACQQEQLSACQfAAakEBEC0gA0EBaiEDDAELCyACQeABaiQAC54CAQF/IwBBgA1rIgMkACADIAEQaiADEJkB\n    IANBiAZqIAIQXyADQYgGahBEIANBwAZqIANBiAZqEF8gA0HABmpBAxAoGiADQcAGahBEIANB+AZqIAMQagJAIANBwAZqE\n    FpFBEAgA0HABmoQKUF/aiECA0AgAkEBTQRAIANB+AZqEJoBDAMLIANB+AZqEBoCQAJAIANBwAZqIAJBf2oiAhBXIANBiA\n    ZqIAIQV2tBAWoOAwECAAILIANB+AZqIAMQDgwBCyADEJMBIANB+AZqIAMQDiADEJMBDAALAAsgA0H4BmoQsAEgA0H4B2o\n    QqQEgA0H4CGoQrQEgA0H4CmoQrQEgA0EBNgL4DAsgACADQfgGakGIBhBnGiADQYANaiQAC5ACAQJ/IwBBgAJrIgUkACAF\n    QYABaiAAEF4gAiAFQYABahCQASAFQYABaiAAQYABahBeIAQgBUGAAWoQkAEgBUGAAWogAEGAAmoiBhBeIAUgBUGAAWoQX\n    iAFQYABaiAGEF4gAyAFQYABahCQASAFQYABaiABQYABaiIGEF4gBSAFQYABahAPIAVBgAFqIAEQXiADIAVBgAFqEA8gAi\n    ADEH0gAhCoASAEIAUQfSAEEKgBIAUgAhCQASACEFUgAhCoASAFQYABaiAGEF4gBSAFQYABahAPIAMgBBCQASAFQYABaiA\n    BEF4gAyAFQYABahAPIAMgBRB9IAMQqAEgBBA6IAQQqAEgACABEAsgBUGAAmokAAvkAQECfyMAQcABayIDJAAgAxBLIAAg\n    ASACQR91IgQgAnMgBEF/c2pBAm0iAkF/akEfdhBtIAAgAUHAAWogAkEBc0F/akEfdhBtIAAgAUGAA2ogAkECc0F/akEfd\n    hBtIAAgAUHABGogAkEDc0F/akEfdhBtIAAgAUGABmogAkEEc0F/akEfdhBtIAAgAUHAB2ogAkEFc0F/akEfdhBtIAAgAU\n    GACWogAkEGc0F/akEfdhBtIAAgAUHACmogAkEHc0F/akEfdhBtIAMgABB/IAMQpgEgACADIARBAXEQbSADQcABaiQAC+Q\n    BAQJ/IwBBgANrIgMkACADECogACABIAJBH3UiBCACcyAEQX9zakECbSICQX9qQR92EG8gACABQYADaiACQQFzQX9qQR92\n    EG8gACABQYAGaiACQQJzQX9qQR92EG8gACABQYAJaiACQQNzQX9qQR92EG8gACABQYAMaiACQQRzQX9qQR92EG8gACABQ\n    YAPaiACQQVzQX9qQR92EG8gACABQYASaiACQQZzQX9qQR92EG8gACABQYAVaiACQQdzQX9qQR92EG8gAyAAEH4gAxCcAS\n    AAIAMgBEEBcRBvIANBgANqJAALvAEBAn8jAEGwAWsiAiQAIAJBMBByIQIDQCADQTBGBEACQCABQTBqIQEgAkEwaiACEHV\n    BACEDA0AgA0EwRg0BIAIgA2ogASADai0AADoAACADQQFqIQMMAAsACwUgAiADaiABIANqLQAAOgAAIANBAWohAwwBCwsg\n    AkHwAGogAhB1IABBOBByIgBBATYCOCAAQUBrQTgQciAAQfgAakEBNgIAIAAgAkHwAGoQpQEgAkEwahClASACQbABaiQAC\n    9QBAQJ/IwBBgANrIgEkACABIAAQXiABQYABaiAAQYABaiICEF4gAUGAAmogABBeIAFBgAJqIAIQDyABIAIQlQEgAUGAAW\n    oQVSABQYABaiAAEJUBIAEQqAEgAUGAAWoQqAEgACABEJABIAAgAUGAAWoQDyABQYABaiABQYACahCQASABQYABahBVIAF\n    BgAFqIAFBgAJqEJUBIAFBgAFqEKgBIAFBgAFqEDogACABQYABahCVASABQYACahCnASACIAFBgAJqEJABIAAQrAEgAUGA\n    A2okAAvEAQEBfyMAQYADayIDJAAgA0EIaiABEIUBAkAgAkUEQCADQQhqEAcMAQsgA0EIaiACEKUBCyADQcgAakHYo8AAE\n    F8gA0GAAWogA0HIAGoQiwEgA0HAAWogA0EIahCFASADQcABahADIANBwAFqIAEQSCAAIAEQhQEgACADQQhqEEggA0GAAm\n    ogA0HAAWoQhQEgABBYIQEgA0HAAmogABCFASADQcACahBBIANBwAJqEEQgACADQcACaiABEHkgA0GAA2okAAufAQEBfyM\n    AQfAAayICJAAgAiABEF9BACEBIAJBOGpBOBByGiAAEEQCQCAAIAIQNUEASA0AA0AgAkEBEC0gAUEBaiEBIAAgAhA1QX9K\n    DQALA0AgAUEATA0BIAJBARA7IAJBOGogABBrIAJBOGogAhBiIAJBOGoQRCAAIAJBOGogAikDaEI/h6dBAWoQTyABQX9qI\n    QEMAAsACyACQfAAaiQAC7IBAQF/IwBBgAJrIgQkACAEQYABaiAAEF4gAyAEQYABahCQASAEQYABaiAAQYABahBeIAQgBE\n    GAAWoQXiAEQYABaiAAQYACahBeIAIgBEGAAWoQkAEgASAEEJABIAEgAhAPIAMQMiAEEDIgAhAyIAEQpwEgARA6IAEQqAE\n    gARBVIAEQqAEgAkEMEJ8BIANBAxCfASACEFUgAhCoASACIAQQfSACEKgBIAAQFCAEQYACaiQAC58BAQJ/IwBBgAJrIgIk\n    ACAAIAEQXiAAEDIgAkGIAWpB2KTAABBfIAJBCGpBOBByGiACQQE2AkAgAkHIAGpBOBByIAJBgAFqQQE2AgAgAkHAAWogA\n    kGIAWoQiwEgAkEIaiACQcABahClARCyASACQQhqEKgBIAJBCGoQVSACQQhqEKgBIAAgARAPIAAgAkEIahCVASAAEKsBIA\n    JBgAJqJAALowEBAX8jAEEwayIGJAAgBkEQaiAAIAEQsQEgBiAGKAIUIgA2AhwgBiAGKAIQIgE2AhggBkEIaiACIAMQsQE\n    gBiAGKAIMIgI2AiQgBiAGKAIIIgM2AiAgBiAEIAUQsQEgBiAGKAIEIgQ2AiwgBiAGKAIAIgU2AiggASAAIAMgAiAFIAQQ\n    ACAGQShqEKQBIAZBIGoQpAEgBkEYahCkASAGQTBqJAALiAECA38DfiMAQRBrIgIkAAN+IANBOEYEfiACQRBqJAAgBgUgA\n    iAAIANqIgQpAwAiBSAFQj+HIAGsIgUgBUI/hxAxIAQgAikDACIHIAZ8IgVC//////////8DgzcDACAFIAdUrSACQQhqKQ\n    MAIAZCP4d8fEIGhiAFQjqIhCEGIANBCGohAwwBCwsLhAECA38BfiMAQUBqIgEkACABQQhqIAAQXyABQQhqEEQgAUE4aiE\n    CQQYhA0HcAiEAAn8DQEEAIANBAEgNARogAikDACIEUARAIAJBeGohAiAAQUZqIQAgA0F/aiEDDAELCwN/IARQBH8gAAUg\n    AEEBaiEAIARCAn8hBAwBCwsLIAFBQGskAAuHAQEBfyMAQcABayIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAa\n    kEBNgIAIAEQUCABQYgBakE4EHIaIABBgAFqIAFBgAEQZxogAEGAAmpBOBByGiAAQbgCakEBNgIAIABBvAJqIAFBhAFqQT\n    wQZxogAEH4AmpBATYCACABQcABaiQAC48BAQJ/IwBBgAJrIgEkACAAEKwBIAEgABBeIAFBgAFqQTgQchogAUEBNgK4ASA\n    BQcABakE4EHIaIAFB+AFqQQE2AgAgASAAQYABaiICEJUBIAEQOiABQYABaiABEJABIAFBgAFqIAIQlQEgAiABEJABIAIg\n    ABCVASAAIAFBgAFqEJABIAAQrAEgAUGAAmokAAt9AgF/An4jAEGAAWsiASQAIAFBCGogABCFASABQQhqEBIgAUHIAGogA\n    UEIahCDAUEIIQADQCAAQThGRQRAIAFByABqIABqKQMAIAKEIQIgAEEIaiEADAELCyABKQNIIQMgAUGAAWokACACQn98IA\n    NCAYVCf3yDQjqIp0EBcQuJAQIBfwJ+IAAgACkDMCABQT9xrSIDhiAAKQMoQTogAWtBP3GtIgSHhDcDMCAAQShqIQFBBiE\n    CA0AgAkEBTQRAIAAgACkDACADhkL//////////wODNwMABSABIAEpAwAgA4ZC//////////8DgyABQXhqIgEpAwAgBIeE\n    NwMAIAJBf2ohAgwBCwsLiQECAX8CfiAAIAApA2BBOiABQTpwIgFrrSIEhyAAKQNoIAGtIgOGhDcDaCAAQeAAaiEBQQ0hA\n    gNAIAJBAU0EQCAAIAApAwAgA4ZC//////////8DgzcDAAUgASABKQMAIAOGQv//////////A4MgAUF4aiIBKQMAIASHhD\n    cDACACQX9qIQIMAQsLC3EBAX8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByGiAAQfgAakEBNgIAIAFBCGpBOBB\n    yGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAEG8AWogAUEEakE8EGcaIABB+AFqQQE2AgAgAUFAayQAC4EBAgF/AX4gAEHw\n    ABByIQADQCACQThGBEACQCAAIAEpAzAiA0I6hzcDOCAAIANC//////////8DgzcDMCAAQUBrIQBBACECA0AgAkEwRg0BI\n    AAgAmpCADcDACACQQhqIQIMAAsACwUgACACaiABIAJqKQMANwMAIAJBCGohAgwBCwsLdQECfiAAIANCIIgiBSABQiCIIg\n    Z+IAIgA358IAEgBH58IANC/////w+DIgIgAUL/////D4MiAX4iA0IgiCACIAZ+fCICQiCIfCABIAV+IAJC/////w+DfCI\n    BQiCIfDcDCCAAIANC/////w+DIAFCIIaENwMAC3YBAn8jAEHAAWsiASQAIAEgABCFASABQUBrIAAQhQEgAUGAAWogAEFA\n    ayICEIUBIAEgAhB4IAFBQGsgABB4IAFBQGsQRCACIAFBQGsQSCABQYABahBBIAAgAUGAAWoQeCABEEQgABBEIAAgARBII\n    AFBwAFqJAALkwEBAn9B0LXBAEHQtcEAKAIAQQFqNgIAAkACQEGYucEAKAIAQQFGBEBBnLnBAEGcucEAKAIAQQFqIgA2Ag\n    AgAEECSw0CQaC5wQAoAgAiAUF/Sg0BDAILQZi5wQBCgYCAgBA3AwBBoLnBACgCACIAQQBIDQFBoLnBACAANgIAAAtBoLn\n    BACABNgIAIABBAUsNAAALAAtnAQJ/IwBBQGoiAiQAIAAQRCACIAAQhQECQCABRQRAIAAQBwwBCyAAIAEQpQELQQAhAQNA\n    IAFBAUsgA3JFBEAgABADIAFBAEchAyABIAFFaiEBDAELCyAAIAIQSCAAEBIgAkFAayQAC18CAX8EfkIBIQNBMCECA38gA\n    kF4RgR/IARCAYYgA3ynQX9qBSABIAJqKQMAIgUgACACaikDACIGfUI6hyADgyAEhCEEIAJBeGohAiAFIAaFQn98QjqHIA\n    ODIQMMAQsLC2ACAX8EfkIBIQNB6AAhAgN/IAJBeEYEfyAEQgGGIAN8p0F/agUgASACaikDACIFIAAgAmopAwAiBn1COoc\n    gA4MgBIQhBCACQXhqIQIgBSAGhUJ/fEI6hyADgyEDDAELCwt3AQN/IwBBgAJrIgIkACACIAEQXiACQYABaiABEF4gAhAy\n    IAJBgAFqIAIQDyAAIAJBgAFqEJcBIABBgAJqIgMgAkGAAWoQlwEgAEGABGoiBCACQYABahCXASADIAEQogEgBCACEKIBI\n    ABBBTYCgAYgAkGAAmokAAt6AQF/IwBB4ANrIgEkACABQYABakHApcAAEF8gAUG4AWpB+KXAABBfIAEgAUGAAWogAUG4AW\n    oQSSABQfACakGwpsAAEF8gAUGoA2pB6KbAABBfIAFB8AFqIAFB8AJqIAFBqANqEEkgACABIAFB8AFqED8gAUHgA2okAAt\n    nACAAQQF2IAByIgBBAnYgAHIiAEEEdiAAciIAQQh2IAByIgBBEHYgAHIiACAAQQF2QdWq1aoFcWsiAEECdkGz5syZA3Eg\n    AEGz5syZA3FqIgBBBHYgAGpBj568+ABxQYGChAhsQRh2C2cBAn8jAEGAAWsiASQAIAEgABCFASABQUBrQTgQchogAUEBN\n    gJ4IAEgAEFAayICEHggARBBIAFBQGsgARClASABQUBrIAIQeCACIAEQpQEgAiAAEHggACABQUBrEKUBIAFBgAFqJAALaA\n    IBfwJ+IAFBP3GtIQNBOiABa0E/ca0hBEEAIQEDQCABQTBGBEAgACAAKQMwIAOHNwMwBSAAIAFqIgIgAkEIaikDACAEhkL\n    //////////wODIAIpAwAgA4eENwMAIAFBCGohAQwBCwsLbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYC\n    ACADQSxqQQI2AgAgA0ICNwIMIANBlKjAADYCCCADQQI2AiQgAyADQSBqNgIYIAMgAzYCKCADIANBBGo2AiAgA0EIaiACE\n    HAAC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakECNgIAIANCAjcCDCADQbCqwAA2AgggA0\n    ECNgIkIAMgA0EgajYCGCADIANBBGo2AiggAyADNgIgIANBCGogAhBwAAtlAQJ/IAAgACgCACICQQhqIgM2AgAgACACQQN\n    2QTxxakEoaiICIAFB/wFxIAIoAgBBCHRyNgIAAkACQCADRQRAIABBADYCACAAIAAoAgRBAWo2AgQMAQsgA0H/A3ENAQsg\n    ABARCwtnAQF/IwBBgAJrIgMkACAAECogACABEJABIABBgAFqIgEgAhCQASAAQYACahCwASAAEKgBIAMgABAmIANBgAFqI\n    AEQXiADQYABahAyIANBgAFqIAMQe0UEQCAAEJgBCyADQYACaiQAC18BAn8jAEGAAWsiASQAIAAQqAEgASAAEIUBIAFBQG\n    sgAEFAayICEIUBIAEQAyABQUBrEAMgASABQUBrEHggAUEAEDQgACABEEggARBBIAEQRCACIAEQSCABQYABaiQAC10BAn8\n    jAEFAaiIBJAAgAUEIakGgp8AAEF8gAUEIaiAAKAI4QX9qEDkiAhAtIAAgAUEIahBjIABBASACQQFqQR9xdCICNgI4IAJB\n    gICAEE4EQCAAEBILIAFBQGskAAtfAgF/AX4jAEHwAGsiASQAIAFBoKfAABBfIAApAwAhAiABQThqIAAQXyAAQQEQOyABQ\n    ThqIAEQYSABQThqEEQgAUE4akEBEDsgACABQThqIAJCAoGnEE8gAUHwAGokAAt7AQJ/IABBKGohAgNAIAFBgAJGBEAgAE\n    LnzKfQ1tDrs7t/NwIIIABCADcCACAAQSBqQquzj/yRo7Pw2wA3AgAgAEEYakL/pLmIxZHagpt/NwIAIABBEGpC8ua746O\n    n/aelfzcCAAUgASACakEANgIAIAFBBGohAQwBCwsLaQICfwF+IAAgACkDACIDQv//////////A4M3AwBBCCEBA0AgA0I6\n    hyEDIAFBMEYEQCAAIAApAzAgA3w3AzAFIAAgAWoiAiACKQMAIAN8IgNC//////////8DgzcDACABQQhqIQEMAQsLC2oCA\n    n8BfiAAIAApAwAiA0L//////////wODNwMAQQghAQNAIANCOochAyABQegARgRAIAAgACkDaCADfDcDaAUgACABaiICIA\n    IpAwAgA3wiA0L//////////wODNwMAIAFBCGohAQwBCwsLWQEBfyMAQYADayIEJAAgBCADEF4gBBBAIARBgAFqIAEQXiA\n    EQYACaiACEF4gBEGAAWogBBAPIARBgAJqIAQQDyAAIARBgAFqIARBgAJqEJEBIARBgANqJAALWQECfyMAQUBqIgEkAAJA\n    IAAQhAENACABQQEQigEgAEGAAWoiAiABEFkNACACQQAQNCAAIAIQSCAAEBIgAEFAayIAIAIQSCAAEBIgAiABEKUBCyABQ\n    UBrJAALVwEBfyMAQbABayICJAAgATQCOCAANAI4fkKAgIAQWQRAIAAQEgsgAkEIaiAAIAEQCCACQfgAaiACQQhqEAUgAC\n    ACQfgAahBrIABBAjYCOCACQbABaiQAC08BAn8jAEFAaiIDJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgA\n    gAyABEIsBIAAgAxClASADIAIQiwEgAxClASADQUBrJAALWQECfyMAQYABayIBJAACQCAAEIgBDQAgARBQIABBgAJqIgIg\n    ARB7DQAgAhBAIAAgAhAPIAAQqwEgAEGAAWoiACACEA8gABCrASACIAEQkAELIAFBgAFqJAALSwEBfyMAQUBqIgEkACAAQ\n    TgQciIAQQE2AjggAUEBEIoBIABBQGsgAUHAABBnGiAAQYABakE4EHIaIABBuAFqQQE2AgAgAUFAayQAC0sBAn8jAEHwAG\n    siASQAIAAQd0UEQCABQaCnwAAQXyABQThqIAAQgwEgASABQThqEGIgARBEIAFBOGogARA1IQILIAFB8ABqJAAgAgtPAQF\n    /IwBBgAFrIgIkACAAIAEQhQEgABADIAJByABqQdikwAAQXyACQQhqIAJByABqEIsBIAAgARBIIAAgAkEIahB4IAAQEiAC\n    QYABaiQAC0kBAn8DQCABQThGRQRAIAAgAWoiAiACKQMAQgGGNwMAIAFBCGohAQwBCwsgACAAKAI4QQF0IgE2AjggAUGAg\n    IAQTgRAIAAQEgsLQgIBfwJ+QQAgAmusIQQDQCADQThHBEAgACADaiICIAIpAwAiBSABIANqKQMAhSAEgyAFhTcDACADQQ\n    hqIQMMAQsLC0YBAn8jAEFAaiIBJAAgAEE4EHIiAEEBNgI4IABBQGtBOBByIABB+ABqQQE2AgAgAUEBEIoBIAAgARClARC\n    yASABQUBrJAALTgEBfyMAQYAEayIBJAAgABAvIAEQLyABQYACahAvIABBgAJqIAFBgAIQZxogAEGABGogAUGAAmpBgAIQ\n    ZxogAEEANgKABiABQYAEaiQAC0sBAX8jAEFAaiICJAACQCAAKAI4IAFsQYCAgBBOBEAgAiABEIoBIAAgAhBIDAELIAAgA\n    RAoGiAAIAAoAjggAWw2AjgLIAJBQGskAAtKAAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQMADQEaCyACRQ\n    RAQQAPCyAAKAIYIAJBACAAQRxqKAIAKAIMEQUACwtCAQF/IwBBQGoiAiQAIAJBCGpBgIDAABBfIAEgAkEIahBrIAEQRCA\n    AIAEQayAAQQMQKBogABBEIAAQKSACQUBrJAALSQECfyMAQcABayIBJAAgASAAEF4gAUGAAWogABCFASAAIABBQGsiAhCl\n    ASAAEEEgAiABQYABahClASAAIAEQlQEgAUHAAWokAAtIAQF/IwBB4AFrIgEkACABQeihwAAQXyABQThqIAAgARAIIAFBq\n    AFqIAFBOGoQBSAAIAFBqAFqEGsgAEECNgI4IAFB4AFqJAALPgEBfyABQTpuIQIgAUGVA00EQCAAIAJBA3RqKQMAQgEgAU\n    H//wNxQTpwrYaDQgBVDwsgAkEHQdSdwAAQPAALQAIBfwF+IwBBgAFrIgEkACABQQhqIAAQhQEgAUEIahASIAFByABqIAF\n    BCGoQgwEgASkDSCABQYABaiQAQgKBpws8AQF/IwBBgAFrIgIkACACIAAQhQEgAkFAayABEIUBIAIQEiACQUBrEBIgAiAC\n    QUBrEDUgAkGAAWokAEULPAIBfwF+A38gAUE4RgR/IAJCf3xCgICAgICAgIAEg0I6iKcFIAAgAWopAwAgAoQhAiABQQhqI\n    QEMAQsLC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB9KrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2Ag\n    AgAyACEHAACzkBAX8jAEFAaiICJAAgAiAAEIUBIAIQByABBEAgASACEKUBCyACEAMgAiAAEEggAhAsIAJBQGskAAs6AQF\n    /IABBOBByIQADQCACQTBGRQRAIABBCBAtIAAgACkDACABIAJqMQAAfDcDACACQQFqIQIMAQsLCzQBAX8gAEE4EHIiAEEB\n    NgI4IABBQGtBOBByIABB+ABqQQE2AgAgACABEKUBIAFBQGsQpQELMAEBfyAAQTgQciEAA0AgAkE4RwRAIAAgAmogASACa\n    ikDADcDACACQQhqIQIMAQsLCz8BAX8jAEGAAmsiASQAIAAQUSABEG4gACABEJIBIABBgAJqEK0BIABBgARqEK0BIABBAT\n    YCgAYgAUGAAmokAAswAQJ/A0AgAkE4RwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLMAECfwNAIAJ\n    BOEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLCzABAn8DQCACQThHBEAgACACaiIDIAEgAmopAwAg\n    AykDAH03AwAgAkEIaiECDAELCwsxAQJ/A0AgAkHwAEcEQCAAIAJqIgMgAykDACABIAJqKQMAfTcDACACQQhqIQIMAQsLC\n    zEBAn8DQCACQfAARwRAIAAgAmoiAyADKQMAIAEgAmopAwB8NwMAIAJBCGohAgwBCwsLOQECfyMAQYABayIBJAAgASAAQY\n    ABaiICEF4gAiAAEJABIAEQVSAAIAEQkAEgABCsASABQYABaiQACzMBAX8gAgRAIAAhAwNAIAMgAS0AADoAACABQQFqIQE\n    gA0EBaiEDIAJBf2oiAg0ACwsgAAtIAQN/IwBBEGsiASQAIAAoAgwhAyAAKAIIIgJFBEBB9KrAAEErQaCrwAAQWwALIAEg\n    AzYCCCABIAA2AgQgASACNgIAIAEQcQALMgEBfyAAQgE3AwBBCCEBA0AgAUE4RkUEQCAAIAFqQgA3AwAgAUEIaiEBDAELC\n    yAAEFYLNwAgABBRIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahCSASAAIAEoAoAGNgKABgsoAQF/A0AgAk\n    E4RwRAIAAgAmogASACaikDADcDACACQQhqIQIMAQsLCzMAIAAgARCSASAAQYACaiABQYACahCSASAAQYAEaiABQYAEahC\n    SASAAIAEoAoAGNgKABgsoACAAIAEgAhB5IABBQGsgAUFAayACEHkgAEGAAWogAUGAAWogAhB5Cy4BAX8jAEGAAWsiASQA\n    IAAQLyABEFAgACABEJABIABBgAFqEKkBIAFBgAFqJAALLQAgACABIAIQjwEgAEGAAWogAUGAAWogAhCPASAAQYACaiABQ\n    YACaiACEI8BCzQBAX8jAEEQayICJAAgAiABNgIMIAIgADYCCCACQaSowAA2AgQgAkH0qsAANgIAIAIQaAALPgEBfyMAQR\n    BrIgEkACABQQhqIABBCGooAgA2AgAgASAAKQIANwMAIAEoAgAiAEEUaigCABogACgCBBoQMwALKQEBfyABBEAgACECA0A\n    gAkEAOgAAIAJBAWohAiABQX9qIgENAAsLIAALKwEBfyMAQcABayICJAAgAhBLIAIgARB/IAIQpgEgACACEAwgAkHAAWok\n    AAsiAQF/A0AgAUE4RwRAIAAgAWpCADcDACABQQhqIQEMAQsLCycBAX8jAEFAaiICJAAgAkEIaiABEF0gACACQQhqEIsBI\n    AJBQGskAAsrACAAEFEgACABEJIBIABBgAJqIAIQkgEgAEGABGogAxCSASAAQQU2AoAGCyMBAX8jAEFAaiIBJAAgASAAEI\n    UBIAEQEiABEFogAUFAayQACykAIAAgARBhIAAgACgCOCABKAI4aiIBNgI4IAFBgICAEE4EQCAAEBILCyUAIAAgASACEE8\n    gAEEAIAJrIAAoAjgiACABKAI4c3EgAHM2AjgLIwADQCACBEAgACABLQAAED4gAkF/aiECIAFBAWohAQwBCwsLIgACQCAA\n    IAEQWUUNACAAQUBrIAFBQGsQWUUNAEEBDwtBAAskAAJAIABBfE0EQCAARQRAQQQhAAwCCyAAEAEiAA0BCwALIAALJwEBf\n    yMAQYABayICJAAgAiABEF4gAhA6IAAgAhCVASACQYABaiQACycAIAAgARCQASAAQYABaiABQYABahCQASAAQYACaiABQY\n    ACahCQAQslACAAIAEQpQEgAEFAayABQUBrEKUBIABBgAFqIAFBgAFqEKUBCyUBAX8jAEFAaiICJAAgAiABEIUBIAIQQSA\n    AIAIQeCACQUBrJAALKAEBfyMAQYACayICJAAgAiABEI4BIAIQKyAAIAIQlgEgAkGAAmokAAsjAEGEAiACSQRAIAJBhAIg\n    AxA9AAsgACACNgIEIAAgATYCAAsiAQF/IwBB8ABrIgIkACACIAEQMCAAIAIQBSACQfAAaiQACxwAAkAgABB3RQ0AIABBg\n    AFqEHdFDQBBAQ8LQQALHwAgAEE4EHIiAEEBNgI4IAAgARBrIAAgASgCODYCOAseAAJAIAAQhwFFDQAgAEGAAWoQhwFFDQ\n    BBAQ8LQQALGwACQCAAEHdFDQAgAEFAaxB3RQ0AQQEPC0EACx4AAkAgABCHAUUNACAAQYACahCHAUUNAEEBDwtBAAsaAQF\n    /IAAQWCIBIABBQGsQWCABcyAAEHdxcwsaACAAQTgQciIAQQE2AjggACABEJ0BIAAQVgsZACAAQTgQciIAQQE2AjggACAB\n    EGsgABBWCxcAIAAQRCAAKAIAQX8gAUEfcXRBf3NxCxoAIAAgARBfIAAgAhAkIAAgAhBjIAAgAhAkCxwAIAAQLyAAIAEQk\n    AEgAEGAAWogAUGAAWoQkAELGAAgACABIAIQeSAAQUBrIAFBQGsgAhB5CxYAIAAgARClASAAQUBrIAFBQGsQpQELGAAgAB\n    AvIAAgARCQASAAQYABaiACEJABCxgAIAAgARCQASAAQYABaiABQYABahCQAQsZACAAEK4BIABBgAJqELYBIABBgARqEK4\n    BCxcAIAAQsgEgAEFAaxBpIABBgAFqELIBCxQAIAAgARB4IABBQGsgAUFAaxB4CxgAIAAgARCVASAAQYABaiABQYABahCV\n    AQsYACAAEKYBIABBgAFqIgAQpgEgACABEA8LGQAgABCpASAAQYABahCwASAAQYACahCpAQsZACAAEKwBIABBgAJqEKwBI\n    ABBgARqEKwBCxkAIAAQqgEgAEGAAmoQqgEgAEGABGoQqgELFgAgABAvIAAgARCQASAAQYABahCpAQsWACAAQYABaiIAEK\n    gBIAAQOiAAEKgBCxQAIAAQRCAAIAApAwAgAax8NwMACxQAIAAQRCAAIAApAwAgAax9NwMACxEAIAAgARBSIABBQGsgARB\n    SCxEAIAAgARBIIABBQGsgARBICxQAIAAgARCQASAAQYABaiACEJABCxIAIAAgARAPIABBgAFqIAEQDwsUACAAIAEQoAEg\n    AEGAAWogARCgAQsRACAAKAIEBEAgACgCABAJCwsSACAAIAEQayAAIAEoAjg2AjgLDwAgAEFAayIAEEEgABBECw0AIAAQT\n    iAAQUBrEE4LDQAgABBEIABBQGsQRAsPACAAELIBIABBQGsQsgELEAAgABCrASAAQYABahCrAQsNACAAEBIgAEFAaxASCx\n    AAIAAQqAEgAEGAAWoQqAELEAAgABCpASAAQYABahCpAQsPACAAQYABahA6IAAQrAELEAAgABCnASAAQYABahCnAQsOACA\n    AEGkgAEFAaxCyAQsQACAAIAI2AgQgACABNgIACw0AIAAQdCAAQQE2AjgLDAAgABBBIAAgARB4CwwAIAAgARBrIAAQVgsN\n    ACAAEDogACABEJUBCwsAIAAQOiAAEKwBCwwAQunQotvMouq7RgsDAAELAwABCwv+PZoCAEGCgMAACwcBAAAAAQI0AEG4g\n    MAAC9sBuF8jku11BwFjT+D5WE+pA2dPnKtLeD0Akew9ffXy9AMD1g8fDSwgAK1vjPCZwa4A8DtNkAEAAADzStxtEor3AI\n    uwH1tTsFYDgvLFYx+X7AAysL/NHtseAkehVLifHyMCQHo6ogw4sQGz4sMPAAAAAHNyYy9ibHMxMjM4MS9wYWlyLnJzqAA\n    QABQAAAAHAQAACQAAAKgAEAAUAAAADAEAAA0AAACoABAAFAAAABEBAAANAAAAAAAAAAEAAAD///8Dv/+W/78AaQM7VYAd\n    moCAAefMIPV1pkwBp+1zAEGogsAACyz+//7///8BAosAgILYBPYB4Y1oiW++kwLOdqvfPagdAMZpulHOdt8Dy1nGFwBB4\n    ILAAAuRAZABEAATAAAA0AEAABgAAACQARAAEwAAANQBAAARAAAAkAEQABMAAADWAQAAHAAAAHNyYy9ibHMxMjM4MS9lY3\n    AucnMAkAEQABMAAAAZBQAADQAAAJABEAATAAAAGwUAAAkAAACQARAAEwAAABwFAAARAAAAkAEQABMAAAAfBQAAHAAAAAA\n    AAAABAAEAAAABAjQAQaCEwAALuSCQARAAEwAAAGcEAAARAAAAkAEQABMAAABsBAAADQAAAJABEAATAAAAbgQAABUAAACQ\n    ARAAEwAAAHAEAAAgAAAAHUxYLQgo9ADXXz44aOPbAInJGoj9roEBomOjmrkPTgGY6rCCSW3JAoBOWs9QOu4AimlEAQAAA\n    ADgKxeO6UjMAXSpOluMVsgAolXvNe/8FADngsIBPcnDA8EWIDvuPnUAusRiAAwgWgDRCCkuAQAAALgh6L1iEMUA3/4Vlz\n    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\n    GZYzb76G2KA7ycH+3PFk8AK2qmngEAAABhdHRlbXB0IHRvIGRpdmlkZSBieSB6ZXJvAAAAbxEQABIAAAB8AQAAFAAAAAA\n    AAABhdHRlbXB0IHRvIGRpdmlkZSB3aXRoIG92ZXJmbG93c3JjL2JsczEyMzgxL2ZwLnJzAAAAbxEQABIAAAASAgAADQAA\n    AG8REAASAAAAHgIAACYAAABvERAAEgAAAB4CAAAjAAAAbxEQABIAAAAkAgAAFwAAAG8REAASAAAAJAIAABQAAAAAAAAAq\n    qr//////gHu//9UrP//AupBYg9rDyoBw5z9ShTOEwJLd2TXrEtDAu3pxpKm+V8Cox4RoAEAAABAEhAAFAAAABUBAAATAA\n    AAQBIQABQAAAAeAQAAGAAAAEASEAAUAAAAJAEAABwAAABzcmMvYmxzMTIzODEvZWNwMi5ycwAAAAAEAEGQpcAAC7wGQBI\n    QABQAAADmAgAACQAAAEASEAAUAAAA7gIAAA0AAABAEhAAFAAAAP4CAAAhAAAAuL0hwchWgAD1+24BqskAA7pwFz2uR7YA\n    RNEK7ADpUwN65MZREMUtA0kBgkmkwiMALyuqJAAAAAB+KwRdBX2sAflVF+WERDwDNJME9ce9GwJp12rYgmRCA9BrWWVPJ\n    4gA6DRrH9hnnAAFtgI+AQAAAAEouAiGVJMBeKIo6w5zsgIjyRINFpWmAQq1nU73MqoCm/2tGjUu2gJxczJjhFufAHdSXc\n    4AAAAAvnlf8F8HqQJqaAc710nDAfOzmulytSoB0pm8jp0W+gEoPsuZi8IrAKw0qwwzzakDAkpsYAAAAACrqv/////+Ae7\n    //1Ss//8C6kFiD2sPKgHDnP1KFM4TAkt3ZNesS0MC7enGkqb5XwKjHhGgAQAAAAgUEAALAAAAjwEAAA8AAAAIFBAACwAA\n    AKcBAAATAAAACBQQAAsAAACqAQAADQAAAHNyYy9obWFjLnJzADQUEAAgAAAAVBQQABIAAAADAAAAAAAAAAEAAAAEAAAAa\n    W5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAwMDAxMDIwMzA0MDUwNjA3MDgwOT\n    EwMTExMjEzMTQxNTE2MTcxODE5MjAyMTIyMjMyNDI1MjYyNzI4MjkzMDMxMzIzMzM0MzUzNjM3MzgzOTQwNDE0MjQzNDQ\n    0NTQ2NDc0ODQ5NTA1MTUyNTM1NDU1NTY1NzU4NTk2MDYxNjI2MzY0NjU2NjY3Njg2OTcwNzE3MjczNzQ3NTc2Nzc3ODc5\n    ODA4MTgyODM4NDg1ODY4Nzg4ODk5MDkxOTI5Mzk0OTU5Njk3OTg5OQAAQBUQABAAAABQFRAAIgAAAHJhbmdlIGVuZCBpb\n    mRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAABjYWxsZWQgYE9wdGlvbjo6dW53cmFwKClgIG9uIG\n    EgYE5vbmVgIHZhbHVlALAVEAAcAAAA7gEAAB4AAABsaWJyYXJ5L3N0ZC9zcmMvcGFuaWNraW5nLnJzAEGIrMAACwEBAEH\n    IrMAACwEBAEGIrcAACwEBAEHIrcAACwEBAEGIrsAACwEBAEHIrsAACwEBAEGIr8AACwEBAEHIr8AACwEBAEGIsMAACwEB\n    AEHIsMAACwEBAEGIscAACwEBAEHIscAACwEBAEGIssAACwEBAEHIssAACwEBAEGIs8AACwEBAEHIs8AACwEBAEGItMAAC\n    wEBAEHItMAACwEBAEGItcAACwEBAEHItcAACwEBAEGItsAACwEBAEHItsAACwEBAEGIt8AACwEBAEHIt8AACwEBAEGIuM\n    AACwEBAEHIuMAACwEBAEGIucAACwEBAEHIucAACwEBAEGIusAACwEBAEHIusAACwEBAEGIu8AACwEBAEHIu8AACwEBAEG\n    IvMAACwEBAEHIvMAACwEBAEGIvcAACwEBAEHIvcAACwEBAEGIvsAACwEBAEHIvsAACwEBAEGIv8AACwEBAEHIv8AACwEB\n    AEGIwMAACwEBAEHIwMAACwEBAEGIwcAACwEBAEHIwcAACwEBAEGIwsAACwEBAEHIwsAACwEBAEGIw8AACwEBAEHIw8AAC\n    wEBAEGIxMAACwEBAEHIxMAACwEBAEGIxcAACwEBAEHIxcAACwEBAEGIxsAACwEBAEHIxsAACwEBAEGIx8AACwEBAEHIx8\n    AACwEBAEGIyMAACwEBAEHIyMAACwEBAEGIycAACwEBAEHIycAACwEBAEGIysAACwEBAEHIysAACwEBAEGIy8AACwEBAEH\n    Iy8AACwEBAEGIzMAACwEBAEHIzMAACwEBAEGIzcAACwEBAEHIzcAACwEBAEGIzsAACwEBAEHIzsAACwEBAEGIz8AACwEB\n    AEHIz8AACwEBAEGI0MAACwEBAEHI0MAACwEBAEGI0cAACwEBAEHI0cAACwEBAEGI0sAACwEBAEHI0sAACwEBAEGI08AAC\n    wEBAEHI08AACwEBAEGI1MAACwEBAEHI1MAACwEBAEGI1cAACwEBAEHI1cAACwEBAEGI1sAACwEBAEHI1sAACwEBAEGI18\n    AACwEBAEHI18AACwEBAEGI2MAACwEBAEHI2MAACwEBAEGI2cAACwEBAEHI2cAACwEBAEGI2sAACwEBAEHI2sAACwEBAEG\n    I28AACwEBAEHI28AACwEBAEGI3MAACwEBAEHI3MAACwEBAEGI3cAACwEBAEHI3cAACwEBAEGI3sAACwEBAEHI3sAACwEB\n    AEGI38AACwEBAEHI38AACwEBAEGI4MAACwEBAEHI4MAACwEBAEGI4cAACwEBAEHI4cAACwEBAEGI4sAACwEBAEHI4sAAC\n    wEBAEGI48AACwEBAEHI48AACwEBAEGI5MAACwEBAEHI5MAACwEBAEGI5cAACwEBAEHI5cAACwEBAEGI5sAACwEBAEHI5s\n    AACwEBAEGI58AACwEBAEHI58AACwEBAEGI6MAACwEBAEHI6MAACwEBAEGI6cAACwEBAEHI6cAACwEBAEGI6sAACwEBAEH\n    I6sAACwEBAEGI68AACwEBAEHI68AACwEBAEGI7MAACwEBAEHI7MAACwEBAEGI7cAACwEBAEHI7cAACwEBAEGI7sAACwEB\n    AEHI7sAACwEBAEGI78AACwEBAEHI78AACwEBAEGI8MAACwEBAEHI8MAACwEBAEGI8cAACwEBAEHI8cAACwEBAEGI8sAAC\n    wEBAEHI8sAACwEBAEGI88AACwEBAEHI88AACwEBAEGI9MAACwEBAEHI9MAACwEBAEGI9cAACwEBAEHI9cAACwEBAEGI9s\n    AACwEBAEHI9sAACwEBAEGI98AACwEBAEHI98AACwEBAEGI+MAACwEBAEHI+MAACwEBAEGI+cAACwEBAEHI+cAACwEBAEG\n    I+sAACwEBAEHI+sAACwEBAEGI+8AACwEBAEHI+8AACwEBAEGI/MAACwEBAEHI/MAACwEBAEGI/cAACwEBAEHI/cAACwEB\n    AEGI/sAACwEBAEHI/sAACwEBAEGI/8AACwEBAEHI/8AACwEBAEGIgMEACwEBAEHIgMEACwEBAEGIgcEACwEBAEHIgcEAC\n    wEBAEGIgsEACwEBAEHIgsEACwEBAEGIg8EACwEBAEHIg8EACwEBAEGIhMEACwEBAEHIhMEACwEBAEGIhcEACwEBAEHIhc\n    EACwEBAEGIhsEACwEBAEHIhsEACwEBAEGIh8EACwEBAEHIh8EACwEBAEGIiMEACwEBAEHIiMEACwEBAEGIicEACwEBAEH\n    IicEACwEBAEGIisEACwEBAEHIisEACwEBAEGIi8EACwEBAEHIi8EACwEBAEGIjMEACwEBAEHIjMEACwEBAEGIjcEACwEB\n    AEHIjcEACwEBAEGIjsEACwEBAEHIjsEACwEBAEGIj8EACwEBAEHIj8EACwEBAEGIkMEACwEBAEHIkMEACwEBAEGIkcEAC\n    wEBAEHIkcEACwEBAEGIksEACwEBAEHIksEACwEBAEGIk8EACwEBAEHIk8EACwEBAEGIlMEACwEBAEHIlMEACwEBAEGIlc\n    EACwEBAEHIlcEACwEBAEGIlsEACwEBAEHIlsEACwEBAEGIl8EACwEBAEHIl8EACwEBAEGImMEACwEBAEHImMEACwEBAEG\n    ImcEACwEBAEHImcEACwEBAEGImsEACwEBAEHImsEACwEBAEGIm8EACwEBAEHIm8EACwEBAEGInMEACwEBAEHInMEACwEB\n    AEGIncEACwEBAEHIncEACwEBAEGInsEACwEBAEHInsEACwEBAEGIn8EACwEBAEHIn8EACwEBAEGIoMEACwEBAEHIoMEAC\n    wEBAEGIocEACwEBAEHIocEACwEBAEGIosEACwEBAEHIosEACwEBAEGIo8EACwEBAEHIo8EACwEBAEGIpMEACwEBAEHIpM\n    EACwEBAEGIpcEACwEBAEHIpcEACwEBAEGIpsEACwEBAEHIpsEACwEBAEGIp8EACwEBAEHIp8EACwEBAEGIqMEACwEBAEH\n    IqMEACwEBAEGIqcEACwEBAEHIqcEACwEBAEGIqsEACwEBAEHIqsEACwEBAEGIq8EACwEBAEHIq8EACwEBAEGIrMEACwEB\n    AEHIrMEACwEBAEGIrcEACwEBAEHIrcEACwEBAEGIrsEACwEBAEHIrsEACwEBAEGIr8EACwEBAEHIr8EACwEBAEGIsMEAC\n    wEBAEHIsMEACwEBAEGIscEACwEBAEHIscEACwEBAEGIssEACwEBAEHIssEACwEBAEGIs8EACwEBAEHIs8EACwEBAEGItM\n    EACwEBAEHItMEACwEBAEGItcEACwEBAEHItcEACwEBAHsJcHJvZHVjZXJzAghsYW5ndWFnZQEEUnVzdAAMcHJvY2Vzc2V\n    kLWJ5AwVydXN0Yx0xLjQ5LjAgKGUxODg0YThlMyAyMDIwLTEyLTI5KQZ3YWxydXMGMC4xOC4wDHdhc20tYmluZGdlbhIw\n    LjIuNzAgKGI2MzU1YzI3MCk=\n`.replace(/[^0-9a-zA-Z/+]/g, '');\nconst wasmBytes = base64Arraybuffer.decode(wasmBytesBase64);\n/**\n * @returns {number}\n */\nexport function bls_init() {\n    let ret = wasm.bls_init();\n    return ret;\n}\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    return [ptr, arg.length];\n}\n/**\n * @param {Uint8Array} sig\n * @param {Uint8Array} m\n * @param {Uint8Array} w\n * @returns {number}\n */\nexport function bls_verify(sig, m, w) {\n    const [ptr0, len0] = passArray8ToWasm0(sig, wasm.__wbindgen_malloc);\n    const [ptr1, len1] = passArray8ToWasm0(m, wasm.__wbindgen_malloc);\n    const [ptr2, len2] = passArray8ToWasm0(w, wasm.__wbindgen_malloc);\n    const ret = wasm.bls_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret;\n}\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n    }\n    else {\n        const instance = await WebAssembly.instantiate(module, imports);\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n        }\n        else {\n            return instance;\n        }\n    }\n}\nasync function init() {\n    const imports = {};\n    const { instance, module } = await load(wasmBytes, imports);\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    return wasm;\n}\n/**\n * If `module_or_path` is {RequestInfo} or {URL}, makes a request and\n * for everything else, calls `WebAssembly.instantiate` directly.\n *\n * @param {InitInput | Promise<InitInput>} module_or_path\n *\n * @returns {Promise<InitOutput>}\n */\nexport default init;\n//# sourceMappingURL=bls.js.map","import init, { bls_init, bls_verify } from '../vendor/bls/bls';\nexport let verify;\nexport async function blsVerify(pk, sig, msg) {\n    if (!verify) {\n        await init();\n        if (bls_init() !== 0) {\n            throw new Error('Cannot initialize BLS');\n        }\n        verify = (pk1, sig1, msg1) => {\n            // Reorder things from what the WASM expects (sig, m, w).\n            return bls_verify(sig1, msg1, pk1) === 0;\n        };\n    }\n    return verify(pk, sig, msg);\n}\n//# sourceMappingURL=bls.js.map","import { Buffer } from 'buffer/';\nimport { getDefaultAgent } from './agent';\nimport * as cbor from './cbor';\nimport { AgentError } from './errors';\nimport { hash } from './request_id';\nimport { blobFromBuffer, blobFromText, blobFromUint8Array, blobToHex, blobToUint8Array, } from './types';\nimport { blsVerify } from './utils/bls';\n/**\n * A certificate needs to be verified (using {@link Certificate.prototype.verify})\n * before it can be used.\n */\nexport class UnverifiedCertificateError extends AgentError {\n    constructor() {\n        super(`Cannot lookup unverified certificate. Call 'verify()' first.`);\n    }\n}\n/**\n * Make a human readable string out of a hash tree.\n * @param tree\n */\nexport function hashTreeToString(tree) {\n    const indent = (s) => s\n        .split('\\n')\n        .map(x => '  ' + x)\n        .join('\\n');\n    function labelToString(label) {\n        const decoder = new TextDecoder(undefined, { fatal: true });\n        try {\n            return JSON.stringify(decoder.decode(label));\n        }\n        catch (e) {\n            return `data(...${label.byteLength} bytes)`;\n        }\n    }\n    switch (tree[0]) {\n        case 0:\n            return '()';\n        case 1: {\n            const left = hashTreeToString(tree[1]);\n            const right = hashTreeToString(tree[2]);\n            return `sub(\\n left:\\n${indent(left)}\\n---\\n right:\\n${indent(right)}\\n)`;\n        }\n        case 2: {\n            const label = labelToString(tree[1]);\n            const sub = hashTreeToString(tree[2]);\n            return `label(\\n label:\\n${indent(label)}\\n sub:\\n${indent(sub)}\\n)`;\n        }\n        case 3: {\n            return `leaf(...${tree[1].byteLength} bytes)`;\n        }\n        case 4: {\n            return `pruned(${blobToHex(blobFromUint8Array(new Uint8Array(tree[1])))}`;\n        }\n        default: {\n            return `unknown(${JSON.stringify(tree[0])})`;\n        }\n    }\n}\nfunction isBufferEqual(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport class Certificate {\n    constructor(response, _agent = getDefaultAgent()) {\n        this._agent = _agent;\n        this.verified = false;\n        this._rootKey = null;\n        this.cert = cbor.decode(response.certificate);\n    }\n    lookupEx(path) {\n        this.checkState();\n        return lookupPathEx(path, this.cert.tree);\n    }\n    lookup(path) {\n        this.checkState();\n        return lookup_path(path, this.cert.tree);\n    }\n    async verify() {\n        const rootHash = await reconstruct(this.cert.tree);\n        const derKey = await this._checkDelegation(this.cert.delegation);\n        const sig = this.cert.signature;\n        const key = extractDER(derKey);\n        const msg = Buffer.concat([domain_sep('ic-state-root'), rootHash]);\n        const res = await blsVerify(key, sig, msg);\n        this.verified = res;\n        return res;\n    }\n    checkState() {\n        if (!this.verified) {\n            throw new UnverifiedCertificateError();\n        }\n    }\n    async _checkDelegation(d) {\n        if (!d) {\n            if (!this._rootKey) {\n                if (this._agent.rootKey) {\n                    this._rootKey = this._agent.rootKey;\n                    return this._rootKey;\n                }\n                throw new Error(`Agent does not have a rootKey. Do you need to call 'fetchRootKey'?`);\n            }\n            return this._rootKey;\n        }\n        const cert = new Certificate(d, this._agent);\n        if (!(await cert.verify())) {\n            throw new Error('fail to verify delegation certificate');\n        }\n        const lookup = cert.lookupEx(['subnet', d.subnet_id, 'public_key']);\n        if (!lookup) {\n            throw new Error(`Could not find subnet key for subnet 0x${d.subnet_id.toString('hex')}`);\n        }\n        return Buffer.from(lookup);\n    }\n}\nconst DER_PREFIX = Buffer.from('308182301d060d2b0601040182dc7c0503010201060c2b0601040182dc7c05030201036100', 'hex');\nconst KEY_LENGTH = 96;\nfunction extractDER(buf) {\n    const expectedLength = DER_PREFIX.length + KEY_LENGTH;\n    if (buf.length !== expectedLength) {\n        throw new TypeError(`BLS DER-encoded public key must be ${expectedLength} bytes long`);\n    }\n    const prefix = buf.slice(0, DER_PREFIX.length);\n    if (!isBufferEqual(prefix, DER_PREFIX)) {\n        throw new TypeError(`BLS DER-encoded public key is invalid. Expect the following prefix: ${DER_PREFIX}, but get ${prefix}`);\n    }\n    return buf.slice(DER_PREFIX.length);\n}\n/**\n * @param t\n */\nexport async function reconstruct(t) {\n    switch (t[0]) {\n        case 0 /* Empty */:\n            return hash(domain_sep('ic-hashtree-empty'));\n        case 4 /* Pruned */:\n            return Buffer.from(t[1]);\n        case 3 /* Leaf */:\n            return hash(Buffer.concat([\n                domain_sep('ic-hashtree-leaf'),\n                Buffer.from(t[1]),\n            ]));\n        case 2 /* Labeled */:\n            return hash(Buffer.concat([\n                domain_sep('ic-hashtree-labeled'),\n                Buffer.from(t[1]),\n                Buffer.from(await reconstruct(t[2])),\n            ]));\n        case 1 /* Fork */:\n            return hash(Buffer.concat([\n                domain_sep('ic-hashtree-fork'),\n                Buffer.from(await reconstruct(t[1])),\n                Buffer.from(await reconstruct(t[2])),\n            ]));\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction domain_sep(s) {\n    const buf = Buffer.alloc(1);\n    buf.writeUInt8(s.length, 0);\n    return Buffer.concat([buf, Buffer.from(s)]);\n}\n/**\n *\n * @param path\n * @param tree\n */\nexport function lookupPathEx(path, tree) {\n    const maybeReturn = lookup_path(path.map(p => {\n        if (typeof p === 'string') {\n            return blobFromText(p);\n        }\n        else {\n            return blobFromUint8Array(new Uint8Array(p));\n        }\n    }), tree);\n    return maybeReturn && blobToUint8Array(blobFromBuffer(maybeReturn));\n}\n/**\n * @param path\n * @param tree\n */\nexport function lookup_path(path, tree) {\n    if (path.length === 0) {\n        switch (tree[0]) {\n            case 3 /* Leaf */: {\n                return Buffer.from(tree[1]);\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n    const t = find_label(path[0], flatten_forks(tree));\n    if (t) {\n        return lookup_path(path.slice(1), t);\n    }\n}\nfunction flatten_forks(t) {\n    switch (t[0]) {\n        case 0 /* Empty */:\n            return [];\n        case 1 /* Fork */:\n            return flatten_forks(t[1]).concat(flatten_forks(t[2]));\n        default:\n            return [t];\n    }\n}\nfunction find_label(l, trees) {\n    if (trees.length === 0) {\n        return undefined;\n    }\n    for (const t of trees) {\n        if (t[0] === 2 /* Labeled */) {\n            const p = Buffer.from(t[1]);\n            if (isBufferEqual(l, p)) {\n                return t[2];\n            }\n        }\n    }\n}\n//# sourceMappingURL=certificate.js.map","import { RequestStatusResponseStatus } from '../agent';\nimport { Certificate } from '../certificate';\nimport { toHex as requestIdToHex } from '../request_id';\nimport { blobFromText } from '../types';\nexport * as strategy from './strategy';\nexport { defaultStrategy } from './strategy';\n/**\n * Polls the IC to check the status of the given request then\n * returns the response bytes once the request has been processed.\n * @param agent The agent to use to poll read_state.\n * @param canisterId The effective canister ID.\n * @param requestId The Request ID to poll status for.\n * @param strategy A polling strategy.\n */\nexport async function pollForResponse(agent, canisterId, requestId, strategy) {\n    const path = [blobFromText('request_status'), requestId];\n    const state = await agent.readState(canisterId, { paths: [path] });\n    const cert = new Certificate(state, agent);\n    const verified = await cert.verify();\n    if (!verified) {\n        throw new Error('Fail to verify certificate');\n    }\n    const maybeBuf = cert.lookup([...path, blobFromText('status')]);\n    let status;\n    if (typeof maybeBuf === 'undefined') {\n        // Missing requestId means we need to wait\n        status = RequestStatusResponseStatus.Unknown;\n    }\n    else {\n        status = maybeBuf.toString();\n    }\n    switch (status) {\n        case RequestStatusResponseStatus.Replied: {\n            return cert.lookup([...path, blobFromText('reply')]);\n        }\n        case RequestStatusResponseStatus.Received:\n        case RequestStatusResponseStatus.Unknown:\n        case RequestStatusResponseStatus.Processing:\n            // Execute the polling strategy, then retry.\n            await strategy(canisterId, requestId, status);\n            return pollForResponse(agent, canisterId, requestId, strategy);\n        case RequestStatusResponseStatus.Rejected: {\n            const rejectCode = cert.lookup([...path, blobFromText('reject_code')]).toString();\n            const rejectMessage = cert.lookup([...path, blobFromText('reject_message')]).toString();\n            throw new Error(`Call was rejected:\\n` +\n                `  Request ID: ${requestIdToHex(requestId)}\\n` +\n                `  Reject code: ${rejectCode}\\n` +\n                `  Reject text: ${rejectMessage}\\n`);\n        }\n        case RequestStatusResponseStatus.Done:\n            // This is _technically_ not an error, but we still didn't see the `Replied` status so\n            // we don't know the result and cannot decode it.\n            throw new Error(`Call was marked as done but we never saw the reply:\\n` +\n                `  Request ID: ${requestIdToHex(requestId)}\\n`);\n    }\n    throw new Error('unreachable');\n}\n//# sourceMappingURL=index.js.map","import { Buffer } from 'buffer/';\nimport { getDefaultAgent, ReplicaRejectCode, } from './agent';\nimport { getManagementCanister } from './canisters/management';\nimport { AgentError } from './errors';\nimport * as IDL from './idl';\nimport { pollForResponse, strategy } from './polling';\nimport { Principal } from '@dfinity/principal';\nimport { toHex as requestIdToHex } from './request_id';\nexport class ActorCallError extends AgentError {\n    constructor(canisterId, methodName, type, props) {\n        super([\n            `Call failed:`,\n            `  Canister: ${canisterId.toText()}`,\n            `  Method: ${methodName} (${type})`,\n            ...Object.getOwnPropertyNames(props).map(n => `  \"${n}\": ${JSON.stringify(props[n])}`),\n        ].join('\\n'));\n        this.canisterId = canisterId;\n        this.methodName = methodName;\n        this.type = type;\n        this.props = props;\n    }\n}\nexport class QueryCallRejectedError extends ActorCallError {\n    constructor(canisterId, methodName, result) {\n        var _a;\n        super(canisterId, methodName, 'query', {\n            Status: result.status,\n            Code: (_a = ReplicaRejectCode[result.reject_code]) !== null && _a !== void 0 ? _a : `Unknown Code \"${result.reject_code}\"`,\n            Message: result.reject_message,\n        });\n        this.result = result;\n    }\n}\nexport class UpdateCallRejectedError extends ActorCallError {\n    constructor(canisterId, methodName, requestId, response) {\n        super(canisterId, methodName, 'update', {\n            'Request ID': requestIdToHex(requestId),\n            'HTTP status code': response.status.toString(),\n            'HTTP status text': response.statusText,\n        });\n        this.requestId = requestId;\n        this.response = response;\n    }\n}\n/**\n * The mode used when installing a canister.\n */\nexport var CanisterInstallMode;\n(function (CanisterInstallMode) {\n    CanisterInstallMode[\"Install\"] = \"install\";\n    CanisterInstallMode[\"Reinstall\"] = \"reinstall\";\n    CanisterInstallMode[\"Upgrade\"] = \"upgrade\";\n})(CanisterInstallMode || (CanisterInstallMode = {}));\nconst metadataSymbol = Symbol.for('ic-agent-metadata');\n/**\n * An actor base class. An actor is an object containing only functions that will\n * return a promise. These functions are derived from the IDL definition.\n */\nexport class Actor {\n    constructor(metadata) {\n        this[metadataSymbol] = Object.freeze(metadata);\n    }\n    /**\n     * Get the Agent class this Actor would call, or undefined if the Actor would use\n     * the default agent (global.ic.agent).\n     * @param actor The actor to get the agent of.\n     */\n    static agentOf(actor) {\n        return actor[metadataSymbol].config.agent;\n    }\n    /**\n     * Get the interface of an actor, in the form of an instance of a Service.\n     * @param actor The actor to get the interface of.\n     */\n    static interfaceOf(actor) {\n        return actor[metadataSymbol].service;\n    }\n    static canisterIdOf(actor) {\n        return Principal.from(actor[metadataSymbol].config.canisterId);\n    }\n    static async install(fields, config) {\n        const mode = fields.mode === undefined ? CanisterInstallMode.Install : fields.mode;\n        // Need to transform the arg into a number array.\n        const arg = fields.arg ? [...fields.arg] : [];\n        // Same for module.\n        const wasmModule = [...fields.module];\n        const canisterId = typeof config.canisterId === 'string'\n            ? Principal.fromText(config.canisterId)\n            : config.canisterId;\n        await getManagementCanister(config).install_code({\n            mode: { [mode]: null },\n            arg,\n            wasm_module: wasmModule,\n            canister_id: canisterId,\n        });\n    }\n    static async createCanister(config) {\n        const { canister_id: canisterId } = await getManagementCanister(config || {}).provisional_create_canister_with_cycles({ amount: [], settings: [] });\n        return canisterId;\n    }\n    static async createAndInstallCanister(interfaceFactory, fields, config) {\n        const canisterId = await this.createCanister(config);\n        await this.install(Object.assign({}, fields), Object.assign(Object.assign({}, config), { canisterId }));\n        return this.createActor(interfaceFactory, Object.assign(Object.assign({}, config), { canisterId }));\n    }\n    static createActorClass(interfaceFactory) {\n        const service = interfaceFactory({ IDL });\n        class CanisterActor extends Actor {\n            constructor(config) {\n                const canisterId = typeof config.canisterId === 'string'\n                    ? Principal.fromText(config.canisterId)\n                    : config.canisterId;\n                super({\n                    config: Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), config), { canisterId }),\n                    service,\n                });\n                for (const [methodName, func] of service._fields) {\n                    this[methodName] = _createActorMethod(this, methodName, func);\n                }\n            }\n        }\n        return CanisterActor;\n    }\n    static createActor(interfaceFactory, configuration) {\n        return new (this.createActorClass(interfaceFactory))(configuration);\n    }\n}\n// IDL functions can have multiple return values, so decoding always\n// produces an array. Ensure that functions with single or zero return\n// values behave as expected.\nfunction decodeReturnValue(types, msg) {\n    const returnValues = IDL.decode(types, Buffer.from(msg));\n    switch (returnValues.length) {\n        case 0:\n            return undefined;\n        case 1:\n            return returnValues[0];\n        default:\n            return returnValues;\n    }\n}\nconst DEFAULT_ACTOR_CONFIG = {\n    pollingStrategyFactory: strategy.defaultStrategy,\n};\nfunction _createActorMethod(actor, methodName, func) {\n    let caller;\n    if (func.annotations.includes('query')) {\n        caller = async (options, ...args) => {\n            var _a, _b;\n            // First, if there's a config transformation, call it.\n            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).queryTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));\n            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n            const cid = Principal.from(options.canisterId || actor[metadataSymbol].config.canisterId);\n            const arg = IDL.encode(func.argTypes, args);\n            const result = await agent.query(cid, { methodName, arg });\n            switch (result.status) {\n                case \"rejected\" /* Rejected */:\n                    throw new QueryCallRejectedError(cid, methodName, result);\n                case \"replied\" /* Replied */:\n                    return decodeReturnValue(func.retTypes, result.reply.arg);\n            }\n        };\n    }\n    else {\n        caller = async (options, ...args) => {\n            var _a, _b;\n            // First, if there's a config transformation, call it.\n            options = Object.assign(Object.assign({}, options), (_b = (_a = actor[metadataSymbol].config).callTransform) === null || _b === void 0 ? void 0 : _b.call(_a, methodName, args, Object.assign(Object.assign({}, actor[metadataSymbol].config), options)));\n            const agent = options.agent || actor[metadataSymbol].config.agent || getDefaultAgent();\n            const { canisterId, effectiveCanisterId, pollingStrategyFactory } = Object.assign(Object.assign(Object.assign({}, DEFAULT_ACTOR_CONFIG), actor[metadataSymbol].config), options);\n            const cid = Principal.from(canisterId);\n            const ecid = effectiveCanisterId !== undefined ? Principal.from(effectiveCanisterId) : cid;\n            const arg = IDL.encode(func.argTypes, args);\n            const { requestId, response } = await agent.call(cid, {\n                methodName,\n                arg,\n                effectiveCanisterId: ecid,\n            });\n            if (!response.ok) {\n                throw new UpdateCallRejectedError(cid, methodName, requestId, response);\n            }\n            const pollStrategy = pollingStrategyFactory();\n            const responseBytes = await pollForResponse(agent, ecid, requestId, pollStrategy);\n            if (responseBytes !== undefined) {\n                return decodeReturnValue(func.retTypes, responseBytes);\n            }\n            else if (func.retTypes.length === 0) {\n                return undefined;\n            }\n            else {\n                throw new Error(`Call was returned undefined, but type [${func.retTypes.join(',')}].`);\n            }\n        };\n    }\n    const handler = (...args) => caller({}, ...args);\n    handler.withOptions =\n        (options) => (...args) => caller(options, ...args);\n    return handler;\n}\n//# sourceMappingURL=actor.js.map","import { toHex } from '..';\nconst FIVE_MINUTES_IN_MSEC = 5 * 60 * 1000;\n/**\n * A best practices polling strategy: wait 2 seconds before the first poll, then 1 second\n * with an exponential backoff factor of 1.2. Timeout after 5 minutes.\n */\nexport function defaultStrategy() {\n    return chain(conditionalDelay(once(), 1000), backoff(1000, 1.2), timeout(FIVE_MINUTES_IN_MSEC));\n}\n/**\n * Predicate that returns true once.\n */\nexport function once() {\n    let first = true;\n    return async () => {\n        if (first) {\n            first = false;\n            return true;\n        }\n        return false;\n    };\n}\n/**\n * Delay the polling once.\n * @param condition A predicate that indicates when to delay.\n * @param timeInMsec The amount of time to delay.\n */\nexport function conditionalDelay(condition, timeInMsec) {\n    return async (canisterId, requestId, status) => {\n        if (await condition(canisterId, requestId, status)) {\n            return new Promise(resolve => setTimeout(resolve, timeInMsec));\n        }\n    };\n}\n/**\n * Error out after a maximum number of polling has been done.\n * @param count The maximum attempts to poll.\n */\nexport function maxAttempts(count) {\n    let attempts = count;\n    return async (canisterId, requestId, status) => {\n        if (--attempts <= 0) {\n            throw new Error(`Failed to retrieve a reply for request after ${count} attempts:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Request status: ${status}\\n`);\n        }\n    };\n}\n/**\n * Throttle polling.\n * @param throttleInMsec Amount in millisecond to wait between each polling.\n */\nexport function throttle(throttleInMsec) {\n    return () => new Promise(resolve => setTimeout(resolve, throttleInMsec));\n}\n/**\n * Reject a call after a certain amount of time.\n * @param timeInMsec Time in milliseconds before the polling should be rejected.\n */\nexport function timeout(timeInMsec) {\n    const end = Date.now() + timeInMsec;\n    return async (canisterId, requestId, status) => {\n        if (Date.now() > end) {\n            throw new Error(`Request timed out after ${timeInMsec} msec:\\n` +\n                `  Request ID: ${toHex(requestId)}\\n` +\n                `  Request status: ${status}\\n`);\n        }\n    };\n}\n/**\n * A strategy that throttle, but using an exponential backoff strategy.\n * @param startingThrottleInMsec The throttle in milliseconds to start with.\n * @param backoffFactor The factor to multiple the throttle time between every poll. For\n *   example if using 2, the throttle will double between every run.\n */\nexport function backoff(startingThrottleInMsec, backoffFactor) {\n    let currentThrottling = startingThrottleInMsec;\n    return () => new Promise(resolve => setTimeout(() => {\n        currentThrottling *= backoffFactor;\n        resolve();\n    }, currentThrottling));\n}\n/**\n * Chain multiple polling strategy. This _chains_ the strategies, so if you pass in,\n * say, two throttling strategy of 1 second, it will result in a throttle of 2 seconds.\n * @param strategies A strategy list to chain.\n */\nexport function chain(...strategies) {\n    return async (canisterId, requestId, status) => {\n        for (const a of strategies) {\n            await a(canisterId, requestId, status);\n        }\n    };\n}\n//# sourceMappingURL=strategy.js.map","import {\n  blobFromUint8Array,\n  blobToUint8Array,\n  Cbor as cbor,\n  Certificate,\n  HashTree,\n  HttpAgent,\n  lookupPathEx,\n  reconstruct,\n} from '@dfinity/agent';\nimport { Principal } from '@dfinity/principal';\n\n/**\n * Validate whether a body is properly certified.\n * @param canisterId The canister ID that provided the resource.\n * @param path The path of the resource requested to be validated (including the prefix `/`).\n * @param body An asset body, as it appears on the HTTP response (not decoded)\n * @param certificate The certificate to validate the .\n * @param tree The merkle tree returned by the canister.\n * @param agent A JavaScript agent that can validate certificates.\n * @param shouldFetchRootKey Whether should fetch the root key if it isn't available.\n * @returns True if the body is valid.\n */\nexport async function validateBody(\n  canisterId: Principal,\n  path: string,\n  body: ArrayBuffer,\n  certificate: ArrayBuffer,\n  tree: ArrayBuffer,\n  agent: HttpAgent,\n  shouldFetchRootKey = false,\n): Promise<boolean> {\n  const cert = new Certificate(\n    { certificate: blobFromUint8Array(new Uint8Array(certificate)) },\n    agent,\n  );\n\n  // If we're running locally, update the key manually.\n  if (shouldFetchRootKey) {\n    await agent.fetchRootKey();\n  }\n\n  // Make sure the certificate is valid.\n  if (!(await cert.verify())) {\n    return false;\n  }\n\n  const hashTree: HashTree = cbor.decode(new Uint8Array(tree));\n  const reconstructed = await reconstruct(hashTree);\n  const witness = cert.lookupEx(['canister', canisterId.toUint8Array(), 'certified_data']);\n\n  if (!witness) {\n    throw new Error('Could not find certified data for this canister in the certificate.');\n  }\n\n  // First validate that the Tree is as good as the certification.\n  if (!equal(witness, reconstructed)) {\n    console.error('Witness != Tree passed in ic-certification');\n    return false;\n  }\n\n  // Next, calculate the SHA of the content.\n  const sha = await crypto.subtle.digest('SHA-256', body);\n  let treeSha = lookupPathEx(['http_assets', path], hashTree);\n\n  if (!treeSha) {\n    // Allow fallback to `index.html`.\n    treeSha = lookupPathEx(['http_assets', '/index.html'], hashTree);\n  }\n\n  if (!treeSha) {\n    // The tree returned in the certification header is wrong. Return false.\n    // We don't throw here, just invalidate the request.\n    console.error(`Invalid Tree in the header. Does not contain path ${JSON.stringify(path)}`);\n    return false;\n  }\n\n  return !!treeSha && equal(sha, treeSha);\n}\n\nfunction equal(buf1: ArrayBuffer, buf2: ArrayBuffer): boolean {\n  if (buf1.byteLength !== buf2.byteLength) {\n    return false;\n  }\n\n  const a1 = new Uint8Array(buf1);\n  const a2 = new Uint8Array(buf2);\n  for (let i = 0; i < a1.length; i++) {\n    if (a1[i] != a2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/**\n * Implement the HttpRequest to Canisters Proposal.\n *\n * TODO: Add support for streaming.\n */\nimport { Actor, IDL, HttpAgent } from '@dfinity/agent';\nimport { Principal } from '@dfinity/principal';\nimport { validateBody } from './validation';\nimport * as base64Arraybuffer from 'base64-arraybuffer';\nimport * as pako from 'pako';\n\nconst hostnameCanisterIdMap: Record<string, [string, string]> = {\n  'identity.ic0.app': ['rdmx6-jaaaa-aaaaa-aaadq-cai', 'ic0.app'],\n  'nns.ic0.app': ['qoctq-giaaa-aaaaa-aaaea-cai', 'ic0.app'],\n  'dscvr.ic0.app': ['h5aet-waaaa-aaaab-qaamq-cai', 'ic0.page'],\n};\n\nconst shouldFetchRootKey: boolean = !!process.env.FORCE_FETCH_ROOT_KEY || false;\n\nconst swLocation = new URL(self.location.toString());\nconst [_swCanisterId, swDomains] = (() => {\n  const maybeSplit = splitHostnameForCanisterId(swLocation.hostname);\n  if (maybeSplit) {\n    return maybeSplit;\n  } else {\n    return [null, swLocation.hostname];\n  }\n})() as [Principal | null, string];\n\n/**\n * Split a hostname up-to the first valid canister ID from the right.\n * @param hostname The hostname to analyze.\n * @returns A canister ID followed by all subdomains that are after it, or null if no\n *     canister ID were found.\n */\nfunction splitHostnameForCanisterId(hostname: string): [Principal, string] | null {\n  const maybeFixed = hostnameCanisterIdMap[hostname];\n  if (maybeFixed) {\n    return [Principal.fromText(maybeFixed[0]), maybeFixed[1]];\n  }\n\n  const subdomains = hostname.split('.').reverse();\n  const topdomains = [];\n  for (const domain of subdomains) {\n    try {\n      const principal = Principal.fromText(domain);\n      return [principal, topdomains.reverse().join('.')];\n    } catch (_) {\n      topdomains.push(domain);\n    }\n  }\n\n  return null;\n}\n\n/**\n * Try to resolve the Canister ID to contact in the domain name.\n * @param hostname The domain name to look up.\n * @returns A Canister ID or null if none were found.\n */\nfunction maybeResolveCanisterIdFromHostName(hostname: string): Principal | null {\n  // Try to resolve from the right to the left.\n  const maybeCanisterId = splitHostnameForCanisterId(hostname);\n  if (maybeCanisterId && swDomains === maybeCanisterId[1]) {\n    return maybeCanisterId[0];\n  }\n\n  return null;\n}\n\n/**\n * Try to resolve the Canister ID to contact in the search params.\n * @param searchParams The URL Search params.\n * @param isLocal Whether to resolve headers as if we were running locally.\n * @returns A Canister ID or null if none were found.\n */\nfunction maybeResolveCanisterIdFromSearchParam(\n  searchParams: URLSearchParams,\n  isLocal: boolean,\n): Principal | null {\n  // Skip this if we're not on localhost.\n  if (!isLocal) {\n    return null;\n  }\n\n  const maybeCanisterId = searchParams.get('canisterId');\n  if (maybeCanisterId) {\n    try {\n      return Principal.fromText(maybeCanisterId);\n    } catch (e) {\n      // Do nothing.\n    }\n  }\n\n  return null;\n}\n\n/**\n * Try to resolve the Canister ID to contact from a URL string.\n * @param urlString The URL in string format (normally from the request).\n * @param isLocal Whether to resolve headers as if we were running locally.\n * @returns A Canister ID or null if none were found.\n */\nfunction resolveCanisterIdFromUrl(urlString: string, isLocal: boolean): Principal | null {\n  try {\n    const url = new URL(urlString);\n    return (\n      maybeResolveCanisterIdFromHostName(url.hostname) ||\n      maybeResolveCanisterIdFromSearchParam(url.searchParams, isLocal)\n    );\n  } catch (_) {\n    return null;\n  }\n}\n\n/**\n * Try to resolve the Canister ID to contact from headers.\n * @param headers Headers from the HttpRequest.\n * @param isLocal Whether to resolve headers as if we were running locally.\n * @returns A Canister ID or null if none were found.\n */\nfunction maybeResolveCanisterIdFromHeaders(headers: Headers, isLocal: boolean): Principal | null {\n  const maybeHostHeader = headers.get('host');\n  if (maybeHostHeader) {\n    // Remove the port.\n    const maybeCanisterId = maybeResolveCanisterIdFromHostName(\n      maybeHostHeader.replace(/:\\d+$/, ''),\n    );\n    if (maybeCanisterId) {\n      return maybeCanisterId;\n    }\n  }\n\n  if (isLocal) {\n    const maybeRefererHeader = headers.get('referer');\n    if (maybeRefererHeader) {\n      const maybeCanisterId = resolveCanisterIdFromUrl(maybeRefererHeader, isLocal);\n      if (maybeCanisterId) {\n        return maybeCanisterId;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction maybeResolveCanisterIdFromHttpRequest(request: Request, isLocal: boolean) {\n  return (\n    (isLocal && resolveCanisterIdFromUrl(request.referrer, isLocal)) ||\n    maybeResolveCanisterIdFromHeaders(request.headers, isLocal) ||\n    resolveCanisterIdFromUrl(request.url, isLocal)\n  );\n}\n\nconst canisterIdlFactory: IDL.InterfaceFactory = ({ IDL }) => {\n  const HeaderField = IDL.Tuple(IDL.Text, IDL.Text);\n  const HttpRequest = IDL.Record({\n    method: IDL.Text,\n    url: IDL.Text,\n    headers: IDL.Vec(HeaderField),\n    body: IDL.Vec(IDL.Nat8),\n  });\n  const HttpResponse = IDL.Record({\n    status_code: IDL.Nat16,\n    headers: IDL.Vec(HeaderField),\n    body: IDL.Vec(IDL.Nat8),\n    // TODO: Support streaming in JavaScript.\n  });\n\n  return IDL.Service({\n    http_request: IDL.Func([HttpRequest], [HttpResponse], ['query']),\n  });\n};\n\n/**\n * Decode a body (ie. deflate or gunzip it) based on its content-encoding.\n * @param body The body to decode.\n * @param encoding Its content-encoding associated header.\n */\nfunction decodeBody(body: Uint8Array, encoding: string): Uint8Array {\n  switch (encoding) {\n    case 'identity':\n    case '':\n      return body;\n    case 'gzip':\n      return pako.ungzip(body);\n    case 'deflate':\n      return pako.inflate(body);\n    default:\n      throw new Error(`Unsupported encoding: \"${encoding}\"`);\n  }\n}\n\n/**\n * Box a request, send it to the canister, and handle its response, creating a Response\n * object.\n * @param request The request received from the browser.\n * @returns The response to send to the browser.\n * @throws If an internal error happens.\n */\nexport async function handleRequest(request: Request): Promise<Response> {\n  const url = new URL(request.url);\n\n  /**\n   * We forward all requests to /api/ to the replica, as is.\n   */\n  if (url.pathname.startsWith('/api/')) {\n    return await fetch(request);\n  }\n\n  /**\n   * We refuse any request to /_/*\n   */\n  if (url.pathname.startsWith('/_/')) {\n    return new Response(null, { status: 404 });\n  }\n\n  /**\n   * We try to do an HTTP Request query.\n   */\n  const isLocal = swDomains === 'localhost';\n  const maybeCanisterId = maybeResolveCanisterIdFromHttpRequest(request, isLocal);\n  if (maybeCanisterId) {\n    try {\n      const replicaUrl = new URL(url.origin);\n      const agent = new HttpAgent({ host: replicaUrl.toString() });\n      const actor = Actor.createActor(canisterIdlFactory, {\n        agent,\n        canisterId: maybeCanisterId,\n      });\n      const requestHeaders: [string, string][] = [];\n      request.headers.forEach((value, key) => requestHeaders.push([key, value]));\n\n      // If the accept encoding isn't given, add it because we want to save bandwidth.\n      if (!request.headers.has('Accept-Encoding')) {\n        requestHeaders.push(['Accept-Encoding', 'gzip, deflate, identity']);\n      }\n\n      const httpRequest = {\n        method: request.method,\n        url: url.pathname + url.search,\n        headers: requestHeaders,\n        body: [...new Uint8Array(await request.arrayBuffer())],\n      };\n\n      const httpResponse: any = await actor.http_request(httpRequest);\n      const headers = new Headers();\n\n      let certificate: ArrayBuffer | undefined;\n      let tree: ArrayBuffer | undefined;\n      let encoding = '';\n      for (const [key, value] of httpResponse.headers) {\n        switch (key.trim().toLowerCase()) {\n          case 'ic-certificate':\n            {\n              const fields = value.split(/,/);\n              for (const f of fields) {\n                const [_0, name, b64Value] = [...f.match(/^(.*)=:(.*):$/)].map(x => x.trim());\n                const value = base64Arraybuffer.decode(b64Value);\n\n                if (name === 'certificate') {\n                  certificate = value;\n                } else if (name === 'tree') {\n                  tree = value;\n                }\n              }\n            }\n            continue;\n          case 'content-encoding':\n            encoding = value.trim();\n            break;\n        }\n\n        headers.append(key, value);\n      }\n\n      const body = new Uint8Array(httpResponse.body);\n      const identity = decodeBody(body, encoding);\n\n      let bodyValid = false;\n      if (certificate && tree) {\n        // Try to validate the body as is.\n        bodyValid = await validateBody(\n          maybeCanisterId,\n          url.pathname,\n          body.buffer,\n          certificate,\n          tree,\n          agent,\n          shouldFetchRootKey,\n        );\n\n        if (!bodyValid) {\n          // If that didn't work, try to validate its identity version. This is for\n          // backward compatibility.\n          bodyValid = await validateBody(\n            maybeCanisterId,\n            url.pathname,\n            identity.buffer,\n            certificate,\n            tree,\n            agent,\n            isLocal,\n          );\n        }\n      }\n      if (bodyValid) {\n        return new Response(identity.buffer, {\n          status: httpResponse.status_code,\n          headers,\n        });\n      } else {\n        console.error('BODY DOES NOT PASS VERIFICATION');\n        return new Response('Body does not pass verification', { status: 500 });\n      }\n    } catch (e) {\n      console.error('An error happened:', e);\n      return new Response(null, { status: 500 });\n    }\n  }\n\n  // Last check. IF this is not part of the same domain, then we simply let it load as is.\n  // The same domain will always load using our service worker, and not the same domain\n  // would load by reference. If you want security for your users at that point you\n  // should use SRI to make sure the resource matches.\n  if (!url.hostname.endsWith(swDomains)) {\n    // todo: Do we need to check for headers and certify the content here?\n    return await fetch(request);\n  }\n\n  console.error(`URL ${JSON.stringify(url.toString())} did not resolve to a canister ID.`);\n  return new Response('Could not find the canister ID.', { status: 404 });\n}\n","import { handleRequest } from './http_request';\n\ndeclare const self: ServiceWorkerGlobalScope;\n\nconst DEBUG = true;\n\n// Always install updated SW immediately\nself.addEventListener('install', () => {\n  self.skipWaiting();\n});\n\n// Intercept and proxy all fetch requests made by the browser or DOM on this scope.\nself.addEventListener('fetch', (event: FetchEvent) => {\n  try {\n    const response = handleRequest(event.request);\n    event.respondWith(response);\n  } catch (e) {\n    console.error(e.message || e.toString());\n    if (DEBUG) {\n      return event.respondWith(\n        new Response(e.message || e.toString(), {\n          status: 501,\n        }),\n      );\n    }\n    event.respondWith(new Response('Internal Error', { status: 502 }));\n  }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [113], () => (__webpack_require__(77)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"-\" + \"8af96af379edb6041abe\" + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t77: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkic_agent_sw_cert_app\"] = self[\"webpackChunkic_agent_sw_cert_app\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"sourceRoot":""}