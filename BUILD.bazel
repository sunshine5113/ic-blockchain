load("//bazel:defs.bzl", "cargo_build", "gzip_compress", "optimized_canister")
load("@buildifier_prebuilt//:rules.bzl", "buildifier")

package(default_visibility = ["//visibility:public"])

buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./.git/*",
        "./gitlab-ci/src/git_changes/test_data/**",
    ],
    lint_mode = "fix",
    mode = "fix",
)

buildifier(
    name = "buildifier.check",
    exclude_patterns = [
        "./.git/*",
        "./gitlab-ci/src/git_changes/test_data/**",
    ],
    lint_mode = "warn",
    mode = "diff",
)

cargo_build(
    name = "binaries",
    srcs = ["//rs:all_sources"],
    binaries = [
        "canister_sandbox",
        "ic-btc-adapter",
        "ic-consensus-pool-util",
        "ic-crypto-csp",
        "ic-regedit",
        "orchestrator",
        "replica",
        "state-tool",
        "vsock_agent",
    ],
    cargo_flags = [
        "--manifest-path",
        "rs/Cargo.toml",
    ],
    profile = "release-stripped",
)

cargo_build(
    name = "ledger_archive_wasm",
    srcs = ["//rs:all_sources"],
    binaries = [
        "ledger-archive-node-canister",
    ],
    cargo_flags = [
        "--manifest-path",
        "rs/Cargo.toml",
    ],
    profile = "canister-release",
    target = "wasm32-unknown-unknown",
)

optimized_canister(
    name = "ledger_archive_canister",
    wasm = ":ledger_archive_wasm",
)

CANISTERS = [
    "cycles-minting-canister",
    "genesis-token-canister",
    "governance-canister",
    "ledger-canister",
    "nns-ui-canister",
    "registry-canister",
    "root-canister",
    "sns-governance-canister",
    "sns-root-canister",
    "xnet-test-canister",
]

cargo_build(
    name = "all_canisters",
    srcs = ["//rs:all_sources"],
    binaries = CANISTERS,
    cargo_flags = [
        "--manifest-path",
        "rs/Cargo.toml",
    ],
    env_paths = {
        "LEDGER_ARCHIVE_NODE_CANISTER_WASM_PATH": "$(execpath :ledger_archive_canister)",
    },
    profile = "canister-release",
    target = "wasm32-unknown-unknown",
    deps = [
        ":ledger_archive_canister",
    ],
)

[optimized_canister(
    name = canister + "-opt.wasm",
    wasm = ":" + canister + ".wasm",
) for canister in CANISTERS]

[gzip_compress(
    name = canister + ".wasm.gz",
    srcs = [":" + canister + "-opt.wasm"],
) for canister in CANISTERS]
