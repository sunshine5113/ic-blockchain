proxy_cache_path /var/cache/nginx/rosetta levels=1:2 keys_zone=cache_rosetta:10m max_size=1000m inactive=10m use_temp_path=off;

# Rate limiting based on fields in the CBOR.
# Note: Some rate limits are defined in nginx_global.conf.  This CBOR rate limit relies on the CBOR contents variable
#       defined in the server section below, so the rate limit is defined locally.
# Note: We MAY want to define the identity canister ID in ansible.
#       Disadvantage:  Increased indirection.
#       Advantage:  It is changed in one place.
#       Disadvantage:  Ansible does not derive values from the Rust code, where the identity canister originates, so
#                      if the identity changes, Ansible will not help by automatically updating this value.
#       Evaluation of advantage: At present this ID is used in one place in ansible.
#       At present the disadvantages outweigh the advantage, so we keep the value here.
limit_req_zone $cbor_rate_limit_rosetta_1rpm zone=cbor_key_rate_limit_rosetta_1rpm:1m rate=1r/m;
map $cbor_key $cbor_rate_limit_rosetta_1rpm {
    default                                                    "";
    "~^call[.][^.]*[.]00000000000000070101[.]register[.].*"    $binary_remote_addr; # Rate limit identity creation.
}


server {
    allow 2a00:fb01:400::/56;
    allow 2607:fb58:9005::/48;
    allow 2607:f6f0:3004::/48;
    allow 212.71.124.194;
    allow 149.97.209.182;
    allow 54.85.1.24;
    allow 34.224.245.49;
    allow 54.205.248.136;
    allow 52.0.183.139;
    allow 34.198.224.121;
    allow 50.19.243.132;
    allow 184.73.195.123;
    allow 52.23.35.172;
    allow 34.202.32.58;
    allow 50.16.21.213;
    allow 3.227.72.188;
    allow 3.214.85.212;
    allow 87.239.207.244;
    allow 172.111.167.93;
    allow 54.250.134.234;
    allow 18.176.155.169;
    allow 3.112.138.57;
    allow 54.238.51.31;
    allow 13.114.212.150;
    allow 52.197.6.219;
    allow 18.179.76.71;
    allow 13.230.19.97;
    allow 52.194.107.16;
    allow 54.248.13.68;
    allow 18.176.159.241;
    allow 47.52.252.183;
    allow 35.74.17.158;
    allow 54.199.26.21;
    allow 161.117.238.176;
    allow 47.75.13.236;
    allow 13.112.52.91;
    allow 34.142.37.197;
    deny all;

    # Location of the icx-proxy from github.com/dfinity/agent.rs.
    # Requests forwarded to this server will be sent back as /api/ requests.
    set $icx_proxy 127.0.0.1:9500;

    listen 443 ssl http2;
    server_name  rosetta.dfinity.network;
    server_name  ~^(.*)\.rosetta.dfinity.network;
    server_name rosetta-exchanges.{{DOMAIN}}.{{TLD}} ;

    client_max_body_size 60M;

    root /var/www/html;
    index index.html;

    if ($denylisted) {
      return 451;
    }

    location /_/ {
        return 404;
    }

    location ~ /api/v2/canister/[0-9a-zA-Z\-]+/call {
        if ($node_id = '') {
            return 404;
        }
        set_cbor_input $cbor_key;
        limit_req zone=cbor_key_rate_limit_rosetta_1rpm burst=3 delay=2;
        limit_req zone=nns_zone burst=3 delay=2;
        limit_req zone=subnet_zone burst=100 delay=100;
        # Handles the preflight check.
        #
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            # Custom headers and headers various browsers *should* be OK with but aren't.
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            # Tell client that this pre-flight info is valid for 10 minutes. Browsers don't have to
            # respect this, but they mostly do.
            #
            add_header 'Access-Control-Max-Age' 600 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        proxy_pass https://$node_id;
        # proxy_ssl_certificate        /etc/nginx/client.pem;
        # proxy_ssl_certificate_key    /etc/nginx/client.key;
        add_header 'X-Content-Type-Options' 'nosniff' always;
        add_header 'content-type' 'application/cbor' always;
        proxy_ssl_protocols TLSv1.3;
        proxy_ssl_trusted_certificate /etc/nginx/ic/trusted_certs.pem;
        proxy_ssl_name $node_id;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 2;
    }

    location ~ /api/v2/canister/[0-9a-zA-Z\-]+/query {
        if ($node_id = '') {
            return 404;
        }
        # The following settings are disabled since they would limit the
        # effectiveness of caching. Instead we protect the upstream using
        # max_conns in upstream block.
        #
        # limit_req zone=nns_read_zone burst=30 delay=20;
        # limit_req zone=subnet_read_zone burst=100 delay=100;

        proxy_pass "https://$node_id-query";
        # proxy_ssl_certificate        /etc/nginx/client.pem;
        # proxy_ssl_certificate_key    /etc/nginx/client.key;
        add_header 'X-Content-Type-Options' 'nosniff' always;
        add_header 'content-type' 'application/cbor' always;
        proxy_ssl_protocols TLSv1.3;
        proxy_ssl_trusted_certificate /etc/nginx/ic/trusted_certs.pem;
        proxy_ssl_name $node_id;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 2;

        # Cache all queries
        set_cbor_input $cache_key;
        set $skip_cache 0;
        if ($cache_key = "") {
            set $skip_cache 1;
        }
        proxy_cache cache_rosetta;
        proxy_cache_methods POST;
        proxy_cache_key "$cache_key";
        proxy_cache_valid 1s;
        proxy_cache_use_stale updating;
        # proxy_buffers 8 32k;
        # proxy_buffer_size 64k;
        proxy_cache_bypass $skip_cache;
        proxy_no_cache $skip_cache;
    }

    location /api/v2/ {
        if ($node_id = '') {
            return 404;
        }
        set_cbor_input $cbor_key;
        limit_req zone=cbor_key_rate_limit_rosetta_1rpm burst=3 delay=2;
        limit_req zone=nns_read_zone burst=30 delay=20;
        limit_req zone=subnet_read_zone burst=100 delay=100;
        # Handles the preflight check.
        #
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            # Custom headers and headers various browsers *should* be OK with but aren't.
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            # Tell client that this pre-flight info is valid for 10 minutes. Browsers don't have to
            # respect this, but they mostly do.
            #
            add_header 'Access-Control-Max-Age' 600 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        proxy_pass https://$node_id;
        # proxy_ssl_certificate        /etc/nginx/client.pem;
        # proxy_ssl_certificate_key    /etc/nginx/client.key;
        add_header 'X-Content-Type-Options' 'nosniff' always;
        add_header 'content-type' 'application/cbor' always;
        proxy_ssl_protocols TLSv1.3;
        proxy_ssl_trusted_certificate /etc/nginx/ic/trusted_certs.pem;
        proxy_ssl_name $node_id;
        proxy_ssl_verify on;
        proxy_ssl_verify_depth 2;
    }

    location /api/ {
        return 404;
    }

    # if this is a request to the bare domain with no query parameters, redirect to the dashboard
    set $dashboard true;
    if ($host !~ ^(rosetta\.dfinity\.network|rosetta-exchanges\.{{DOMAIN_ESCAPED}}\.{{TLD}})$) {
        set $dashboard false;
    }
    if ($is_args != '') {
        set $dashboard false;
    }
    if ($uri != '/') {
        set $dashboard false;
    }
    if ($request_method != GET) {
        set $dashboard false;
    }

    location / {
        set_cbor_input $cbor_key;
        limit_req zone=cbor_key_rate_limit_rosetta_1rpm burst=3 delay=2;
        limit_req zone=http_zone burst=5000 delay=2000;
        limit_req zone=http_remote_addr_zone burst=200 delay=200;
        # Handles the preflight check.
        #
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            # Custom headers and headers various browsers *should* be OK with but aren't.
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            # Tell client that this pre-flight info is valid for 10 minutes. Browsers don't have to
            # respect this, but they mostly do.
            #
            add_header 'Access-Control-Max-Age' 600 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        # Uncomment the following to enable the default caching for /
        proxy_cache cache_rosetta;
        proxy_cache_key "$scheme://$host$request_uri";
        error_page 418 = @redirect_to_dashboard;
        recursive_error_pages on;

        if ($dashboard = true) {
            return 418;
        }

        # Forwards everything to other
        proxy_pass http://$icx_proxy;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # Remove the headers that were forced by the backend, and replace them with our own values.
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;
        proxy_hide_header Access-Control-Expose-Headers;
        add_header Access-Control-Allow-Credentials 'true' always;
        add_header Access-Control-Allow-Origin '*' always;
        add_header Access-Control-Allow-Methods 'GET, POST, HEAD, OPTIONS' always;
        add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Cookie' always;
        add_header Access-Control-Expose-Headers 'Content-Length,Content-Range' always;
        add_header X-Cache-Status $upstream_cache_status;
    }

    location @redirect_to_dashboard {
        return 302 $scheme://dashboard.internetcomputer.org;
    }
}

server {
    listen       80;
    server_name  rosetta.dfinity.network;
    server_name  ~^(.*)\.rosetta.dfinity.network;
    server_name rosetta-exchanges.{{DOMAIN}}.{{TLD}} ;

    return 301 https://$host$request_uri;
}
