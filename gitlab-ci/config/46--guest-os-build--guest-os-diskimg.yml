guest-os-diskimg:
  extends:
    - .ubuntu-nix-docker-protected
    - .rules-parent-pipeline-autorun-on-trigger
  stage: guest-os-build
  needs:
    - artifacts-upload-to-s3
    - cargo-build-release-linux-native-malicious
  variables:
      BUILD_EXTRA_ARGS: ""
      BUILD_EXTRA_SUFFIX: ""
  script:
    - |
      VERSION=$(cat VERSION)
      export VERSION
      echo "Build ID: ${VERSION}"
      "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
          --git-rev="${VERSION}" --remote-path="release" \
          --out="artifacts/release"

      "${CI_PROJECT_DIR}/gitlab-ci/tools/job-driver.py" guest-os-diskimg

# Build dev image.
#
# This is the same as the prod image with the following differences:
# - it has password "root" set for root to allow console login
guest-os-diskimg-dev:
  extends:
    - guest-os-diskimg
  variables:
      BUILD_EXTRA_ARGS: "-t dev -p root"
      BUILD_EXTRA_SUFFIX: "-dev"

# Build malicious dev image.
#
# This is the same as the dev image with the following differences:
# - the replica binary is built with the malicious_code profile
guest-os-diskimg-dev-malicious:
  extends:
    - guest-os-diskimg
  variables:
      BUILD_EXTRA_ARGS: "-t dev -p root"
      BUILD_EXTRA_SUFFIX: "-dev-malicious"

boundary-os-diskimg:
  extends:
    - .ubuntu-nix-docker-protected
    - .rules-parent-pipeline-autorun-on-trigger
  stage: guest-os-build
  needs:
    - artifacts-upload-to-s3
  variables:
      BUILD_EXTRA_ARGS: ""  # We keep this as a dev image might soon follow, e.g. due to ssh access
      BUILD_EXTRA_SUFFIX: ""
  script:
    - |
      set -xeuo pipefail

      VERSION=$(cat VERSION)
      export VERSION
      echo "Build ID: ${VERSION}"
      "$CI_PROJECT_DIR"/gitlab-ci/src/artifacts/rclone_download.py \
          --git-rev="${VERSION}" --remote-path="release" \
          --out="artifacts/release"

      # artifacts/release dir with binaries come from cargo-build-release-linux-native
      cd "${CI_PROJECT_DIR}"/ic-os/boundary-guestos

      BUILD_OUT="build-out/disk-img${BUILD_EXTRA_SUFFIX}"
      BUILD_TMP="build-tmp${BUILD_EXTRA_SUFFIX}"
      UPLOAD_TARGET="boundary-os/disk-img${BUILD_EXTRA_SUFFIX}"

      # shellcheck disable=SC2086  # Expanding BUILD_EXTRA_ARGS into multiple parameters
      capsule --passive -v -t "$(openssl sha256 <<<${BUILD_EXTRA_ARGS}${BUILD_EXTRA_SUFFIX})" -t "${VERSION}" -o "${BUILD_OUT}/**/*" -- \
      "${CI_PROJECT_DIR}"/gitlab-ci/src/job_scripts/lib/boundary-os-diskimg.sh \
        "$BUILD_OUT" "$BUILD_TMP" "$UPLOAD_TARGET" "$VERSION" "$CDPRNET"
      buildevents cmd "$ROOT_PIPELINE_ID" "$CI_JOB_ID" rclone -- \
      "${CI_PROJECT_DIR}"/gitlab-ci/src/artifacts/rclone_upload.py --version="${VERSION}" "$BUILD_OUT" "$UPLOAD_TARGET"
      echo "Build ID (real or fake git revision): ${VERSION}"

# Build dev image.
#
# This is the same as the prod image with the following differences:
# - it has password "root" set for root to allow console login
boundary-os-diskimg-dev:
  extends:
    - boundary-os-diskimg
  variables:
      BUILD_EXTRA_ARGS: "-p root"
      BUILD_EXTRA_SUFFIX: "-dev"
