cargo-lock-generate:
  extends: .ubuntu-nix-docker
  needs: []  # don't wait on other jobs
  stage: test
  script:
    - |
      echo "Running a tiny cargo check (should always succeed), just to make sure Cargo.lock is up to date"
      set -exuo pipefail
      cd "${CI_PROJECT_DIR}/rs"
      nix-shell --run "cargo check -p ic-sys"
      cd "${CI_PROJECT_DIR}"
    - |
      set -exuo pipefail
      git add rs/Cargo.lock
      git status
      if ! git diff --cached --quiet; then
        # If a merge request and not on a merge train then update the Cargo.lock file in the MR automatically.
        if [ "$CI_PIPELINE_SOURCE" = "merge_request_event" ]  && [ "$CI_MERGE_REQUEST_EVENT_TYPE" != "merge_train" ];then
          # There are some changes staged
          # Command might fail because the gitlab remote already exists from a previous run.
          git remote add origin "https://gitlab-ci-token:${GITLAB_API_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git" || true
          git remote set-url origin "https://gitlab-ci-token:${GITLAB_API_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git" || true
          git config --global user.email "infra+gitlab-automation@dfinity.org"
          git config --global user.name "IDX GitLab Automation"
          git commit -m"Automatically updated rs/Cargo.lock"
          git push origin HEAD:"${CI_COMMIT_REF_NAME}"
        fi

        # Force the pipeline to fail so MRs cannot be merged with a stale cargo lockfile.
        exit 1
      fi
